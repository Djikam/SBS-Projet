{"ast":null,"code":"const actions = {\n  async fetchAgences({\n    commit\n  }) {\n    try {\n      const response = await getWithCache('/agences', {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      commit('SET_AGENCES', response.data.agences);\n    } catch (error) {\n      console.error(\"Error fetching agences:\", error);\n    }\n  },\n  async addAgence({\n    commit,\n    dispatch\n  }, agence) {\n    try {\n      const response = await getWithCache(\"/agences\", {\n        method: 'POST',\n        data: agence,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      const newAgence = response.data; // Assurez-vous que la réponse contient les données de la nouvelle agence\n\n      commit('ADD_AGENCE', newAgence);\n      commit('SET_SHOW_ADD_MODAL', false);\n      commit('SET_CURRENT_AGENCE', {\n        id: null,\n        name: \"\",\n        pays: \"\"\n      });\n\n      // Récupérer et afficher la liste des agences après l'ajout\n      await dispatch('fetchAgences');\n    } catch (error) {\n      console.error(error);\n    }\n  },\n  async updateAgence({\n    commit,\n    dispatch\n  }, agence) {\n    try {\n      const response = await getWithCache(`/agences/${agence.id}`, {\n        method: 'PUT',\n        data: agence,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      const updatedAgence = response.data; // Assurez-vous que la réponse contient les données de l'agence mise à jour\n      commit('UPDATE_AGENCE', updatedAgence);\n      commit('SET_SHOW_EDIT_MODAL', false);\n      commit('SET_CURRENT_AGENCE', {\n        id: null,\n        name: \"\",\n        pays: \"\"\n      });\n\n      // Récupérer et afficher la liste des agences après la mise à jour\n      await dispatch('fetchAgences');\n    } catch (error) {\n      console.error(error);\n    }\n  },\n  async deleteAgence({\n    commit,\n    dispatch\n  }, id) {\n    if (confirm(\"Êtes-vous sûr de vouloir supprimer cette agence ?\")) {\n      try {\n        await getWithCache(`/agences/${id}`, {\n          method: 'DELETE',\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        commit('DELETE_AGENCE', id);\n\n        // Récupérer et afficher la liste des agences après la suppression\n        await dispatch('fetchAgences');\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["actions","fetchAgences","commit","response","getWithCache","headers","Authorization","localStorage","getItem","data","agences","error","console","addAgence","dispatch","agence","method","newAgence","id","name","pays","updateAgence","updatedAgence","deleteAgence","confirm"],"sources":["C:/Users/gongue/Desktop/frontsbs/src/store/modules/agences.js"],"sourcesContent":["const actions = {\r\n    async fetchAgences({ commit }) {\r\n        try {\r\n            const response = await getWithCache('/agences', {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            });\r\n            commit('SET_AGENCES', response.data.agences);\r\n        } catch (error) {\r\n            console.error(\"Error fetching agences:\", error);\r\n        }\r\n    },\r\n    async addAgence({ commit, dispatch }, agence) {\r\n        try {\r\n            const response = await getWithCache(\"/agences\", {\r\n                method: 'POST',\r\n                data: agence,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            });\r\n            const newAgence = response.data; // Assurez-vous que la réponse contient les données de la nouvelle agence\r\n\r\n            commit('ADD_AGENCE', newAgence);\r\n            commit('SET_SHOW_ADD_MODAL', false);\r\n            commit('SET_CURRENT_AGENCE', { id: null, name: \"\", pays: \"\" });\r\n\r\n            // Récupérer et afficher la liste des agences après l'ajout\r\n            await dispatch('fetchAgences');\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    },\r\n    async updateAgence({ commit, dispatch }, agence) {\r\n        try {\r\n            const response = await getWithCache(`/agences/${agence.id}`, {\r\n                method: 'PUT',\r\n                data: agence,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            });\r\n            const updatedAgence = response.data; // Assurez-vous que la réponse contient les données de l'agence mise à jour\r\n            commit('UPDATE_AGENCE', updatedAgence);\r\n            commit('SET_SHOW_EDIT_MODAL', false);\r\n            commit('SET_CURRENT_AGENCE', { id: null, name: \"\", pays: \"\" });\r\n\r\n            // Récupérer et afficher la liste des agences après la mise à jour\r\n            await dispatch('fetchAgences');\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    },\r\n    async deleteAgence({ commit, dispatch }, id) {\r\n        if (confirm(\"Êtes-vous sûr de vouloir supprimer cette agence ?\")) {\r\n            try {\r\n                await getWithCache(`/agences/${id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                    },\r\n                });\r\n                commit('DELETE_AGENCE', id);\r\n\r\n                // Récupérer et afficher la liste des agences après la suppression\r\n                await dispatch('fetchAgences');\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n    },\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}