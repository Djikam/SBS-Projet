{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.flat-map.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { format } from \"date-fns\";\nimport axios from \"axios\";\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport ExcelJS from 'exceljs';\nimport { API_URL } from '@/config'; // Importer API_URL\n\nexport default {\n  data() {\n    return {\n      colorMapping: {\n        1: {\n          name: 'Mission confirmée',\n          class: 'bg-orange-400'\n        },\n        2: {\n          name: 'Prévision de Mission',\n          class: 'bg-yellow-400'\n        },\n        3: {\n          name: 'Voyage',\n          class: 'bg-sky-400'\n        },\n        4: {\n          name: 'Congé',\n          class: 'bg-blue-300'\n        },\n        5: {\n          name: 'Formation',\n          class: 'bg-blue-500'\n        },\n        6: {\n          name: 'Récupération',\n          class: 'bg-red-200'\n        },\n        7: {\n          name: 'Congé maladie',\n          class: 'bg-purple-600'\n        },\n        8: {\n          name: 'Université',\n          class: 'bg-sky-600'\n        },\n        9: {\n          name: 'Avant Vente',\n          class: 'bg-teal-300'\n        },\n        10: {\n          name: 'Prévision de Congé',\n          class: 'bg-orange-600'\n        },\n        // Nouvelle couleur pour Prévision de Mission\n        11: {\n          name: 'Prévision de Récupération',\n          class: 'bg-indigo-400'\n        },\n        // Nouvelle couleur pour Prévision de Récupération\n        12: {\n          name: 'Prévision de Formation',\n          class: 'bg-pink-400'\n        },\n        // Nouvelle couleur pour Prévision de Formation\n        default: {\n          name: 'Inconnu',\n          class: 'bg-blue-400'\n        }\n      },\n      isExportModalOpen: false,\n      currentYear: new Date().getFullYear(),\n      currentMonth: new Date().getMonth(),\n      monthsOfYear: [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\", \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Décembre\"],\n      currentDay: new Date().getDate(),\n      viewMode: \"year\",\n      //  month or year\n      resources: [],\n      events: [],\n      selectedClientId: \"\",\n      clientSearch: \"\",\n      // Barre de recherche pour le filtre\n      clients: [],\n      // Assurez-vous que `clients` contient les données de vos clients\n      joursFeries: [],\n      agences: [],\n      bangeResults: [],\n      isBANGEModalOpen: false,\n      bangeStartDate: \"\",\n      bangeEndDate: \"\",\n      searchStartDate: \"\",\n      searchEndDate: \"\",\n      tnfSearchResults: [],\n      isEventModalOpen: false,\n      selectedEvent: {},\n      hoveredEvent: null,\n      hoveredDay: null,\n      selectedClientColor: \"\",\n      comment: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      user_id: null,\n      selectedPays: \"\",\n      totalTNF: 0,\n      totalConsultants: 0,\n      totalInterventionDays: 0\n    };\n  },\n  computed: {\n    filteredClients() {\n      return this.clients.filter(client => client.nom.toLowerCase().includes(this.clientSearch.toLowerCase()));\n    },\n    displayPeriod() {\n      if (this.viewMode === \"month\") {\n        const firstDayOfMonth = new Date(this.currentYear, this.currentMonth, 1);\n        return format(firstDayOfMonth, \"MMMM yyyy\");\n      } else if (this.viewMode === \"year\") {\n        const firstDayOfYear = new Date(this.currentYear, 0, 1);\n        return format(firstDayOfYear, \"yyyy\");\n      } else {\n        return `${this.currentYear}`;\n      }\n    },\n    formattedJoursFeries() {\n      // Format the public holidays to only include the date in 'yyyy-MM-dd' format\n      return this.joursFeries.map(jourFerie => ({\n        date: format(new Date(jourFerie.date_ferie), \"yyyy-MM-dd\"),\n        // Keep the date format\n        name: jourFerie.nom_ferie\n      }));\n    },\n    periodDays() {\n      return this.viewMode === \"month\" ? this.getDaysInMonth() : this.getDaysInYear();\n    },\n    filteredResources() {\n      let filtered = this.resources;\n\n      // Filter by client name\n      if (this.clientSearch) {\n        // Find resource IDs that have interventions matching the client name\n        const matchingResourceIds = new Set(this.events.filter(event => event.clientName.toLowerCase().includes(this.clientSearch.toLowerCase())).map(event => event.resourceId));\n\n        // Filter resources based on matching IDs\n        filtered = this.resources.filter(resource => matchingResourceIds.has(resource.id));\n      }\n\n      // Filter by date range\n      if (this.searchStartDate && this.searchEndDate) {\n        const startDate = new Date(this.searchStartDate);\n        const endDate = new Date(this.searchEndDate);\n        filtered = filtered.filter(resource => {\n          const tnfDays = this.getTNFDaysInPeriod(resource, startDate, endDate);\n          return tnfDays.length > 0;\n        });\n      }\n\n      // Filter by selected agency\n      if (this.selectedPays) {\n        filtered = filtered.filter(resource => resource.agence && resource.agence.pays === this.selectedPays);\n      }\n      return filtered;\n    },\n    // Nouvelle propriété calculée pour récupérer les événements par jour et ressource\n    filteredEventsByDay() {\n      const filteredEvents = {};\n      this.filteredResources.forEach(resource => {\n        filteredEvents[resource.name] = {};\n        const days = this.viewMode === \"month\" ? this.getDaysInMonth() : this.getDaysInYear().flatMap(month => month.days);\n        days.forEach(day => {\n          const dayDate = new Date(this.currentYear, this.viewMode === \"month\" ? this.currentMonth : 0, typeof day === \"number\" ? day : day.day);\n          filteredEvents[resource.name][day] = this.events.filter(event => event.resource === resource.name && this.isEventOnDay(event, dayDate));\n        });\n      });\n      return filteredEvents;\n    },\n    statisticsByColor() {\n      return this.calculateStatisticsByColor();\n    }\n  },\n  watch: {\n    searchStartDate() {\n      this.updateView();\n      this.updateStatistics();\n    },\n    searchEndDate() {\n      this.updateView();\n      this.updateStatistics();\n    },\n    clientSearch() {\n      this.updateView();\n      this.updateStatistics();\n    },\n    selectedPays() {\n      this.fetchJoursFeries();\n      this.fetchResourcesAndEvents();\n      this.updateStatistics();\n    }\n  },\n  mounted() {\n    this.fetchResourcesAndEvents();\n    this.fetchClients();\n    this.fetchJoursFeries();\n    this.fetchAgences();\n    this.updateStatistics();\n  },\n  methods: {\n    calculateTotalTNF() {\n      let total = 0;\n      this.resources.forEach(resource => {\n        total += this.getTNFDaysInPeriod(resource, this.searchStartDate, this.searchEndDate).length;\n      });\n      this.totalTNF = total;\n    },\n    calculateTotalConsultants() {\n      this.totalConsultants = this.resources.length;\n    },\n    calculateTotalInterventionDays() {\n      let total = 0;\n      this.events.forEach(event => {\n        const start = new Date(event.startDate);\n        const end = new Date(event.endDate);\n        const duration = (end - start) / (1000 * 60 * 60 * 24) + 1; // Durée en jours\n        total += duration;\n      });\n      this.totalInterventionDays = total;\n    },\n    updateStatistics() {\n      this.calculateTotalTNF();\n      this.calculateTotalConsultants();\n      this.calculateTotalInterventionDays();\n    },\n    openExportModal() {\n      this.isExportModalOpen = true;\n    },\n    closeExportModal() {\n      this.isExportModalOpen = false;\n      this.endDate = \"\";\n      this.startDate = \"\";\n    },\n    exportToXLSX() {\n      const workbook = new ExcelJS.Workbook();\n      const worksheet = workbook.addWorksheet('Interventions');\n\n      // Définir les colonnes\n      worksheet.columns = [{\n        header: 'Numero',\n        key: 'Numero',\n        width: 10\n      }, {\n        header: 'Ressource',\n        key: 'Ressource',\n        width: 20\n      }, {\n        header: 'Date de debut',\n        key: 'Date_de_debut',\n        width: 20\n      }, {\n        header: 'Date de fin',\n        key: 'Date_de_fin',\n        width: 20\n      }, {\n        header: 'Client',\n        key: 'Client',\n        width: 20\n      }, {\n        header: 'Commentaire',\n        key: 'Commentaire',\n        width: 30\n      }, {\n        header: 'Abbreviation',\n        key: 'Abbreviation',\n        width: 15\n      }];\n\n      // Vérifier si les dates sont sélectionnées\n      let filteredEvents = this.events;\n      if (this.startDate && this.endDate) {\n        filteredEvents = this.events.filter(event => {\n          const eventStartDate = new Date(event.startDate);\n          const eventEndDate = new Date(event.endDate);\n          const start = new Date(this.startDate);\n          const end = new Date(this.endDate);\n          return eventStartDate >= start && eventEndDate <= end;\n        });\n      }\n\n      // Ajouter les données\n      filteredEvents.forEach((event, index) => {\n        worksheet.addRow({\n          Numero: index + 1,\n          Ressource: event.resource,\n          Date_de_debut: event.startDate,\n          Date_de_fin: event.endDate,\n          Client: event.clientName,\n          Commentaire: event.name,\n          Abbreviation: event.clientAbbreviation\n        });\n      });\n\n      // Styliser l'entête avec un gradient violet et rose\n      const headerRow = worksheet.getRow(1);\n      headerRow.eachCell(cell => {\n        cell.fill = {\n          type: 'gradient',\n          gradient: 'angle',\n          degree: 0,\n          stops: [{\n            position: 0,\n            color: {\n              argb: 'FF69B4'\n            }\n          },\n          // Rose\n          {\n            position: 1,\n            color: {\n              argb: '800080'\n            }\n          } // Violet\n          ]\n        };\n        cell.font = {\n          color: {\n            argb: 'FFFFFF'\n          },\n          bold: true\n        };\n        cell.alignment = {\n          horizontal: 'center',\n          vertical: 'middle'\n        };\n      });\n\n      // Obtenir la date actuelle\n      const currentDate = new Date().toLocaleDateString().replace(/\\//g, '-');\n\n      // Enregistrer le fichier avec la date d'exportation dans le nom\n      workbook.xlsx.writeBuffer().then(data => {\n        const blob = new Blob([data], {\n          type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n        });\n        const link = document.createElement('a');\n        link.href = URL.createObjectURL(blob);\n        link.download = `Staffings_${currentDate}.xlsx`;\n        link.click();\n        URL.revokeObjectURL(link.href);\n      });\n\n      // Fermer le modal après l'exportation\n      this.closeExportModal();\n    },\n    exportToPDF() {\n      // Définir le format A4\n      const doc = new jsPDF({\n        orientation: 'portrait',\n        unit: 'mm',\n        format: [210, 297]\n      });\n\n      // Définir les colonnes et les données\n      const columns = [{\n        header: 'Numero',\n        dataKey: 'Numero'\n      }, {\n        header: 'Ressource',\n        dataKey: 'Ressource'\n      }, {\n        header: 'Date de debut',\n        dataKey: 'Date_de_debut'\n      }, {\n        header: 'Date de fin',\n        dataKey: 'Date_de_fin'\n      }, {\n        header: 'Client',\n        dataKey: 'Client'\n      }, {\n        header: 'Commentaire',\n        dataKey: 'Commentaire'\n      }, {\n        header: 'Abbreviation',\n        dataKey: 'Abbreviation'\n      }];\n\n      // Vérifier si les dates sont sélectionnées\n      let filteredEvents = this.events;\n      if (this.startDate && this.endDate) {\n        filteredEvents = this.events.filter(event => {\n          const eventStartDate = new Date(event.startDate);\n          const eventEndDate = new Date(event.endDate);\n          const start = new Date(this.startDate);\n          const end = new Date(this.endDate);\n          return eventStartDate >= start && eventEndDate <= end;\n        });\n      }\n      const data = filteredEvents.map((event, index) => ({\n        Numero: index + 1,\n        Ressource: event.resource,\n        Date_de_debut: event.startDate,\n        Date_de_fin: event.endDate,\n        Client: event.clientName,\n        Commentaire: event.name,\n        Abbreviation: event.clientAbbreviation\n      }));\n\n      // Ajouter le tableau au PDF\n      doc.autoTable({\n        head: [columns.map(col => col.header)],\n        body: data.map(row => columns.map(col => row[col.dataKey])),\n        startY: 20,\n        styles: {\n          fillColor: [240, 240, 240],\n          // Blanc légèrement gris\n          textColor: [0, 0, 0],\n          // Noir\n          fontStyle: 'normal',\n          halign: 'center',\n          valign: 'middle',\n          cellPadding: 5\n        },\n        headStyles: {\n          fillColor: [128, 0, 128],\n          // Violet\n          textColor: [255, 255, 255],\n          fontStyle: 'bold',\n          halign: 'center',\n          valign: 'middle',\n          cellPadding: 5\n        }\n      });\n\n      // Obtenir la date actuelle\n      const currentDate = new Date().toLocaleDateString().replace(/\\//g, '-');\n\n      // Enregistrer le PDF avec la date d'exportation dans le nom\n      doc.save(`Staffings_${currentDate}.pdf`);\n\n      // Fermer le modal après l'exportation\n      this.closeExportModal();\n    },\n    async fetchAgences() {\n      try {\n        const response = await axios.get(`${API_URL}/agences`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        this.agences = response.data.agences;\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des agences:\", error);\n      }\n    },\n    filterInterventionsByClientName(clientName) {\n      const lowerCaseClientName = clientName.toLowerCase();\n      return this.events.filter(event => event.clientName.toLowerCase().includes(lowerCaseClientName));\n    },\n    calculateBANGE(startDate, endDate) {\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      let totalBANGE = 0;\n      let currentWeekStart = new Date(start);\n      while (currentWeekStart <= end) {\n        const weekEnd = new Date(currentWeekStart);\n        weekEnd.setDate(currentWeekStart.getDate() + 6);\n        let totalTNF = 0;\n        let workingDays = 0;\n        for (let d = new Date(currentWeekStart); d <= weekEnd; d.setDate(d.getDate() + 1)) {\n          const {\n            isWeekend\n          } = this.isWeekend(d.getDate(), d.getMonth());\n          const isHoliday = this.isJourFerie(d.getDate(), d.getMonth());\n          if (isHoliday) {\n            continue;\n          }\n          if (isWeekend) {\n            console.log(\"holiday\");\n          } else {\n            workingDays++;\n            this.resources.forEach(resource => {\n              const events = this.getEventsForMonth(resource.name, d.getMonth(), d.getDate());\n              if (!events || events.length === 0) {\n                totalTNF++;\n              }\n            });\n          }\n        }\n        const etp = workingDays > 0 ? Math.min(workingDays, 5) : 0; // Limite à 5 jours max\n        const weeklyBANGE = etp > 0 ? (totalTNF / etp).toFixed(1) : 0;\n        totalBANGE += parseFloat(weeklyBANGE);\n        currentWeekStart.setDate(currentWeekStart.getDate() + 7); // Passe à la semaine suivante\n      }\n      return totalBANGE.toFixed(1); // Retourne le total formaté\n    },\n    calculateAndDisplayBANGE() {\n      if (this.bangeStartDate && this.bangeEndDate) {\n        const bangeResult = this.calculateBANGE(this.bangeStartDate, this.bangeEndDate);\n        this.bangeResults.push({\n          date: `${this.bangeStartDate} - ${this.bangeEndDate}`,\n          bange: bangeResult\n        });\n        this.isBANGEModalOpen = true;\n      } else {\n        alert(\"Veuillez sélectionner une date de début et une date de fin.\");\n      }\n    },\n    closeBANGEModal() {\n      this.isBANGEModalOpen = false;\n      this.bangeStartDate = \"\";\n      this.bangeEndDate = \"\";\n      this.bangeResults = [];\n    },\n    getDayAbbreviation(date) {\n      const days = [\"dim\", \"lun\", \"mar\", \"mer\", \"jeu\", \"ven\", \"sam\"];\n      return days[date.getDay()];\n    },\n    isWednesday(day, monthIndex) {\n      const date = new Date(this.currentYear, monthIndex, day);\n      return date.getDay() === 3; // 3 représente mercredi (0 = dimanche, 1 = lundi, etc.)\n    },\n    // Modifiez la méthode getWeeklyBANGE pour prendre en compte le monthIndex\n    getWeeklyBANGE(day, monthIndex = null) {\n      // Détermine la date de la semaine à partir du jour donné\n      const initialDate = new Date(this.currentYear, monthIndex !== null ? monthIndex : this.currentMonth, day);\n\n      // Ajuste le début de la semaine au lundi\n      const weekStart = new Date(initialDate);\n      const dayOfWeek = weekStart.getDay(); // 0 = Dimanche, 1 = Lundi, ..., 6 = Samedi\n      const offsetToMonday = dayOfWeek === 0 ? -6 : 1 - dayOfWeek; // Ajustement vers le lundi\n      weekStart.setDate(weekStart.getDate() + offsetToMonday);\n\n      // Fixe la fin de la semaine au vendredi (4 jours après lundi)\n      const weekEnd = new Date(weekStart);\n      weekEnd.setDate(weekStart.getDate() + 4);\n      let totalTNF = 0; // Compteur des jours sans événements\n      let workingDays = 0; // Compteur des jours ouvrables\n\n      // Parcourt chaque jour de la semaine (lundi à vendredi)\n      for (let d = new Date(weekStart); d <= weekEnd; d.setDate(d.getDate() + 1)) {\n        const isHoliday = this.isJourFerie(d.getDate(), d.getMonth()); // Vérifie si le jour est férié\n\n        if (isHoliday) {\n          // Ignore les jours fériés\n          continue;\n        }\n\n        // Tous les jours de lundi à vendredi sont considérés ouvrables ici\n        workingDays++; // Incrémente les jours ouvrables\n\n        // Vérifie les événements pour chaque ressource\n        this.resources.forEach(resource => {\n          const events = this.getEventsForMonth(resource.name, d.getMonth(), d.getDate());\n          if (!events || events.length === 0) {\n            // Si aucun événement trouvé, incrémente TNF\n            totalTNF++;\n          }\n        });\n      }\n\n      // Calcule l'ETP (équivalent temps plein), limité à un maximum de 5 jours par semaine\n      const etp = workingDays > 0 ? Math.min(workingDays, 5) : 0;\n\n      // Calcule le ratio BANGE pour la semaine\n      const bange = etp > 0 ? (totalTNF / etp).toFixed(1) : 0;\n\n      // Retourne le BANGE pour la semaine\n      return {\n        bange\n      };\n    },\n    // Nouvelle méthode pour calculer le BANGE mensuel\n    getMonthlyBANGE() {\n      const start = new Date(this.currentYear, this.currentMonth, 1);\n      const end = new Date(this.currentYear, this.currentMonth + 1, 0);\n      let totalBANGE = 0;\n      let currentWeekStart = new Date(start);\n      while (currentWeekStart <= end) {\n        const weekEnd = new Date(currentWeekStart);\n        weekEnd.setDate(currentWeekStart.getDate() + 6);\n        let totalTNF = 0;\n        let workingDays = 0;\n        for (let d = new Date(currentWeekStart); d <= weekEnd; d.setDate(d.getDate() + 1)) {\n          const dayOfWeek = d.getDay();\n          if (dayOfWeek !== 0 && dayOfWeek !== 6 && !this.isJourFerie(d.getDate(), d.getMonth())) {\n            workingDays++;\n            this.resources.forEach(resource => {\n              const events = this.getEventsForMonth(resource.name, d.getMonth(), d.getDate());\n              if (!events || events.length === 0) {\n                totalTNF++;\n              }\n            });\n          }\n        }\n        const etp = workingDays > 0 ? Math.min(workingDays, 5) : 0;\n        const weeklyBANGE = etp > 0 ? (totalTNF / etp).toFixed(1) : 0;\n        totalBANGE += parseFloat(weeklyBANGE);\n        currentWeekStart.setDate(currentWeekStart.getDate() + 7);\n      }\n      return totalBANGE.toFixed(1);\n    },\n    getJourFerieName(day, monthIndex = null) {\n      const date = new Date(this.currentYear, monthIndex !== null ? monthIndex : this.currentMonth, typeof day === \"number\" ? day : new Date(day).getDate());\n      const formattedDate = format(date, \"yyyy-MM-dd\");\n      const jourFerie = this.formattedJoursFeries.find(jour => jour.date === formattedDate);\n      return jourFerie ? jourFerie.name : \"Férié\";\n    },\n    isJourFerie(day, monthIndex = null) {\n      const date = new Date(this.currentYear, monthIndex !== null ? monthIndex : this.currentMonth, typeof day === \"number\" ? day : new Date(day).getDate());\n      const formattedDate = format(date, \"yyyy-MM-dd\");\n      const isHoliday = this.formattedJoursFeries.some(jour => jour.date === formattedDate);\n      return isHoliday;\n    },\n    calculateBusinessDays(startDate, endDate) {\n      let count = 0;\n      const currentDate = new Date(startDate);\n      while (currentDate <= endDate) {\n        const dayOfWeek = currentDate.getDay();\n        if (dayOfWeek !== 0 && dayOfWeek !== 6) {\n          count++;\n        }\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n      return count;\n    },\n    showComment(event, day) {\n      this.hoveredEvent = event;\n      this.hoveredDay = day;\n    },\n    hideComment() {\n      this.hoveredEvent = null;\n      this.hoveredDay = null;\n    },\n    // Remplacer la méthode searchTNF par updateView\n    updateView() {\n      if (this.searchStartDate && this.searchEndDate) {\n        const startDate = new Date(this.searchStartDate);\n        this.currentYear = startDate.getFullYear();\n        this.currentMonth = startDate.getMonth();\n      }\n    },\n    clearDateFilters() {\n      this.searchStartDate = \"\";\n      this.searchEndDate = \"\";\n      this.updateView();\n    },\n    getTNFDaysInPeriod(resource, startDate, endDate) {\n      const tnfDays = [];\n      const resourceEvents = this.events.filter(event => event.resource === resource.name);\n      for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\n        // Ignorer les week-ends et les jours fériés\n        if (this.isWeekend(d.getDate(), d.getMonth()).isWeekend || this.isJourFerie(d.getDate(), d.getMonth())) {\n          continue;\n        }\n        const eventsOnDay = resourceEvents.filter(event => this.isEventOnDay(event, d));\n        if (eventsOnDay.length === 0) {\n          tnfDays.push(new Date(d.getFullYear(), d.getMonth(), d.getDate()));\n        }\n      }\n      return tnfDays;\n    },\n    isHighlightedTNF(resourceName, day, monthIndex) {\n      if (!this.searchStartDate || !this.searchEndDate) return false;\n      const resource = this.resources.find(r => r.name === resourceName);\n      if (!resource) return false;\n      const date = new Date(this.currentYear, monthIndex !== undefined ? monthIndex : this.currentMonth, day);\n      const startDate = new Date(this.searchStartDate);\n      const endDate = new Date(this.searchEndDate);\n\n      // Exclure le jour s'il est en dehors de la plage ou s'il est un jour férié\n      if (date < startDate || date > endDate || this.isJourFerie(day, monthIndex)) return false;\n      const tnfDays = this.getTNFDaysInPeriod(resource, startDate, endDate);\n      return tnfDays.some(tnfDay => tnfDay.getDate() === date.getDate() && tnfDay.getMonth() === date.getMonth() && tnfDay.getFullYear() === date.getFullYear());\n    },\n    async fetchJoursFeries() {\n      try {\n        const response = await axios.get(`${API_URL}/jours-feries`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        this.joursFeries = response.data.filter(jour => this.selectedPays === \"\" || jour.agence && jour.agence.pays === this.selectedPays);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des jours fériés:\", error);\n      }\n    },\n    async fetchClients() {\n      try {\n        const response = await axios.get(`${API_URL}/clients`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        this.clients = response.data;\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des clients:\", error);\n      }\n    },\n    updateSelectedClient() {\n      const selectedClient = this.clients.find(client => client.id === this.selectedClientId);\n      if (selectedClient) {\n        this.selectedClientColor = selectedClient.color;\n      }\n    },\n    async saveEvent() {\n      try {\n        await axios.post(`${API_URL}/interventions`, {\n          user_id: this.user_id,\n          client_id: this.selectedClientId,\n          // Assurez-vous d'utiliser l'ID du client ici\n          commentaire: this.comment,\n          date_debut: this.startDate,\n          date_fin: this.endDate,\n          color: this.selectedClientColor\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        await this.fetchResourcesAndEvents();\n        this.closeEventModal();\n      } catch (error) {\n        console.error(\"Erreur lors de la sauvegarde de l'événement:\", error);\n        if (error.response) {\n          console.error(\"Détails de l'erreur:\", error.response.data);\n          // Affichez un message d'erreur utilisateur ici si nécessaire\n        }\n      }\n    },\n    async updateEvent() {\n      try {\n        await axios.post(\n        // Utilisez PUT pour les mises à jour\n        `${API_URL}/interventions/${this.selectedEvent.id}`, {\n          user_id: this.user_id,\n          client_id: this.selectedClientId,\n          // Assurez-vous d'utiliser l'ID du client ici\n          commentaire: this.comment,\n          date_debut: this.startDate,\n          date_fin: this.endDate,\n          color: this.selectedClientColor\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        await this.fetchResourcesAndEvents();\n        this.closeEventModal();\n      } catch (error) {\n        console.error(\"Erreur lors de la mise à jour de l'événement:\", error);\n        if (error.response) {\n          console.error(\"Détails de l'erreur:\", error.response.data);\n          // Affichez un message d'erreur utilisateur ici si nécessaire\n        }\n      }\n    },\n    selectClient(clientId) {\n      const client = this.clients.find(c => c.id === clientId);\n      if (client) {\n        this.selectedClient = client.nom;\n        this.selectedClientId = client.id;\n        this.selectedClientColor = client.color; // Assurez-vous que cette ligne est présente\n      } else {\n        this.selectedClient = null;\n        this.selectedClientId = null;\n        this.selectedClientColor = \"\";\n      }\n    },\n    openEventModal(day, resourceName, monthIndex = null) {\n      let selectedDate;\n      if (monthIndex !== null) {\n        selectedDate = new Date(this.currentYear, monthIndex, day);\n      } else {\n        selectedDate = new Date(this.currentYear, this.currentMonth, day);\n      }\n      if (!isNaN(selectedDate.getTime())) {\n        const headerDate = format(selectedDate, \"yyyy-MM-dd\");\n        this.startDate = headerDate;\n        const resource = this.resources.find(r => r.name === resourceName);\n        if (resource) {\n          this.selectedEvent = {\n            resourceName,\n            resourceId: resource.id,\n            day: this.startDate\n          };\n          this.user_id = resource.id;\n          const events = monthIndex !== null ? this.getEventsForMonth(resourceName, monthIndex, day) : this.filteredEventsByDay[resourceName][day];\n          const event = events && events[0];\n          if (event) {\n            const intervention = resource.interventions.find(i => i.id === event.id);\n            if (intervention) {\n              this.selectedClientId = intervention.client_id; // L'ID du client\n              this.selectedClient = intervention.client_name; // Le nom du client\n              this.comment = intervention.commentaire;\n              this.startDate = format(new Date(intervention.date_debut), \"yyyy-MM-dd\");\n              this.endDate = format(new Date(intervention.date_fin), \"yyyy-MM-dd\");\n              this.selectedClientColor = intervention.client_color, this.selectedEvent.id = intervention.id; // Marquer comme événement existant\n            }\n          } else {\n            // Réinitialiser pour un nouvel événement\n            this.selectedClient = null;\n            this.selectedClientId = null;\n            this.comment = \"\";\n            this.startDate = headerDate;\n            this.endDate = \"\";\n            this.selectedClientColor = \"\"; // Valeur par défaut\n            this.selectedEvent.id = null; // Marquer comme nouvel événement\n          }\n          this.isEventModalOpen = true; // Ouvrir le modal\n        }\n      }\n    },\n    async deleteEvent() {\n      try {\n        await axios.delete(`${API_URL}/interventions/${this.selectedEvent.id}`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        await this.fetchResourcesAndEvents();\n        this.closeEventModal();\n      } catch (error) {\n        console.error(\"Erreur lors de la suppression de l'événement:\", error);\n        if (error.response) {\n          console.error(\"Détails de l'erreur:\", error.response.data);\n        }\n      }\n    },\n    closeEventModal() {\n      this.isEventModalOpen = false;\n      this.selectedEvent = {};\n      this.selectedClient = null;\n      this.comment = \"\";\n      this.startDate = \"\";\n      this.endDate = \"\";\n      this.selectedClientColor = \"\";\n    },\n    resetToToday() {\n      const today = new Date();\n      this.currentYear = today.getFullYear();\n      this.currentMonth = today.getMonth();\n      this.currentDay = today.getDate();\n    },\n    prevPeriod() {\n      if (this.viewMode === \"month\") {\n        this.currentMonth--;\n        if (this.currentMonth < 0) {\n          this.currentMonth = 11;\n          this.currentYear--;\n        }\n      } else {\n        this.currentYear--;\n      }\n      this.fetchJoursFeries(); // Ajoutez cette ligne\n    },\n    nextPeriod() {\n      if (this.viewMode === \"month\") {\n        this.currentMonth++;\n        if (this.currentMonth > 11) {\n          this.currentMonth = 0;\n          this.currentYear++;\n        }\n      } else {\n        this.currentYear++;\n      }\n      this.fetchJoursFeries(); // Ajoutez cette ligne\n    },\n    getDayLabel(index, day) {\n      const dayDate = new Date(this.currentYear, this.currentMonth, day);\n      return format(dayDate, \"EEE dd\");\n    },\n    getDaysInMonth(monthIndex = null) {\n      const month = monthIndex !== null ? monthIndex : this.currentMonth;\n      const daysInMonth = new Date(this.currentYear, month + 1, 0).getDate();\n      return Array.from({\n        length: daysInMonth\n      }, (_, i) => i + 1);\n    },\n    getDaysInYear() {\n      const months = [];\n      for (let month = 0; month < 12; month++) {\n        const daysInMonth = new Date(this.currentYear, month + 1, 0).getDate();\n        const days = Array.from({\n          length: daysInMonth\n        }, (_, i) => i + 1);\n        months.push({\n          month: format(new Date(this.currentYear, month), \"MMMM\"),\n          days\n        });\n      }\n      return months;\n    },\n    isWeekend(day, month = this.currentMonth) {\n      const date = new Date(this.currentYear, month, day);\n      const dayOfWeek = date.getDay();\n      return {\n        isWeekend: dayOfWeek === 0 || dayOfWeek === 6,\n        dayOfWeek\n      };\n    },\n    isEventOnDay(event, day) {\n      const eventStart = new Date(event.startDate);\n      const eventEnd = new Date(event.endDate);\n      const dayOfWeek = day.getDay();\n      const isWeekend = dayOfWeek === 0 || dayOfWeek === 6;\n      const dayDate = new Date(day.getFullYear(), day.getMonth(), day.getDate());\n      const eventStartDate = new Date(eventStart.getFullYear(), eventStart.getMonth(), eventStart.getDate());\n      const eventEndDate = new Date(eventEnd.getFullYear(), eventEnd.getMonth(), eventEnd.getDate());\n      if (isWeekend) {\n        // Pour les week-ends, afficher uniquement les événements qui commencent un week-end\n        return (eventStart.getDay() === 0 || eventStart.getDay() === 6) && dayDate >= eventStartDate && dayDate <= eventEndDate;\n      } else {\n        // Pour les jours de semaine, afficher uniquement les événements qui commencent un jour de semaine\n        return eventStart.getDay() !== 0 && eventStart.getDay() !== 6 && dayDate >= eventStartDate && dayDate <= eventEndDate;\n      }\n    },\n    getEventsForMonth(resourceName, monthIndex, day) {\n      const date = new Date(this.currentYear, monthIndex, day);\n      return this.events.filter(event => event.resource === resourceName && this.isEventOnDay(event, date));\n    },\n    async fetchResourcesAndEvents() {\n      try {\n        const response = await axios.get(`${API_URL}/interventions`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        const data = response.data;\n        this.resources = data.map(user => ({\n          id: user.id,\n          name: user.name,\n          agence: user.agence,\n          interventions: user.interventions\n        }));\n        this.events = data.flatMap(user => user.interventions.map(intervention => ({\n          id: intervention.id,\n          name: intervention.commentaire,\n          startDate: intervention.date_debut,\n          endDate: intervention.date_fin,\n          resource: user.name,\n          color: intervention.client_color,\n          resourceId: user.id,\n          clientAbbreviation: intervention.client_abbreviation,\n          clientName: intervention.client_name\n        })));\n\n        // Filtrer les utilisateurs et les jours fériés en fonction de l'agence sélectionnée\n        if (this.selectedPays) {\n          this.resources = this.resources.filter(resource => resource.agence && resource.agence.pays === this.selectedPays);\n          this.joursFeries = this.joursFeries.filter(jour => jour.agence && jour.agence.pays === this.selectedPays);\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des données:\", error);\n      }\n    },\n    getClientColor(color) {\n      if (!color || typeof color !== \"number\") {\n        return this.colorMapping.default.class; // Couleur par défaut si la couleur n'est pas définie ou invalide\n      }\n      return this.colorMapping[color] ? this.colorMapping[color].class : this.colorMapping.default.class;\n    },\n    getColorName(color) {\n      if (!color || typeof color !== \"number\") {\n        return this.colorMapping.default.name; // Nom par défaut si la couleur n'est pas définie ou invalide\n      }\n      return this.colorMapping[color] ? this.colorMapping[color].name : this.colorMapping.default.name;\n    },\n    calculateStatisticsByColor() {\n      const statistics = {};\n      let startDate, endDate;\n      if (this.viewMode === 'month') {\n        startDate = new Date(this.currentYear, this.currentMonth, 1);\n        endDate = new Date(this.currentYear, this.currentMonth + 1, 0);\n      } else if (this.viewMode === 'year') {\n        startDate = new Date(this.currentYear, 0, 1);\n        endDate = new Date(this.currentYear, 11, 31);\n      }\n\n      // Parcourez chaque jour de la période sélectionnée\n      for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\n        const dayOfWeek = d.getDay();\n        if (dayOfWeek !== 0 && dayOfWeek !== 6 && !this.isJourFerie(d.getDate(), d.getMonth())) {\n          this.events.forEach(event => {\n            const eventStartDate = new Date(event.startDate);\n            const eventEndDate = new Date(event.endDate);\n\n            // Vérifiez si l'événement est actif ce jour-là\n            if (d >= eventStartDate && d <= eventEndDate || d.getDate() === eventStartDate.getDate() && d.getMonth() === eventStartDate.getMonth() && d.getFullYear() === eventStartDate.getFullYear()) {\n              const clientColor = event.color;\n              const clientName = this.getColorName(clientColor);\n              const clientClass = this.getClientColor(clientColor); // Obtenez la classe CSS de la couleur\n\n              if (!statistics[clientColor]) {\n                statistics[clientColor] = {\n                  name: clientName,\n                  count: 0,\n                  color: clientColor,\n                  class: clientClass\n                };\n              }\n              statistics[clientColor].count++;\n            }\n          });\n        }\n      }\n      return statistics;\n    }\n  }\n};","map":{"version":3,"names":["format","axios","jsPDF","ExcelJS","API_URL","data","colorMapping","name","class","default","isExportModalOpen","currentYear","Date","getFullYear","currentMonth","getMonth","monthsOfYear","currentDay","getDate","viewMode","resources","events","selectedClientId","clientSearch","clients","joursFeries","agences","bangeResults","isBANGEModalOpen","bangeStartDate","bangeEndDate","searchStartDate","searchEndDate","tnfSearchResults","isEventModalOpen","selectedEvent","hoveredEvent","hoveredDay","selectedClientColor","comment","startDate","endDate","user_id","selectedPays","totalTNF","totalConsultants","totalInterventionDays","computed","filteredClients","filter","client","nom","toLowerCase","includes","displayPeriod","firstDayOfMonth","firstDayOfYear","formattedJoursFeries","map","jourFerie","date","date_ferie","nom_ferie","periodDays","getDaysInMonth","getDaysInYear","filteredResources","filtered","matchingResourceIds","Set","event","clientName","resourceId","resource","has","id","tnfDays","getTNFDaysInPeriod","length","agence","pays","filteredEventsByDay","filteredEvents","forEach","days","flatMap","month","day","dayDate","isEventOnDay","statisticsByColor","calculateStatisticsByColor","watch","updateView","updateStatistics","fetchJoursFeries","fetchResourcesAndEvents","mounted","fetchClients","fetchAgences","methods","calculateTotalTNF","total","calculateTotalConsultants","calculateTotalInterventionDays","start","end","duration","openExportModal","closeExportModal","exportToXLSX","workbook","Workbook","worksheet","addWorksheet","columns","header","key","width","eventStartDate","eventEndDate","index","addRow","Numero","Ressource","Date_de_debut","Date_de_fin","Client","Commentaire","Abbreviation","clientAbbreviation","headerRow","getRow","eachCell","cell","fill","type","gradient","degree","stops","position","color","argb","font","bold","alignment","horizontal","vertical","currentDate","toLocaleDateString","replace","xlsx","writeBuffer","then","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","revokeObjectURL","exportToPDF","doc","orientation","unit","dataKey","autoTable","head","col","body","row","startY","styles","fillColor","textColor","fontStyle","halign","valign","cellPadding","headStyles","save","response","get","headers","Authorization","localStorage","getItem","error","console","filterInterventionsByClientName","lowerCaseClientName","calculateBANGE","totalBANGE","currentWeekStart","weekEnd","setDate","workingDays","d","isWeekend","isHoliday","isJourFerie","log","getEventsForMonth","etp","Math","min","weeklyBANGE","toFixed","parseFloat","calculateAndDisplayBANGE","bangeResult","push","bange","alert","closeBANGEModal","getDayAbbreviation","getDay","isWednesday","monthIndex","getWeeklyBANGE","initialDate","weekStart","dayOfWeek","offsetToMonday","getMonthlyBANGE","getJourFerieName","formattedDate","find","jour","some","calculateBusinessDays","count","showComment","hideComment","clearDateFilters","resourceEvents","eventsOnDay","isHighlightedTNF","resourceName","r","undefined","tnfDay","updateSelectedClient","selectedClient","saveEvent","post","client_id","commentaire","date_debut","date_fin","closeEventModal","updateEvent","selectClient","clientId","c","openEventModal","selectedDate","isNaN","getTime","headerDate","intervention","interventions","i","client_name","client_color","deleteEvent","delete","resetToToday","today","prevPeriod","nextPeriod","getDayLabel","daysInMonth","Array","from","_","months","eventStart","eventEnd","user","client_abbreviation","getClientColor","getColorName","statistics","clientColor","clientClass"],"sources":["C:\\Users\\gongue\\Desktop\\frontsbs\\src\\views\\StaffingView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container p-4 mx-auto\">\r\n    <!-- Conteneur principal pour le calcul du bench et la recherche -->\r\n    <div class=\"flex items-center justify-between mb-2\">\r\n      <!-- Formulaire pour le calcul du BANGE -->\r\n      <div class=\"mb-4\">\r\n        <h3 class=\"mb-0 text-lg font-semibold text-gray-800 text-[10px]\">\r\n          Calcul du Bench par période\r\n        </h3>\r\n        <div class=\"flex items-center p-4 space-x-6 rounded-lg shadow-md bg-gray-50\">\r\n          <div class=\"flex items-center space-x-2\">\r\n            <label for=\"bange-start-date\" class=\"text-sm font-medium text-gray-700 text-[10px]\">Date de début:</label>\r\n            <input id=\"bange-start-date\" v-model=\"bangeStartDate\" type=\"date\" class=\"p-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\" />\r\n          </div>\r\n          <div class=\"flex items-center space-x-2\">\r\n            <label for=\"bange-end-date\" class=\"text-sm font-medium text-gray-700 text-[10px]\">Date de fin:</label>\r\n            <input id=\"bange-end-date\" v-model=\"bangeEndDate\" type=\"date\" class=\"p-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\" />\r\n          </div>\r\n          <button @click=\"calculateAndDisplayBANGE\" class=\"px-4 py-2 text-[10px] text-white bg-blue-500 rounded shadow-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\">\r\n            Calculer le Bench\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Modal pour afficher les résultats du BANGE -->\r\n      <div v-if=\"isBANGEModalOpen\" class=\"fixed inset-0 z-[70] flex items-center justify-center bg-black bg-opacity-50\">\r\n        <div class=\"w-full max-w-md p-6 bg-white rounded-lg\">\r\n          <h2 class=\"mb-4 text-xl font-bold\">Résultats du Bench</h2>\r\n          <div class=\"overflow-y-auto max-h-60\">\r\n            <table class=\"w-full\">\r\n              <thead>\r\n                <tr>\r\n                  <th class=\"px-4 py-2 font-semibold text-left bg-gray-100\">Période</th>\r\n                  <th class=\"px-4 py-2 font-semibold text-right bg-gray-100\">Etp</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"result in bangeResults\" :key=\"result.date\" class=\"border-b\">\r\n                  <td class=\"px-4 py-2\">{{ result.date }}</td>\r\n                  <td class=\"px-4 py-2 text-right\">{{ result.bange }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <button @click=\"closeBANGEModal\" class=\"px-4 py-2 mt-4 text-white bg-blue-500 rounded hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\">\r\n            Fermer\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Formulaire de recherche -->\r\n      <div class=\"mb-4\">\r\n        <h3 class=\"mb-0 text-lg font-semibold text-gray-800 text-[10px]\">Recherche TNF des Consultants</h3>\r\n        <div class=\"flex items-center p-4 space-x-6 rounded-lg shadow-md bg-gray-50\">\r\n          <div class=\"flex items-center space-x-2\">\r\n            <label for=\"start-search\" class=\"text-sm font-medium text-gray-700 text-[10px]\">Date de début:</label>\r\n            <input id=\"start-search\" v-model=\"searchStartDate\" type=\"date\" class=\"p-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\" />\r\n          </div>\r\n          <div class=\"flex items-center space-x-2\">\r\n            <label for=\"end-search\" class=\"text-sm font-medium text-gray-700 text-[10px]\">Date de fin:</label>\r\n            <input id=\"end-search\" v-model=\"searchEndDate\" type=\"date\" class=\"p-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\" />\r\n          </div>\r\n          <button @click=\"clearDateFilters\" class=\"px-4 py-2 text-[10px] text-white bg-red-500 rounded shadow-lg hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50\">\r\n            Effacer les filtres\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex justify-center p-2 space-x-4\">\r\n      <!-- Modal pour sélectionner la période et le format d'exportation -->\r\n      <div v-if=\"isExportModalOpen\" class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-[70]\">\r\n        <div class=\"w-full max-w-md p-6 bg-white rounded-lg shadow-lg\">\r\n          <h2 class=\"mb-4 text-xl font-bold\">Exporter les données</h2>\r\n          <div class=\"mb-4\">\r\n            <label for=\"start-date\" class=\"block text-sm font-medium text-gray-700\">Date de début :</label>\r\n            <input type=\"date\" v-model=\"startDate\" id=\"start-date\" class=\"p-2 mt-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300\" />\r\n          </div>\r\n          <div class=\"mb-4\">\r\n            <label for=\"end-date\" class=\"block text-sm font-medium text-gray-700\">Date de fin :</label>\r\n            <input type=\"date\" v-model=\"endDate\" id=\"end-date\" class=\"p-2 mt-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300\" />\r\n          </div>\r\n          <div class=\"flex justify-between gap-2\">\r\n            <button @click=\"exportToXLSX\" class=\"px-4 py-2 text-xs text-white bg-green-500 rounded\">Exporter en XLSX</button>\r\n            <button @click=\"exportToPDF\" class=\"px-4 py-2 text-xs text-white bg-blue-500 rounded\">Exporter en PDF</button>\r\n            <button @click=\"closeExportModal\" class=\"px-4 py-2 text-xs text-white bg-red-500 rounded\">Fermer</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Legend Container -->\r\n      <div class=\"pt-2\">\r\n        <h4 class=\"mb-2 font-bold\">Statistique par Période</h4>\r\n        <div class=\"flex flex-wrap gap-2\">\r\n          <div v-for=\"(stat, color) in statisticsByColor\" :key=\"color\" class=\"flex items-center p-2 space-x-2 bg-white rounded shadow-md\">\r\n            <div class=\"flex items-center justify-center h-4 p-1\" :class=\"stat.class\">\r\n              <small class=\"text-[8px] text-white\">{{ stat.count }} j</small>\r\n            </div>\r\n            <span class=\"text-[8px]\">{{ stat.name }}</span>\r\n          </div>\r\n          <div class=\"stat-item\">\r\n            <strong>Nombre total de TNF :</strong> {{ totalTNF }}\r\n          </div>\r\n          <div class=\"stat-item\">\r\n            <strong>Nombre total de consultants :</strong> {{ totalConsultants }}\r\n          </div>\r\n          <div class=\"stat-item\">\r\n            <strong>Nombre total de jours d'interventions :</strong> {{ totalInterventionDays }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex justify-between p-3 mt-1 bg-blue-500 rounded-t-md\">\r\n      <div class=\"flex items-center justify-\">\r\n        <div>\r\n          <button @click=\"prevPeriod\" class=\"px-4 py-2 text-white bg-blue-500 rounded shadow-lg text-[10px]\">\r\n            Précédent\r\n          </button>\r\n          <button @click=\"resetToToday\" class=\"px-4 py-2 ml-4 text-white bg-green-500 rounded shadow-lg text-[10px]\">\r\n            Mois en cours\r\n          </button>\r\n          <button @click=\"nextPeriod\" class=\"px-4 py-2 ml-4 text-white bg-blue-500 rounded shadow-lg text-[10px]\">\r\n            Suivant\r\n          </button>\r\n          <input id=\"client-search\" v-model=\"clientSearch\" type=\"text\" class=\"px-4 py-2 ml-4 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\" placeholder=\"Search with client name's\" />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h2 class=\"text-2xl font-bold text-white\">{{ displayPeriod }}</h2>\r\n      </div>\r\n      <div class=\"flex\">\r\n        <button @click=\"viewMode = 'month'\" :class=\"{ 'bg-white text-black': viewMode === 'month' }\" class=\"px-4 py-2 transition-colors duration-200 rounded shadow-lg text-[10px]\">\r\n          Mois\r\n        </button>\r\n        <button @click=\"viewMode = 'year'\" :class=\"{ 'bg-white text-black': viewMode === 'year' }\" class=\"px-4 py-2 ml-2 transition-colors duration-200 rounded shadow-lg text-[10px]\">\r\n          Année\r\n        </button>\r\n        <select v-model=\"selectedPays\" class=\"px-4 py-2 ml-2 transition-colors duration-200 rounded shadow-lg text-[10px]\">\r\n          <option value=\"\">Tous les pays</option>\r\n          <option v-for=\"agence in agences\" :key=\"agence.id\" :value=\"agence.pays\">\r\n            {{ agence.pays }}\r\n          </option>\r\n        </select>\r\n        <button @click=\"openExportModal\" class=\"px-4 py-2 ml-2 text-xs text-black rounded bg-gray-50\">Exporter</button>\r\n      </div>\r\n    </div>\r\n    <!-- Vue Mensuelle -->\r\n    <div v-if=\"viewMode === 'month'\" class=\"overflow-x-auto overflow-y-scroll md:h-[400px]\">\r\n      <table class=\"min-w-full border border-gray-300 table-auto\">\r\n        <thead class=\"sticky z-50 text-white bg-blue-500\">\r\n          <tr class=\"sticky z-50 bg-blue-500\">\r\n            <th class=\"sticky left-0 w-1/4 p-2 text-[9px] z-[70] bg-blue-500 rounded-l-lg\">\r\n              Ressources\r\n            </th>\r\n            <th v-for=\"(day, index) in periodDays\" :key=\"index\" class=\"sticky top-0 p-2 border-b bg-blue-500 z-50 border-gray-300 w-[50px] text-[9px]\">\r\n              {{ getDayLabel(index, day) }}\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <!-- Resource rows -->\r\n          <tr v-for=\"resource in filteredResources\" :key=\"resource.name\">\r\n            <td class=\"sticky left-0 p-1 bg-white text-[10px] z-50\">\r\n              {{ resource.name }}\r\n            </td>\r\n            <td v-for=\"(day, index) in periodDays\" :key=\"index\" class=\"p-1 border-b border-gray-300 w-[50px] text-[9px]\" :class=\"{\r\n                'bg-red-400': isJourFerie(day),\r\n                'bg-gray-300': isWeekend(day).isWeekend,\r\n              }\" @click=\"openEventModal(day, resource.name)\">\r\n              <!-- Holiday Display -->\r\n              <div v-if=\"isJourFerie(day)\" class=\"text-xs font-bold text-white\">\r\n                <div class=\"w-[50px] h-6 p-1 text-[6px] text-white bg-red-400 rounded\">\r\n                  {{ getJourFerieName(day, monthIndex) }}\r\n                </div>\r\n              </div>\r\n              <!-- Weekend Display -->\r\n              <div v-else-if=\"isWeekend(day).isWeekend\" class=\"w-full h-full p-1 text-[9px] text-black bg-gray-300 rounded\">\r\n                <template v-if=\"filteredEventsByDay[resource.name][day].length\">\r\n                  <div v-for=\"event in filteredEventsByDay[resource.name][day]\" :key=\"event.id\" class=\"relative w-[50px] h-6 p-1 text-[9px] text-center rounded cursor-pointer\" :class=\"getClientColor(event.color)\" @mouseover=\"showComment(event, day)\" @mouseleave=\"hideComment\">\r\n                    {{ event.clientAbbreviation }}\r\n                  </div>\r\n                </template>\r\n                <template v-else><p class=\"text-[9px]\">weekend</p></template>\r\n              </div>\r\n              <!-- Normal Day Display (not holiday, not weekend) -->\r\n              <div v-else>\r\n                <template v-if=\"filteredEventsByDay[resource.name][day].length\">\r\n                  <div v-for=\"event in filteredEventsByDay[resource.name][day]\" :key=\"event.id\" class=\"relative w-[50px] h-6 p-1 text-[9px] text-center rounded cursor-pointer\" :class=\"getClientColor(event.color)\" @mouseover=\"showComment(event, day)\" @mouseleave=\"hideComment\">\r\n                    {{ event.clientAbbreviation }}\r\n                    <div v-if=\"hoveredEvent === event && hoveredDay === day\" class=\"absolute z-10 p-2 text-sm text-white whitespace-normal bg-gray-800 rounded shadow-lg\" style=\"\r\n                        width: 200px;\r\n                        bottom: 100%;\r\n                        left: 50%;\r\n                        transform: translateX(-50%);\r\n                      \">\r\n                      {{ event.name }}\r\n                    </div>\r\n                  </div>\r\n                </template>\r\n                <!-- TNF for normal days without events -->\r\n                <template v-else>\r\n                  <div v-if=\"!isJourFerie(day)\" class=\"h-6 p-1 text-[9px] text-white bg-green-400 rounded cursor-pointer hover:bg-green-600\" :class=\"{\r\n                      'border-2 border-blue-600': isHighlightedTNF(resource.name, day),\r\n                    }\">\r\n                    TNF\r\n                  </div>\r\n                </template>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <!-- Vue Annuelle -->\r\n    <div v-else-if=\"viewMode === 'year'\" class=\"overflow-x-auto overflow-y-scroll md:h-[400px]\">\r\n      <div class=\"relative overflow-x-auto\">\r\n        <table class=\"min-w-full border border-gray-900 table-auto\">\r\n          <thead class=\"sticky top-0 z-10 text-white bg-blue-500\">\r\n            <tr>\r\n              <th class=\"sticky left-0 z-50 w-1/4 p-1 bg-blue-500 rounded-l-lg\">Ressources</th>\r\n              <th v-for=\"month in monthsOfYear\" :key=\"month\" class=\"p-1 border border-gray-300\">\r\n                <div>{{ month }}</div>\r\n                <div class=\"flex row-auto gap-1\">\r\n                  <div v-for=\"day in getDaysInMonth(monthsOfYear.indexOf(month))\" :key=\"`${month}-${day}`\" class=\"text-[9px] p-1 w-[50px] mr-[8px]\">\r\n                    {{ getDayAbbreviation(new Date(currentYear, monthsOfYear.indexOf(month), day)) }}\r\n                    {{ String(day).padStart(2, \"0\") }}\r\n                  </div>\r\n                </div>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"overflow-x-auto\">\r\n            <!-- Bench Row pour la vue annuelle -->\r\n            <tr class=\"\">\r\n              <td class=\"sticky left-0 p-2 bg-white text-[9px] font-bold gap-2 \">Bench</td>\r\n              <td v-for=\"(month, monthIndex) in getDaysInYear()\" :key=\"monthIndex\" class=\"p-1 border border-gray-300 text-[9px]\">\r\n                <div class=\"flex gap-[2px]\">\r\n                  <div v-for=\"day in month.days\" :key=\"day\" class=\"mx-[5px] text-[9px] text-center bg-transparent w-[50px] h-6 gap-3 rounded-sm\">\r\n                    <!-- Ajout de la condition pour les jours fériés -->\r\n                    <div v-if=\"isJourFerie(day, monthIndex)\">\r\n                      <div class=\"w-[50px] h-6 p-1 text-[1px] text-white bg-transparent rounded\">\r\n                        {{ getJourFerieName(day, monthIndex) }}\r\n                      </div>\r\n                    </div>\r\n                    <div v-else-if=\"isWeekend(day, monthIndex).isWeekend\">\r\n                      <div class=\"w-[50px] h-6 p-1 text-[1px] text-center text-white bg-transparent rounded\">\r\n                        weekend\r\n                      </div>\r\n                    </div>\r\n                    <div v-else>\r\n                      <!-- Afficher le BANGE pour chaque mercredi en vérifiant directement le jour -->\r\n                      <div v-if=\"new Date(currentYear, monthIndex, day).getDay() === 3\" class=\"w-[50px] h-6 p-1 text-[9px] text-white bg-cyan-400 rounded cursor-pointer hover:bg-green-600\">\r\n                        {{ getWeeklyBANGE(day, monthIndex).bange }}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr v-for=\"resource in filteredResources\" :key=\"resource.name\">\r\n              <td class=\"sticky left-0  p-1 bg-white border text-[9px]\">\r\n                {{ resource.name }}\r\n              </td>\r\n              <td v-for=\"(month, monthIndex) in getDaysInYear()\" :key=\"monthIndex\" class=\"p-1 border border-gray-300 text-[9px]\">\r\n                <div class=\"flex gap-1\">\r\n                  <div v-for=\"day in month.days\" :key=\"day\" class=\"p-1 text-[9px] text-center rounded-lg\" @click=\"openEventModal(day, resource.name, monthIndex)\">\r\n                    <!-- Ajout de la condition pour les jours fériés -->\r\n                    <div v-if=\"isJourFerie(day, monthIndex)\">\r\n                      <div class=\"w-[50px] h-6 p-1 text-[6px] text-white bg-red-400 rounded\">\r\n                        {{ getJourFerieName(day, monthIndex) }}\r\n                      </div>\r\n                    </div>\r\n                    <div v-else-if=\"isWeekend(day, monthIndex).isWeekend\">\r\n                      <div class=\"w-[50px] h-6 p-1 text-[9px] text-center bg-gray-300 rounded\">\r\n                        <template v-if=\"getEventsForMonth(resource.name, monthIndex, day).length\">\r\n                          <div v-for=\"event in getEventsForMonth(resource.name, monthIndex, day)\" :key=\"event.id\" class=\"relative text-center rounded cursor-pointer w-[50px] h-6 p-1 text-[9px]\" :class=\"getClientColor(event.color)\" @mouseover=\"showComment(event, day)\" @mouseleave=\"hideComment\">\r\n                            {{ event.clientAbbreviation }}\r\n                            <div v-if=\"hoveredEvent === event && hoveredDay === day\" class=\"absolute z-10 p-1 text-[9px] text-white whitespace-normal bg-gray-800 rounded shadow-lg\" style=\"\r\n                              width: 200px;\r\n                              bottom: 100%;\r\n                              left: 50%;\r\n                              transform: translateX(-50%);\r\n                            \">\r\n                              {{ event.name }}\r\n                            </div>\r\n                          </div>\r\n                        </template>\r\n                        <template v-else>weekend</template>\r\n                      </div>\r\n                    </div>\r\n                    <div v-else>\r\n                      <template v-if=\"getEventsForMonth(resource.name, monthIndex, day).length\">\r\n                        <div v-for=\"event in getEventsForMonth(resource.name, monthIndex, day)\" :key=\"event.id\" class=\"relative w-[50px] h-6 p-1 text-[9px] text-center rounded cursor-pointer\" :class=\"getClientColor(event.color)\" @mouseover=\"showComment(event, day)\" @mouseleave=\"hideComment\">\r\n                          {{ event.clientAbbreviation }}\r\n                          <div v-if=\"hoveredEvent === event && hoveredDay === day\" class=\"absolute z-10 w-[50px] h-6 p-1 text-[9px] text-white whitespace-normal bg-gray-800 rounded shadow-lg\" style=\"\r\n                            width: 200px;\r\n                            bottom: 100%;\r\n                            left: 50%;\r\n                            transform: translateX(-50%);\r\n                          \">\r\n                            {{ event.name }}\r\n                          </div>\r\n                        </div>\r\n                      </template>\r\n                      <template v-else>\r\n                        <div v-if=\"!isJourFerie(day, monthIndex)\" class=\"w-[50px] h-6 p-1 text-[9px] text-white bg-green-400 rounded cursor-pointer hover:bg-green-600\" :class=\"{\r\n                          'border-2 border-blue-600': isHighlightedTNF(resource.name, day, monthIndex),\r\n                        }\">\r\n                          TNF\r\n                        </div>\r\n                      </template>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <!-- Modal pour ajouter/modifier un événement -->\r\n    <div v-if=\"isEventModalOpen\" class=\"fixed inset-0 z-50 flex items-center justify-center p-6 bg-black bg-opacity-50 backdrop-blur-sm\" @click.self=\"closeEventModal\">\r\n      <div class=\"w-full max-w-2xl p-6 transition-transform duration-300 ease-in-out transform scale-75 bg-white rounded-lg shadow-lg\">\r\n        <h3 class=\"mb-4 text-lg font-semibold text-gray-800\">\r\n          Ressource : {{ selectedEvent.resourceName }}\r\n        </h3>\r\n        <div class=\"mt-4\">\r\n          <label for=\"client\" class=\"block text-sm font-medium text-gray-700\">Mission:</label>\r\n          <div>\r\n            <!-- Barre de recherche pour filtrer les clients -->\r\n            <input type=\"text\" v-model=\"clientSearch\" placeholder=\"Rechercher un client\" class=\"w-full p-2 mb-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\" />\r\n            <!-- Sélecteur de clients -->\r\n            <select id=\"client\" v-model=\"selectedClientId\" @change=\"updateSelectedClient\" class=\"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\">\r\n              <option value=\"\">Sélectionnez un client</option>\r\n              <option v-for=\"client in filteredClients\" :key=\"client.id\" :value=\"client.id\">\r\n                {{ client.nom }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"mt-4\">\r\n          <label for=\"comment\" class=\"block text-sm font-medium text-gray-700\">Commentaire:</label>\r\n          <textarea id=\"comment\" v-model=\"comment\" class=\"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\" placeholder=\"Entrez un commentaire\"></textarea>\r\n        </div>\r\n        <div class=\"flex justify-between mt-4\">\r\n          <div class=\"w-full pr-2\">\r\n            <label for=\"start-date\" class=\"block text-sm font-medium text-gray-700\">Date de début:</label>\r\n            <input id=\"start-date\" type=\"date\" v-model=\"startDate\" class=\"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\" />\r\n          </div>\r\n          <div class=\"w-full pl-2\">\r\n            <label for=\"end-date\" class=\"block text-sm font-medium text-gray-700\">Date de fin:</label>\r\n            <input id=\"end-date\" type=\"date\" v-model=\"endDate\" class=\"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"flex space-x-4\">\r\n          <button v-if=\"selectedEvent.id\" @click=\"updateEvent\" class=\"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-green-500 rounded-md hover:bg-green-600 focus:outline-none focus:ring focus:ring-green-300\">\r\n            Mettre à jour l'intervention\r\n          </button>\r\n          <button v-else @click=\"saveEvent\" class=\"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-blue-500 rounded-md hover:bg-blue-600 focus:outline-none focus:ring focus:ring-blue-300\">\r\n            Enregistrer l'intervention\r\n          </button>\r\n          <!-- Button to delete the event -->\r\n          <button v-if=\"selectedEvent.id\" @click=\"deleteEvent\" class=\"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-red-500 rounded-md hover:bg-red-600 focus:outline-none focus:ring focus:ring-red-300\">\r\n            Supprimer l'intervention\r\n          </button>\r\n          <button @click=\"closeEventModal\" class=\"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-gray-500 rounded-md hover:bg-gray-600 focus:outline-none focus:ring focus:ring-gray-300\">\r\n            Fermer\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { format } from \"date-fns\";\r\nimport axios from \"axios\";\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport ExcelJS from 'exceljs';\r\nimport { API_URL } from '@/config'; // Importer API_URL\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      colorMapping: {\r\n        1: { name: 'Mission confirmée', class: 'bg-orange-400' },\r\n        2: { name: 'Prévision de Mission', class: 'bg-yellow-400' },\r\n        3: { name: 'Voyage', class: 'bg-sky-400' },\r\n        4: { name: 'Congé', class: 'bg-blue-300' },\r\n        5: { name: 'Formation', class: 'bg-blue-500' },\r\n        6: { name: 'Récupération', class: 'bg-red-200' },\r\n        7: { name: 'Congé maladie', class: 'bg-purple-600' },\r\n        8: { name: 'Université', class: 'bg-sky-600' },\r\n        9: { name: 'Avant Vente', class: 'bg-teal-300' },\r\n        10: { name: 'Prévision de Congé', class: 'bg-orange-600' }, // Nouvelle couleur pour Prévision de Mission\r\n        11: { name: 'Prévision de Récupération', class: 'bg-indigo-400' }, // Nouvelle couleur pour Prévision de Récupération\r\n        12: { name: 'Prévision de Formation', class: 'bg-pink-400' }, // Nouvelle couleur pour Prévision de Formation\r\n        default: { name: 'Inconnu', class: 'bg-blue-400' }\r\n      },\r\n      isExportModalOpen: false,\r\n      currentYear: new Date().getFullYear(),\r\n      currentMonth: new Date().getMonth(),\r\n      monthsOfYear: [\r\n        \"Janvier\",\r\n        \"Février\",\r\n        \"Mars\",\r\n        \"Avril\",\r\n        \"Mai\",\r\n        \"Juin\",\r\n        \"Juillet\",\r\n        \"Août\",\r\n        \"Septembre\",\r\n        \"Octobre\",\r\n        \"Novembre\",\r\n        \"Décembre\",\r\n      ],\r\n      currentDay: new Date().getDate(),\r\n      viewMode: \"year\", //  month or year\r\n      resources: [],\r\n      events: [],\r\n      selectedClientId: \"\",\r\n      clientSearch: \"\", // Barre de recherche pour le filtre\r\n      clients: [], // Assurez-vous que `clients` contient les données de vos clients\r\n      joursFeries: [],\r\n      agences: [],\r\n      bangeResults: [],\r\n      isBANGEModalOpen: false,\r\n      bangeStartDate: \"\",\r\n      bangeEndDate: \"\",\r\n      searchStartDate: \"\",\r\n      searchEndDate: \"\",\r\n      tnfSearchResults: [],\r\n      isEventModalOpen: false,\r\n      selectedEvent: {},\r\n      hoveredEvent: null,\r\n      hoveredDay: null,\r\n      selectedClientColor: \"\",\r\n      comment: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      user_id: null,\r\n      selectedPays: \"\",\r\n       totalTNF: 0,\r\n      totalConsultants: 0,\r\n      totalInterventionDays: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    filteredClients() {\r\n      return this.clients.filter((client) =>\r\n        client.nom.toLowerCase().includes(this.clientSearch.toLowerCase())\r\n      );\r\n    },\r\n    displayPeriod() {\r\n      if (this.viewMode === \"month\") {\r\n        const firstDayOfMonth = new Date(this.currentYear, this.currentMonth, 1);\r\n        return format(firstDayOfMonth, \"MMMM yyyy\");\r\n      } else if (this.viewMode === \"year\") {\r\n        const firstDayOfYear = new Date(this.currentYear, 0, 1);\r\n        return format(firstDayOfYear, \"yyyy\");\r\n      } else {\r\n        return `${this.currentYear}`;\r\n      }\r\n    },\r\n    formattedJoursFeries() {\r\n      // Format the public holidays to only include the date in 'yyyy-MM-dd' format\r\n      return this.joursFeries.map((jourFerie) => ({\r\n        date: format(new Date(jourFerie.date_ferie), \"yyyy-MM-dd\"), // Keep the date format\r\n        name: jourFerie.nom_ferie,\r\n      }));\r\n    },\r\n    periodDays() {\r\n      return this.viewMode === \"month\" ? this.getDaysInMonth() : this.getDaysInYear();\r\n    },\r\n    filteredResources() {\r\n      let filtered = this.resources;\r\n\r\n      // Filter by client name\r\n      if (this.clientSearch) {\r\n        // Find resource IDs that have interventions matching the client name\r\n        const matchingResourceIds = new Set(\r\n          this.events\r\n            .filter((event) =>\r\n              event.clientName.toLowerCase().includes(this.clientSearch.toLowerCase())\r\n            )\r\n            .map((event) => event.resourceId)\r\n        );\r\n\r\n        // Filter resources based on matching IDs\r\n        filtered = this.resources.filter((resource) =>\r\n          matchingResourceIds.has(resource.id)\r\n        );\r\n      }\r\n\r\n      // Filter by date range\r\n      if (this.searchStartDate && this.searchEndDate) {\r\n        const startDate = new Date(this.searchStartDate);\r\n        const endDate = new Date(this.searchEndDate);\r\n        filtered = filtered.filter((resource) => {\r\n          const tnfDays = this.getTNFDaysInPeriod(resource, startDate, endDate);\r\n          return tnfDays.length > 0;\r\n        });\r\n      }\r\n\r\n      // Filter by selected agency\r\n      if (this.selectedPays) {\r\n        filtered = filtered.filter(\r\n          (resource) => resource.agence && resource.agence.pays === this.selectedPays\r\n        );\r\n      }\r\n\r\n      return filtered;\r\n    },\r\n    // Nouvelle propriété calculée pour récupérer les événements par jour et ressource\r\n    filteredEventsByDay() {\r\n      const filteredEvents = {};\r\n\r\n      this.filteredResources.forEach((resource) => {\r\n        filteredEvents[resource.name] = {};\r\n\r\n        const days =\r\n          this.viewMode === \"month\"\r\n            ? this.getDaysInMonth()\r\n            : this.getDaysInYear().flatMap((month) => month.days);\r\n\r\n        days.forEach((day) => {\r\n          const dayDate = new Date(\r\n            this.currentYear,\r\n            this.viewMode === \"month\" ? this.currentMonth : 0,\r\n            typeof day === \"number\" ? day : day.day\r\n          );\r\n\r\n          filteredEvents[resource.name][day] = this.events.filter(\r\n            (event) =>\r\n              event.resource === resource.name && this.isEventOnDay(event, dayDate)\r\n          );\r\n        });\r\n      });\r\n\r\n      return filteredEvents;\r\n    },\r\n    statisticsByColor() {\r\n      return this.calculateStatisticsByColor();\r\n    },\r\n  },\r\n  watch: {\r\n  searchStartDate() {\r\n    this.updateView();\r\n    this.updateStatistics();\r\n  },\r\n  searchEndDate() {\r\n    this.updateView();\r\n    this.updateStatistics();\r\n  },\r\n  clientSearch() {\r\n    this.updateView();\r\n    this.updateStatistics();\r\n  },\r\n  selectedPays() {\r\n    this.fetchJoursFeries();\r\n    this.fetchResourcesAndEvents();\r\n    this.updateStatistics();\r\n  }\r\n},\r\nmounted() {\r\n  this.fetchResourcesAndEvents();\r\n  this.fetchClients();\r\n  this.fetchJoursFeries();\r\n  this.fetchAgences();\r\n  this.updateStatistics();\r\n},\r\n\r\n  methods: {\r\n    calculateTotalTNF() {\r\n    let total = 0;\r\n    this.resources.forEach(resource => {\r\n      total += this.getTNFDaysInPeriod(resource, this.searchStartDate, this.searchEndDate).length;\r\n    });\r\n    this.totalTNF = total;\r\n  },\r\n  calculateTotalConsultants() {\r\n    this.totalConsultants = this.resources.length;\r\n  },\r\n  calculateTotalInterventionDays() {\r\n    let total = 0;\r\n    this.events.forEach(event => {\r\n      const start = new Date(event.startDate);\r\n      const end = new Date(event.endDate);\r\n      const duration = (end - start) / (1000 * 60 * 60 * 24) + 1; // Durée en jours\r\n      total += duration;\r\n    });\r\n    this.totalInterventionDays = total;\r\n  },\r\n  updateStatistics() {\r\n    this.calculateTotalTNF();\r\n    this.calculateTotalConsultants();\r\n    this.calculateTotalInterventionDays();\r\n  },\r\n    openExportModal() {\r\n      this.isExportModalOpen = true;\r\n    },\r\n    closeExportModal() {\r\n      this.isExportModalOpen = false;\r\n      this.endDate = \"\";\r\n      this.startDate = \"\";\r\n    },\r\n    exportToXLSX() {\r\n      const workbook = new ExcelJS.Workbook();\r\n      const worksheet = workbook.addWorksheet('Interventions');\r\n\r\n      // Définir les colonnes\r\n      worksheet.columns = [\r\n        { header: 'Numero', key: 'Numero', width: 10 },\r\n        { header: 'Ressource', key: 'Ressource', width: 20 },\r\n        { header: 'Date de debut', key: 'Date_de_debut', width: 20 },\r\n        { header: 'Date de fin', key: 'Date_de_fin', width: 20 },\r\n        { header: 'Client', key: 'Client', width: 20 },\r\n        { header: 'Commentaire', key: 'Commentaire', width: 30 },\r\n        { header: 'Abbreviation', key: 'Abbreviation', width: 15 }\r\n      ];\r\n\r\n      // Vérifier si les dates sont sélectionnées\r\n      let filteredEvents = this.events;\r\n      if (this.startDate && this.endDate) {\r\n        filteredEvents = this.events.filter(event => {\r\n          const eventStartDate = new Date(event.startDate);\r\n          const eventEndDate = new Date(event.endDate);\r\n          const start = new Date(this.startDate);\r\n          const end = new Date(this.endDate);\r\n          return eventStartDate >= start && eventEndDate <= end;\r\n        });\r\n      }\r\n\r\n      // Ajouter les données\r\n      filteredEvents.forEach((event, index) => {\r\n        worksheet.addRow({\r\n          Numero: index + 1,\r\n          Ressource: event.resource,\r\n          Date_de_debut: event.startDate,\r\n          Date_de_fin: event.endDate,\r\n          Client: event.clientName,\r\n          Commentaire: event.name,\r\n          Abbreviation: event.clientAbbreviation\r\n        });\r\n      });\r\n\r\n      // Styliser l'entête avec un gradient violet et rose\r\n      const headerRow = worksheet.getRow(1);\r\n      headerRow.eachCell((cell) => {\r\n        cell.fill = {\r\n          type: 'gradient',\r\n          gradient: 'angle',\r\n          degree: 0,\r\n          stops: [\r\n            { position: 0, color: { argb: 'FF69B4' } }, // Rose\r\n            { position: 1, color: { argb: '800080' } } // Violet\r\n          ]\r\n        };\r\n        cell.font = { color: { argb: 'FFFFFF' }, bold: true };\r\n        cell.alignment = { horizontal: 'center', vertical: 'middle' };\r\n      });\r\n\r\n      // Obtenir la date actuelle\r\n      const currentDate = new Date().toLocaleDateString().replace(/\\//g, '-');\r\n\r\n      // Enregistrer le fichier avec la date d'exportation dans le nom\r\n      workbook.xlsx.writeBuffer().then((data) => {\r\n        const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n        const link = document.createElement('a');\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = `Staffings_${currentDate}.xlsx`;\r\n        link.click();\r\n        URL.revokeObjectURL(link.href);\r\n      });\r\n\r\n      // Fermer le modal après l'exportation\r\n      this.closeExportModal();\r\n    },\r\n    exportToPDF() {\r\n      // Définir le format A4\r\n      const doc = new jsPDF({\r\n        orientation: 'portrait',\r\n        unit: 'mm',\r\n        format: [210, 297]\r\n      });\r\n\r\n      // Définir les colonnes et les données\r\n      const columns = [\r\n        { header: 'Numero', dataKey: 'Numero' },\r\n        { header: 'Ressource', dataKey: 'Ressource' },\r\n        { header: 'Date de debut', dataKey: 'Date_de_debut' },\r\n        { header: 'Date de fin', dataKey: 'Date_de_fin' },\r\n        { header: 'Client', dataKey: 'Client' },\r\n        { header: 'Commentaire', dataKey: 'Commentaire' },\r\n        { header: 'Abbreviation', dataKey: 'Abbreviation' }\r\n      ];\r\n\r\n      // Vérifier si les dates sont sélectionnées\r\n      let filteredEvents = this.events;\r\n      if (this.startDate && this.endDate) {\r\n        filteredEvents = this.events.filter(event => {\r\n          const eventStartDate = new Date(event.startDate);\r\n          const eventEndDate = new Date(event.endDate);\r\n          const start = new Date(this.startDate);\r\n          const end = new Date(this.endDate);\r\n          return eventStartDate >= start && eventEndDate <= end;\r\n        });\r\n      }\r\n\r\n      const data = filteredEvents.map((event, index) => ({\r\n        Numero: index + 1,\r\n        Ressource: event.resource,\r\n        Date_de_debut: event.startDate,\r\n        Date_de_fin: event.endDate,\r\n        Client: event.clientName,\r\n        Commentaire: event.name,\r\n        Abbreviation: event.clientAbbreviation\r\n      }));\r\n\r\n      // Ajouter le tableau au PDF\r\n      doc.autoTable({\r\n        head: [columns.map(col => col.header)],\r\n        body: data.map(row => columns.map(col => row[col.dataKey])),\r\n        startY: 20,\r\n        styles: {\r\n          fillColor: [240, 240, 240], // Blanc légèrement gris\r\n          textColor: [0, 0, 0], // Noir\r\n          fontStyle: 'normal',\r\n          halign: 'center',\r\n          valign: 'middle',\r\n          cellPadding: 5\r\n        },\r\n        headStyles: {\r\n          fillColor: [128, 0, 128], // Violet\r\n          textColor: [255, 255, 255],\r\n          fontStyle: 'bold',\r\n          halign: 'center',\r\n          valign: 'middle',\r\n          cellPadding: 5\r\n        }\r\n      });\r\n\r\n      // Obtenir la date actuelle\r\n      const currentDate = new Date().toLocaleDateString().replace(/\\//g, '-');\r\n\r\n      // Enregistrer le PDF avec la date d'exportation dans le nom\r\n      doc.save(`Staffings_${currentDate}.pdf`);\r\n\r\n      // Fermer le modal après l'exportation\r\n      this.closeExportModal();\r\n    },\r\n    async fetchAgences() {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/agences`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        this.agences = response.data.agences;\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des agences:\", error);\r\n      }\r\n    },\r\n    filterInterventionsByClientName(clientName) {\r\n      const lowerCaseClientName = clientName.toLowerCase();\r\n      return this.events.filter((event) =>\r\n        event.clientName.toLowerCase().includes(lowerCaseClientName)\r\n      );\r\n    },\r\n    calculateBANGE(startDate, endDate) {\r\n      const start = new Date(startDate);\r\n      const end = new Date(endDate);\r\n      let totalBANGE = 0;\r\n      let currentWeekStart = new Date(start);\r\n\r\n      while (currentWeekStart <= end) {\r\n        const weekEnd = new Date(currentWeekStart);\r\n        weekEnd.setDate(currentWeekStart.getDate() + 6);\r\n\r\n        let totalTNF = 0;\r\n        let workingDays = 0;\r\n\r\n        for (\r\n          let d = new Date(currentWeekStart);\r\n          d <= weekEnd;\r\n          d.setDate(d.getDate() + 1)\r\n        ) {\r\n          const { isWeekend } = this.isWeekend(d.getDate(), d.getMonth());\r\n          const isHoliday = this.isJourFerie(d.getDate(), d.getMonth());\r\n\r\n          if (isHoliday) {\r\n            continue;\r\n          }\r\n\r\n          if (isWeekend) {\r\n            console.log(\"holiday\");\r\n          } else {\r\n            workingDays++;\r\n\r\n            this.resources.forEach((resource) => {\r\n              const events = this.getEventsForMonth(\r\n                resource.name,\r\n                d.getMonth(),\r\n                d.getDate()\r\n              );\r\n              if (!events || events.length === 0) {\r\n                totalTNF++;\r\n              }\r\n            });\r\n          }\r\n        }\r\n\r\n        const etp = workingDays > 0 ? Math.min(workingDays, 5) : 0; // Limite à 5 jours max\r\n        const weeklyBANGE = etp > 0 ? (totalTNF / etp).toFixed(1) : 0;\r\n        totalBANGE += parseFloat(weeklyBANGE);\r\n\r\n        currentWeekStart.setDate(currentWeekStart.getDate() + 7); // Passe à la semaine suivante\r\n      }\r\n\r\n      return totalBANGE.toFixed(1); // Retourne le total formaté\r\n    },\r\n    calculateAndDisplayBANGE() {\r\n      if (this.bangeStartDate && this.bangeEndDate) {\r\n        const bangeResult = this.calculateBANGE(this.bangeStartDate, this.bangeEndDate);\r\n        this.bangeResults.push({\r\n          date: `${this.bangeStartDate} - ${this.bangeEndDate}`,\r\n          bange: bangeResult,\r\n        });\r\n        this.isBANGEModalOpen = true;\r\n      } else {\r\n        alert(\"Veuillez sélectionner une date de début et une date de fin.\");\r\n      }\r\n    },\r\n    closeBANGEModal() {\r\n      this.isBANGEModalOpen = false;\r\n      this.bangeStartDate = \"\";\r\n      this.bangeEndDate = \"\";\r\n      this.bangeResults = [];\r\n    },\r\n    getDayAbbreviation(date) {\r\n      const days = [\"dim\", \"lun\", \"mar\", \"mer\", \"jeu\", \"ven\", \"sam\"];\r\n      return days[date.getDay()];\r\n    },\r\n    isWednesday(day, monthIndex) {\r\n      const date = new Date(this.currentYear, monthIndex, day);\r\n      return date.getDay() === 3; // 3 représente mercredi (0 = dimanche, 1 = lundi, etc.)\r\n    },\r\n    // Modifiez la méthode getWeeklyBANGE pour prendre en compte le monthIndex\r\n    getWeeklyBANGE(day, monthIndex = null) {\r\n      // Détermine la date de la semaine à partir du jour donné\r\n      const initialDate = new Date(\r\n        this.currentYear,\r\n        monthIndex !== null ? monthIndex : this.currentMonth,\r\n        day\r\n      );\r\n\r\n      // Ajuste le début de la semaine au lundi\r\n      const weekStart = new Date(initialDate);\r\n      const dayOfWeek = weekStart.getDay(); // 0 = Dimanche, 1 = Lundi, ..., 6 = Samedi\r\n      const offsetToMonday = dayOfWeek === 0 ? -6 : 1 - dayOfWeek; // Ajustement vers le lundi\r\n      weekStart.setDate(weekStart.getDate() + offsetToMonday);\r\n\r\n      // Fixe la fin de la semaine au vendredi (4 jours après lundi)\r\n      const weekEnd = new Date(weekStart);\r\n      weekEnd.setDate(weekStart.getDate() + 4);\r\n\r\n      let totalTNF = 0; // Compteur des jours sans événements\r\n      let workingDays = 0; // Compteur des jours ouvrables\r\n\r\n      // Parcourt chaque jour de la semaine (lundi à vendredi)\r\n      for (let d = new Date(weekStart); d <= weekEnd; d.setDate(d.getDate() + 1)) {\r\n        const isHoliday = this.isJourFerie(d.getDate(), d.getMonth()); // Vérifie si le jour est férié\r\n\r\n        if (isHoliday) {\r\n          // Ignore les jours fériés\r\n          continue;\r\n        }\r\n\r\n        // Tous les jours de lundi à vendredi sont considérés ouvrables ici\r\n        workingDays++; // Incrémente les jours ouvrables\r\n\r\n        // Vérifie les événements pour chaque ressource\r\n        this.resources.forEach((resource) => {\r\n          const events = this.getEventsForMonth(\r\n            resource.name,\r\n            d.getMonth(),\r\n            d.getDate()\r\n          );\r\n\r\n          if (!events || events.length === 0) {\r\n            // Si aucun événement trouvé, incrémente TNF\r\n            totalTNF++;\r\n          }\r\n        });\r\n      }\r\n\r\n      // Calcule l'ETP (équivalent temps plein), limité à un maximum de 5 jours par semaine\r\n      const etp = workingDays > 0 ? Math.min(workingDays, 5) : 0;\r\n\r\n      // Calcule le ratio BANGE pour la semaine\r\n      const bange = etp > 0 ? (totalTNF / etp).toFixed(1) : 0;\r\n\r\n      // Retourne le BANGE pour la semaine\r\n      return { bange };\r\n    },\r\n    // Nouvelle méthode pour calculer le BANGE mensuel\r\n    getMonthlyBANGE() {\r\n      const start = new Date(this.currentYear, this.currentMonth, 1);\r\n      const end = new Date(this.currentYear, this.currentMonth + 1, 0);\r\n      let totalBANGE = 0;\r\n      let currentWeekStart = new Date(start);\r\n\r\n      while (currentWeekStart <= end) {\r\n        const weekEnd = new Date(currentWeekStart);\r\n        weekEnd.setDate(currentWeekStart.getDate() + 6);\r\n\r\n        let totalTNF = 0;\r\n        let workingDays = 0;\r\n\r\n        for (\r\n          let d = new Date(currentWeekStart);\r\n          d <= weekEnd;\r\n          d.setDate(d.getDate() + 1)\r\n        ) {\r\n          const dayOfWeek = d.getDay();\r\n          if (\r\n            dayOfWeek !== 0 &&\r\n            dayOfWeek !== 6 &&\r\n            !this.isJourFerie(d.getDate(), d.getMonth())\r\n          ) {\r\n            workingDays++;\r\n            this.resources.forEach((resource) => {\r\n              const events = this.getEventsForMonth(\r\n                resource.name,\r\n                d.getMonth(),\r\n                d.getDate()\r\n              );\r\n              if (!events || events.length === 0) {\r\n                totalTNF++;\r\n              }\r\n            });\r\n          }\r\n        }\r\n\r\n        const etp = workingDays > 0 ? Math.min(workingDays, 5) : 0;\r\n        const weeklyBANGE = etp > 0 ? (totalTNF / etp).toFixed(1) : 0;\r\n        totalBANGE += parseFloat(weeklyBANGE);\r\n\r\n        currentWeekStart.setDate(currentWeekStart.getDate() + 7);\r\n      }\r\n\r\n      return totalBANGE.toFixed(1);\r\n    },\r\n    getJourFerieName(day, monthIndex = null) {\r\n      const date = new Date(\r\n        this.currentYear,\r\n        monthIndex !== null ? monthIndex : this.currentMonth,\r\n        typeof day === \"number\" ? day : new Date(day).getDate()\r\n      );\r\n      const formattedDate = format(date, \"yyyy-MM-dd\");\r\n      const jourFerie = this.formattedJoursFeries.find(\r\n        (jour) => jour.date === formattedDate\r\n      );\r\n      return jourFerie ? jourFerie.name : \"Férié\";\r\n    },\r\n    isJourFerie(day, monthIndex = null) {\r\n      const date = new Date(\r\n        this.currentYear,\r\n        monthIndex !== null ? monthIndex : this.currentMonth,\r\n        typeof day === \"number\" ? day : new Date(day).getDate()\r\n      );\r\n      const formattedDate = format(date, \"yyyy-MM-dd\");\r\n\r\n      const isHoliday = this.formattedJoursFeries.some(\r\n        (jour) => jour.date === formattedDate\r\n      );\r\n\r\n      return isHoliday;\r\n    },\r\n    calculateBusinessDays(startDate, endDate) {\r\n      let count = 0;\r\n      const currentDate = new Date(startDate);\r\n\r\n      while (currentDate <= endDate) {\r\n        const dayOfWeek = currentDate.getDay();\r\n        if (dayOfWeek !== 0 && dayOfWeek !== 6) {\r\n          count++;\r\n        }\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n      }\r\n\r\n      return count;\r\n    },\r\n    showComment(event, day) {\r\n      this.hoveredEvent = event;\r\n      this.hoveredDay = day;\r\n    },\r\n    hideComment() {\r\n      this.hoveredEvent = null;\r\n      this.hoveredDay = null;\r\n    },\r\n    // Remplacer la méthode searchTNF par updateView\r\n    updateView() {\r\n      if (this.searchStartDate && this.searchEndDate) {\r\n        const startDate = new Date(this.searchStartDate);\r\n        this.currentYear = startDate.getFullYear();\r\n        this.currentMonth = startDate.getMonth();\r\n      }\r\n    },\r\n    clearDateFilters() {\r\n      this.searchStartDate = \"\";\r\n      this.searchEndDate = \"\";\r\n      this.updateView();\r\n    },\r\n    getTNFDaysInPeriod(resource, startDate, endDate) {\r\n      const tnfDays = [];\r\n      const resourceEvents = this.events.filter(\r\n        (event) => event.resource === resource.name\r\n      );\r\n\r\n      for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\r\n        // Ignorer les week-ends et les jours fériés\r\n        if (\r\n          this.isWeekend(d.getDate(), d.getMonth()).isWeekend ||\r\n          this.isJourFerie(d.getDate(), d.getMonth())\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        const eventsOnDay = resourceEvents.filter((event) => this.isEventOnDay(event, d));\r\n        if (eventsOnDay.length === 0) {\r\n          tnfDays.push(new Date(d.getFullYear(), d.getMonth(), d.getDate()));\r\n        }\r\n      }\r\n\r\n      return tnfDays;\r\n    },\r\n    isHighlightedTNF(resourceName, day, monthIndex) {\r\n      if (!this.searchStartDate || !this.searchEndDate) return false;\r\n\r\n      const resource = this.resources.find((r) => r.name === resourceName);\r\n      if (!resource) return false;\r\n\r\n      const date = new Date(\r\n        this.currentYear,\r\n        monthIndex !== undefined ? monthIndex : this.currentMonth,\r\n        day\r\n      );\r\n      const startDate = new Date(this.searchStartDate);\r\n      const endDate = new Date(this.searchEndDate);\r\n\r\n      // Exclure le jour s'il est en dehors de la plage ou s'il est un jour férié\r\n      if (date < startDate || date > endDate || this.isJourFerie(day, monthIndex)) return false;\r\n\r\n      const tnfDays = this.getTNFDaysInPeriod(resource, startDate, endDate);\r\n\r\n      return tnfDays.some(\r\n        (tnfDay) =>\r\n          tnfDay.getDate() === date.getDate() &&\r\n          tnfDay.getMonth() === date.getMonth() &&\r\n          tnfDay.getFullYear() === date.getFullYear()\r\n      );\r\n    },\r\n    async fetchJoursFeries() {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/jours-feries`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        this.joursFeries = response.data.filter(\r\n          (jour) =>\r\n            this.selectedPays === \"\" ||\r\n            (jour.agence && jour.agence.pays === this.selectedPays)\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des jours fériés:\", error);\r\n      }\r\n    },\r\n    async fetchClients() {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/clients`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        this.clients = response.data;\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des clients:\", error);\r\n      }\r\n    },\r\n    updateSelectedClient() {\r\n      const selectedClient = this.clients.find(\r\n        (client) => client.id === this.selectedClientId\r\n      );\r\n      if (selectedClient) {\r\n        this.selectedClientColor = selectedClient.color;\r\n      }\r\n    },\r\n    async saveEvent() {\r\n      try {\r\n        await axios.post(\r\n          `${API_URL}/interventions`,\r\n          {\r\n            user_id: this.user_id,\r\n            client_id: this.selectedClientId, // Assurez-vous d'utiliser l'ID du client ici\r\n            commentaire: this.comment,\r\n            date_debut: this.startDate,\r\n            date_fin: this.endDate,\r\n            color: this.selectedClientColor,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        await this.fetchResourcesAndEvents();\r\n        this.closeEventModal();\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la sauvegarde de l'événement:\", error);\r\n        if (error.response) {\r\n          console.error(\"Détails de l'erreur:\", error.response.data);\r\n          // Affichez un message d'erreur utilisateur ici si nécessaire\r\n        }\r\n      }\r\n    },\r\n    async updateEvent() {\r\n      try {\r\n        await axios.post(\r\n          // Utilisez PUT pour les mises à jour\r\n          `${API_URL}/interventions/${this.selectedEvent.id}`,\r\n          {\r\n            user_id: this.user_id,\r\n            client_id: this.selectedClientId, // Assurez-vous d'utiliser l'ID du client ici\r\n            commentaire: this.comment,\r\n            date_debut: this.startDate,\r\n            date_fin: this.endDate,\r\n            color: this.selectedClientColor,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        await this.fetchResourcesAndEvents();\r\n        this.closeEventModal();\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la mise à jour de l'événement:\", error);\r\n        if (error.response) {\r\n          console.error(\"Détails de l'erreur:\", error.response.data);\r\n          // Affichez un message d'erreur utilisateur ici si nécessaire\r\n        }\r\n      }\r\n    },\r\n    selectClient(clientId) {\r\n      const client = this.clients.find((c) => c.id === clientId);\r\n      if (client) {\r\n        this.selectedClient = client.nom;\r\n        this.selectedClientId = client.id;\r\n        this.selectedClientColor = client.color; // Assurez-vous que cette ligne est présente\r\n      } else {\r\n        this.selectedClient = null;\r\n        this.selectedClientId = null;\r\n        this.selectedClientColor = \"\";\r\n      }\r\n    },\r\n    openEventModal(day, resourceName, monthIndex = null) {\r\n      let selectedDate;\r\n\r\n      if (monthIndex !== null) {\r\n        selectedDate = new Date(this.currentYear, monthIndex, day);\r\n      } else {\r\n        selectedDate = new Date(this.currentYear, this.currentMonth, day);\r\n      }\r\n\r\n      if (!isNaN(selectedDate.getTime())) {\r\n        const headerDate = format(selectedDate, \"yyyy-MM-dd\");\r\n        this.startDate = headerDate;\r\n\r\n        const resource = this.resources.find((r) => r.name === resourceName);\r\n\r\n        if (resource) {\r\n          this.selectedEvent = {\r\n            resourceName,\r\n            resourceId: resource.id,\r\n            day: this.startDate,\r\n          };\r\n          this.user_id = resource.id;\r\n\r\n          const events =\r\n            monthIndex !== null\r\n              ? this.getEventsForMonth(resourceName, monthIndex, day)\r\n              : this.filteredEventsByDay[resourceName][day];\r\n\r\n          const event = events && events[0];\r\n\r\n          if (event) {\r\n            const intervention = resource.interventions.find((i) => i.id === event.id);\r\n            if (intervention) {\r\n              this.selectedClientId = intervention.client_id; // L'ID du client\r\n              this.selectedClient = intervention.client_name; // Le nom du client\r\n              this.comment = intervention.commentaire;\r\n              this.startDate = format(new Date(intervention.date_debut), \"yyyy-MM-dd\");\r\n              this.endDate = format(new Date(intervention.date_fin), \"yyyy-MM-dd\");\r\n              (this.selectedClientColor = intervention.client_color),\r\n                (this.selectedEvent.id = intervention.id); // Marquer comme événement existant\r\n            }\r\n          } else {\r\n            // Réinitialiser pour un nouvel événement\r\n            this.selectedClient = null;\r\n            this.selectedClientId = null;\r\n            this.comment = \"\";\r\n            this.startDate = headerDate;\r\n            this.endDate = \"\";\r\n            this.selectedClientColor = \"\"; // Valeur par défaut\r\n            this.selectedEvent.id = null; // Marquer comme nouvel événement\r\n          }\r\n\r\n          this.isEventModalOpen = true; // Ouvrir le modal\r\n        }\r\n      }\r\n    },\r\n    async deleteEvent() {\r\n      try {\r\n        await axios.delete(`${API_URL}/interventions/${this.selectedEvent.id}`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n\r\n        await this.fetchResourcesAndEvents();\r\n        this.closeEventModal();\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la suppression de l'événement:\", error);\r\n        if (error.response) {\r\n          console.error(\"Détails de l'erreur:\", error.response.data);\r\n        }\r\n      }\r\n    },\r\n    closeEventModal() {\r\n      this.isEventModalOpen = false;\r\n      this.selectedEvent = {};\r\n      this.selectedClient = null;\r\n      this.comment = \"\";\r\n      this.startDate = \"\";\r\n      this.endDate = \"\";\r\n      this.selectedClientColor = \"\";\r\n    },\r\n    resetToToday() {\r\n      const today = new Date();\r\n      this.currentYear = today.getFullYear();\r\n      this.currentMonth = today.getMonth();\r\n      this.currentDay = today.getDate();\r\n    },\r\n    prevPeriod() {\r\n      if (this.viewMode === \"month\") {\r\n        this.currentMonth--;\r\n        if (this.currentMonth < 0) {\r\n          this.currentMonth = 11;\r\n          this.currentYear--;\r\n        }\r\n      } else {\r\n        this.currentYear--;\r\n      }\r\n      this.fetchJoursFeries(); // Ajoutez cette ligne\r\n    },\r\n    nextPeriod() {\r\n      if (this.viewMode === \"month\") {\r\n        this.currentMonth++;\r\n        if (this.currentMonth > 11) {\r\n          this.currentMonth = 0;\r\n          this.currentYear++;\r\n        }\r\n      } else {\r\n        this.currentYear++;\r\n      }\r\n      this.fetchJoursFeries(); // Ajoutez cette ligne\r\n    },\r\n    getDayLabel(index, day) {\r\n      const dayDate = new Date(this.currentYear, this.currentMonth, day);\r\n      return format(dayDate, \"EEE dd\");\r\n    },\r\n    getDaysInMonth(monthIndex = null) {\r\n      const month = monthIndex !== null ? monthIndex : this.currentMonth;\r\n      const daysInMonth = new Date(this.currentYear, month + 1, 0).getDate();\r\n      return Array.from({ length: daysInMonth }, (_, i) => i + 1);\r\n    },\r\n    getDaysInYear() {\r\n      const months = [];\r\n      for (let month = 0; month < 12; month++) {\r\n        const daysInMonth = new Date(this.currentYear, month + 1, 0).getDate();\r\n        const days = Array.from({ length: daysInMonth }, (_, i) => i + 1);\r\n        months.push({\r\n          month: format(new Date(this.currentYear, month), \"MMMM\"),\r\n          days,\r\n        });\r\n      }\r\n      return months;\r\n    },\r\n    isWeekend(day, month = this.currentMonth) {\r\n      const date = new Date(this.currentYear, month, day);\r\n      const dayOfWeek = date.getDay();\r\n      return { isWeekend: dayOfWeek === 0 || dayOfWeek === 6, dayOfWeek };\r\n    },\r\n    isEventOnDay(event, day) {\r\n      const eventStart = new Date(event.startDate);\r\n      const eventEnd = new Date(event.endDate);\r\n      const dayOfWeek = day.getDay();\r\n      const isWeekend = dayOfWeek === 0 || dayOfWeek === 6;\r\n\r\n      const dayDate = new Date(day.getFullYear(), day.getMonth(), day.getDate());\r\n      const eventStartDate = new Date(\r\n        eventStart.getFullYear(),\r\n        eventStart.getMonth(),\r\n        eventStart.getDate()\r\n      );\r\n      const eventEndDate = new Date(\r\n        eventEnd.getFullYear(),\r\n        eventEnd.getMonth(),\r\n        eventEnd.getDate()\r\n      );\r\n\r\n      if (isWeekend) {\r\n        // Pour les week-ends, afficher uniquement les événements qui commencent un week-end\r\n        return (\r\n          (eventStart.getDay() === 0 || eventStart.getDay() === 6) &&\r\n          dayDate >= eventStartDate &&\r\n          dayDate <= eventEndDate\r\n        );\r\n      } else {\r\n        // Pour les jours de semaine, afficher uniquement les événements qui commencent un jour de semaine\r\n        return (\r\n          eventStart.getDay() !== 0 &&\r\n          eventStart.getDay() !== 6 &&\r\n          dayDate >= eventStartDate &&\r\n          dayDate <= eventEndDate\r\n        );\r\n      }\r\n    },\r\n    getEventsForMonth(resourceName, monthIndex, day) {\r\n      const date = new Date(this.currentYear, monthIndex, day);\r\n      return this.events.filter(\r\n        (event) => event.resource === resourceName && this.isEventOnDay(event, date)\r\n      );\r\n    },\r\n    async fetchResourcesAndEvents() {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/interventions`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        const data = response.data;\r\n\r\n        this.resources = data.map((user) => ({\r\n          id: user.id,\r\n          name: user.name,\r\n          agence: user.agence,\r\n          interventions: user.interventions,\r\n        }));\r\n\r\n        this.events = data.flatMap((user) =>\r\n          user.interventions.map((intervention) => ({\r\n            id: intervention.id,\r\n            name: intervention.commentaire,\r\n            startDate: intervention.date_debut,\r\n            endDate: intervention.date_fin,\r\n            resource: user.name,\r\n            color: intervention.client_color,\r\n            resourceId: user.id,\r\n            clientAbbreviation: intervention.client_abbreviation,\r\n            clientName: intervention.client_name,\r\n          }))\r\n        );\r\n\r\n        // Filtrer les utilisateurs et les jours fériés en fonction de l'agence sélectionnée\r\n        if (this.selectedPays) {\r\n          this.resources = this.resources.filter(\r\n            (resource) => resource.agence && resource.agence.pays === this.selectedPays\r\n          );\r\n          this.joursFeries = this.joursFeries.filter(\r\n            (jour) => jour.agence && jour.agence.pays === this.selectedPays\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des données:\", error);\r\n      }\r\n    },\r\n\r\n getClientColor(color) {\r\n      if (!color || typeof color !== \"number\") {\r\n        return this.colorMapping.default.class; // Couleur par défaut si la couleur n'est pas définie ou invalide\r\n      }\r\n      return this.colorMapping[color] ? this.colorMapping[color].class : this.colorMapping.default.class;\r\n    },\r\n    getColorName(color) {\r\n      if (!color || typeof color !== \"number\") {\r\n        return this.colorMapping.default.name; // Nom par défaut si la couleur n'est pas définie ou invalide\r\n      }\r\n      return this.colorMapping[color] ? this.colorMapping[color].name : this.colorMapping.default.name;\r\n    },\r\ncalculateStatisticsByColor() {\r\n  const statistics = {};\r\n  let startDate, endDate;\r\n\r\n  if (this.viewMode === 'month') {\r\n    startDate = new Date(this.currentYear, this.currentMonth, 1);\r\n    endDate = new Date(this.currentYear, this.currentMonth + 1, 0);\r\n  } else if (this.viewMode === 'year') {\r\n    startDate = new Date(this.currentYear, 0, 1);\r\n    endDate = new Date(this.currentYear, 11, 31);\r\n  }\r\n\r\n  // Parcourez chaque jour de la période sélectionnée\r\n  for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\r\n    const dayOfWeek = d.getDay();\r\n    if (dayOfWeek !== 0 && dayOfWeek !== 6 && !this.isJourFerie(d.getDate(), d.getMonth())) {\r\n      this.events.forEach(event => {\r\n        const eventStartDate = new Date(event.startDate);\r\n        const eventEndDate = new Date(event.endDate);\r\n\r\n        // Vérifiez si l'événement est actif ce jour-là\r\n        if ((d >= eventStartDate && d <= eventEndDate) || (d.getDate() === eventStartDate.getDate() && d.getMonth() === eventStartDate.getMonth() && d.getFullYear() === eventStartDate.getFullYear())) {\r\n          const clientColor = event.color;\r\n          const clientName = this.getColorName(clientColor);\r\n          const clientClass = this.getClientColor(clientColor); // Obtenez la classe CSS de la couleur\r\n\r\n          if (!statistics[clientColor]) {\r\n            statistics[clientColor] = { name: clientName, count: 0, color: clientColor, class: clientClass };\r\n          }\r\n          statistics[clientColor].count++;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return statistics;\r\n},\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.relative {\r\n  position: relative;\r\n}\r\n\r\n.absolute {\r\n  position: absolute;\r\n}\r\n\r\n/* Ajoutez ces styles pour une meilleure apparence du commentaire */\r\n.absolute {\r\n  max-width: 200px;\r\n  word-wrap: break-word;\r\n  z-index: 100;\r\n}\r\n.tnf-event {\r\n  width: 20px; /* ajuster la largeur pour qu'elle corresponde à la journée */\r\n  max-width: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}