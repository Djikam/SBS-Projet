{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      id: this.$route.params.id,\n      form: {\n        name: '',\n        email: '',\n        password: '',\n        domaine_id: null,\n        niveau_competence_id: null,\n        type: null,\n        agence_id: null\n      },\n      agences: [],\n      domaines: [],\n      showCompetences: false,\n      showAddCompetenceModal: false,\n      newCompetence: {\n        domaine_id: null,\n        niveau_competence_id: null\n      },\n      errorMessage: '',\n      user: '',\n      users: []\n    };\n  },\n  mounted() {\n    this.fetchDomaines();\n    this.fetchUserData();\n    this.fetchAgencies();\n    this.fetchUser();\n  },\n  methods: {\n    async fetchUser() {\n      try {\n        const response = await axios.get('http://127.0.0.1:8000/api/user', {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.users = response.data;\n        localStorage.setItem('userType', this.user.type);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    },\n    fetchAgencies() {\n      axios.get('http://127.0.0.1:8000/api/agences', {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(response => {\n        // Ensure the API returns 'agences' and populate agencies\n        this.agences = response.data.agences || [];\n      }).catch(error => {\n        console.error('Error fetching agencies:', error);\n      });\n    },\n    async fetchDomaines() {\n      try {\n        const response = await axios.get('http://127.0.0.1:8000/api/domaines-competence', {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.domaines = response.data;\n      } catch (error) {\n        console.error('Erreur lors du chargement des domaines:', error);\n      }\n    },\n    async fetchUserData() {\n      try {\n        const response = await axios.get(`http://127.0.0.1:8000/api/users/${this.id}`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        this.form = {\n          ...response.data\n        };\n        this.user = response.data;\n        this.errorMessage = '';\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données de l\\'utilisateur:', error);\n        this.errorMessage = 'Utilisateur non trouvé. Veuillez vérifier l\\'ID.';\n      }\n    },\n    async addCompetence() {\n      try {\n        // Find the domain object that matches the selected domain ID\n        const domaineToAdd = this.domaines.find(domaine => domaine.id === this.newCompetence.domaine_id);\n\n        // Set the niveau_competence_id property of the newCompetence object based on the selected domain\n        this.newCompetence.niveau_competence_id = domaineToAdd.niveau_competence.id;\n\n        // Check if the selected domain is already added to the user's competences\n        const alreadyAdded = this.user.domaines_competence.some(competence => competence.domaine_id === this.newCompetence.domaine_id);\n\n        // If the selected domain is already added, do nothing and return\n        if (alreadyAdded) return;\n\n        // Send a POST request to the server to add the new competence\n        await axios.post(`http://127.0.0.1:8000/api/users/${this.user.id}/competence`, {\n          // Send the selected domain ID and level ID in the request body\n          domaine_competence_id: this.newCompetence.domaine_id,\n          niveau_competence_id: this.newCompetence.niveau_competence_id\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n\n        // If the competence is added successfully, update the local user object\n        this.user.domaines_competence.push({\n          domaine_nom: domaineToAdd.nom,\n          user_domaine_competence_id: this.newCompetence.domaine_id,\n          niveau_competence: {\n            id: this.newCompetence.niveau_competence_id\n            // Add other properties of the niveau_competence object here if needed\n          }\n        });\n\n        // Close the modal and reset the selected domain and level\n        this.showAddCompetenceModal = false;\n        this.newCompetence.domaine_id = null;\n        this.newCompetence.niveau_competence_id = null;\n      } catch (error) {\n        // If there's an error, log it to the console\n        console.error(\"Erreur lors de l'ajout de la compétence:\", error);\n      }\n    },\n    async deleteCompetence(userDomaineCompetenceId) {\n      try {\n        await axios.delete(`http://127.0.0.1:8000/api/user-domaine-competence/${userDomaineCompetenceId}`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        this.user.domaines_competence = this.user.domaines_competence.filter(competence => competence.user_domaine_competence_id !== userDomaineCompetenceId);\n      } catch (error) {\n        console.error(\"Erreur lors de la suppression de la compétence:\", error);\n      }\n    },\n    async updateUser() {\n      try {\n        const response = await axios.post(`http://127.0.0.1:8000/api/users/${this.id}`, this.form, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        alert(\"Utilisateur mis à jour avec succès:\", response.data);\n        this.$router.push('/listPs');\n        this.errorMessage = \"\";\n      } catch (error) {\n        console.error(\"Erreur lors de la mise à jour de l'utilisateur:\", error);\n        this.errorMessage = \"Erreur lors de la mise à jour de l'utilisateur. Veuillez réessayer.\";\n      }\n    },\n    toggleCompetences() {\n      this.showCompetences = !this.showCompetences;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","id","$route","params","form","name","email","password","domaine_id","niveau_competence_id","type","agence_id","agences","domaines","showCompetences","showAddCompetenceModal","newCompetence","errorMessage","user","users","mounted","fetchDomaines","fetchUserData","fetchAgencies","fetchUser","methods","response","get","headers","localStorage","getItem","setItem","error","console","Authorization","then","catch","addCompetence","domaineToAdd","find","domaine","niveau_competence","alreadyAdded","domaines_competence","some","competence","post","domaine_competence_id","push","domaine_nom","nom","user_domaine_competence_id","deleteCompetence","userDomaineCompetenceId","delete","filter","updateUser","alert","$router","toggleCompetences"],"sources":["C:\\Users\\gongue\\Desktop\\frontsbs\\src\\components\\intervenants\\UpdatePs.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex items-center justify-center min-h-screen p-6 bg-gray-100\">\r\n    <div class=\"container relative max-w-screen-lg mx-auto\">\r\n        <!-- Panneau des compétences - Slide in smoothly -->\r\n      <transition name=\"slide-fade\">\r\n        <div\r\n          v-if=\"showCompetences\"\r\n          class=\"absolute left-0 w-64 h-full p-6 bg-white border-r rounded-r-lg shadow-lg top-10\"\r\n        >\r\n          <h3 class=\"text-lg font-bold text-center\">Compétences</h3>\r\n          <ul class=\"gap-4 mt-4 space-y-2\">\r\n            <li\r\n              v-for=\"competence in user.domaines_competence\"\r\n              :key=\"competence.user_domaine_competence_id\"\r\n              class=\"flex items-center justify-between p-2 bg-gray-100 rounded-lg\"\r\n            >\r\n              <span class=\"text-xs\">\r\n                {{ competence.domaine_nom }} - Niveau: {{ competence.niveau_type }} {{ competence.niveau_competence }}\r\n              </span>\r\n              <button\r\n                @click=\"deleteCompetence(competence.user_domaine_competence_id)\"\r\n                class=\"ml-2 text-xs font-semibold text-red-600 hover:text-red-800\"\r\n              >\r\n                Supprimer\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </transition>\r\n      <!-- Section principale du formulaire -->\r\n      <div class=\"p-4 px-4 mb-6 bg-white rounded-lg shadow-lg md:p-8\">\r\n        <div class=\"grid items-center justify-center grid-cols-1 gap-4 text-sm gap-y-2 lg:grid-cols-3\">\r\n          <div class=\"text-gray-600\">\r\n            <img src=\"@/assets/sbsN.jpeg\" alt=\"\" class=\"mb-2 rounded-lg\" />\r\n            <p class=\"text-lg font-medium\">Modifier un Consultant</p>\r\n            <p class=\"text-xs\">\r\n              S'il vous plaît, remplissez les champs que vous désirez modifier\r\n            </p>\r\n            <div v-if=\"errorMessage\" class=\"text-red-500\">{{ errorMessage }}</div>\r\n          </div>\r\n\r\n          <div class=\"lg:col-span-2\">\r\n            <div class=\"grid grid-cols-1 gap-4 text-sm gap-y-2 md:grid-cols-5\">\r\n              <div class=\"md:col-span-5\">\r\n                <label for=\"name\">Noms</label>\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"form.name\"\r\n                  id=\"name\"\r\n                  class=\"w-full h-10 px-4 mt-1 border rounded bg-gray-50 focus:ring focus:ring-blue-300\"\r\n                  placeholder=\"Noms\"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"md:col-span-5\">\r\n                <label for=\"email\">Email Address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  v-model=\"form.email\"\r\n                  id=\"email\"\r\n                  class=\"w-full h-10 px-4 mt-1 border rounded bg-gray-50 focus:ring focus:ring-blue-300\"\r\n                  placeholder=\"email@domain.com\"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"md:col-span-5\">\r\n                <label for=\"password\">Mot de Passe</label>\r\n                <input\r\n                  type=\"password\"\r\n                  v-model=\"form.password\"\r\n                  id=\"password\"\r\n                  class=\"w-full h-10 px-4 mt-1 border rounded bg-gray-50 focus:ring focus:ring-blue-300\"\r\n                  placeholder=\"Mot de Passe (laisser vide si inchangé)\"\r\n                />\r\n              </div>\r\n\r\n              <!-- Agency Select Dropdown -->\r\n              <div class=\"md:col-span-5\">\r\n                <label for=\"agency\">Agence</label>\r\n                <select v-model=\"form.agence_id\" id=\"agence\" class=\"w-full h-10 px-4 mt-1 border rounded bg-gray-50\">\r\n                  <option value=\"\">Choisir une agence</option>\r\n                  <option v-for=\"agence in agences\" :key=\"agence.id\" :value=\"agence.id\">\r\n                    {{ agence.name }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n\r\n              <div class=\"md:col-span-5\">\r\n                <label for=\"type\">Rôle de l'utilisateur</label>\r\n                <select\r\n                  v-model=\"form.type\"\r\n                  id=\"type\"\r\n                  class=\"w-full h-10 px-4 mt-1 border rounded bg-gray-50 focus:ring focus:ring-blue-300\"\r\n                >\r\n                  <option value=\"\">Choisir</option>\r\n                  <option value=\"5\" v-if=\"users.type == 5\">Administrateur</option>\r\n                  <option value=\"4\">Manager</option>\r\n                  <option value=\"3\">Chef De Projet</option>\r\n                  <option value=\"0\">Consultant Technique</option>\r\n                  <option value=\"1\">Consultant Fonctionnel</option>\r\n                  <option value=\"2\">Consultant FullStack</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"mt-4 text-center md:col-span-5\">\r\n              <div class=\"inline-flex items-center justify-between space-x-6\">\r\n                <button\r\n                  @click=\"toggleCompetences\"\r\n                  v-if=\"!showCompetences\"\r\n                  class=\"px-4 py-2 font-bold text-white bg-blue-500 rounded left-6 hover:bg-blue-700\"\r\n                >\r\n                  Voir Compétences\r\n                </button>\r\n                <button\r\n                  @click=\"toggleCompetences\"\r\n                  v-if=\"showCompetences\"\r\n                  class=\"px-4 py-2 font-bold text-white bg-blue-500 rounded left-6 hover:bg-blue-700\"\r\n                >\r\n                  Fermer Compétences\r\n                </button>\r\n                <router-link to=\"/listPs\">\r\n                  <button\r\n                    class=\"px-4 py-2 font-bold text-white bg-blue-500 rounded hover:bg-blue-700\"\r\n                  >\r\n                    Retour\r\n                  </button>\r\n                </router-link>\r\n\r\n                <button\r\n                  @click=\"updateUser\"\r\n                  class=\"px-4 py-2 font-bold text-white bg-blue-500 rounded hover:bg-blue-700\"\r\n                >\r\n                  Enregistrer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    \r\n\r\n      <!-- Modal pour ajouter une compétence -->\r\n      <transition name=\"modal\">\r\n        <div\r\n          v-if=\"showAddCompetenceModal\"\r\n          class=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\"\r\n        >\r\n          <div class=\"p-4 bg-white rounded shadow-lg w-96\">\r\n            <h2 class=\"text-lg font-bold\">Ajouter une Compétence</h2>\r\n            <select\r\n              v-model=\"newCompetence.domaine_id\"\r\n              class=\"w-full h-10 mt-2 border rounded bg-gray-50 focus:ring focus:ring-blue-300\"\r\n            >\r\n              <option disabled selected>Choisissez un domaine</option>\r\n              <option\r\n                v-for=\"domaine in domaines\"\r\n                :key=\"domaine.id\"\r\n                :value=\"domaine.id\"\r\n              >\r\n                {{ domaine.nom }} - {{ domaine.niveau_competence.niveau}}\r\n              </option>\r\n            </select>\r\n            <div class=\"flex items-center justify-center space-x-4\">\r\n              <button\r\n                @click=\"addCompetence\"\r\n                class=\"px-4 py-2 mt-4 text-white transition duration-200 bg-blue-500 rounded hover:bg-blue-700\"\r\n              >\r\n                Ajouter\r\n              </button>\r\n              <button\r\n                @click=\"showAddCompetenceModal = false\"\r\n                class=\"px-4 py-2 mt-4 text-black transition duration-200 border rounded hover:bg-gray-300\"\r\n              >\r\n                Annuler\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </transition>\r\n\r\n      <!-- Bouton pour ajouter les compétences -->\r\n      <button\r\n        @click=\"showAddCompetenceModal = true\"\r\n        class=\"absolute top-0 px-4 py-2 mt-4 text-white transition duration-200 bg-green-500 rounded left-6 hover:bg-green-700\"\r\n      >\r\n        Ajouter Compétence\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      id: this.$route.params.id,\r\n      form: {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        domaine_id: null,\r\n        niveau_competence_id: null,\r\n        type: null,\r\n        agence_id: null,\r\n      },\r\n      agences: [],\r\n      domaines: [],\r\n      showCompetences: false,\r\n      showAddCompetenceModal: false,\r\n      newCompetence: {\r\n        domaine_id: null,\r\n        niveau_competence_id: null,\r\n      },\r\n      errorMessage: '',\r\n      user: '',\r\n      users: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchDomaines();\r\n    this.fetchUserData();\r\n    this.fetchAgencies();\r\n    this.fetchUser();\r\n  },\r\n  methods: {\r\n        async fetchUser() {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:8000/api/user', {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        this.users = response.data;\r\n        localStorage.setItem('userType', this.user.type);\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    },\r\n    fetchAgencies() {\r\n      axios.get('http://127.0.0.1:8000/api/agences', {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        // Ensure the API returns 'agences' and populate agencies\r\n        this.agences = response.data.agences || [];\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching agencies:', error);\r\n      });\r\n    },\r\n    async fetchDomaines() {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:8000/api/domaines-competence', {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        this.domaines = response.data;\r\n      } catch (error) {\r\n        console.error('Erreur lors du chargement des domaines:', error);\r\n      }\r\n    },\r\n    async fetchUserData() {\r\n      try {\r\n        const response = await axios.get(`http://127.0.0.1:8000/api/users/${this.id}`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        this.form = { ...response.data };\r\n        this.user = response.data;\r\n        this.errorMessage = '';\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération des données de l\\'utilisateur:', error);\r\n        this.errorMessage = 'Utilisateur non trouvé. Veuillez vérifier l\\'ID.';\r\n      }\r\n    },\r\n    async addCompetence() {\r\n      try {\r\n        // Find the domain object that matches the selected domain ID\r\n        const domaineToAdd = this.domaines.find(\r\n          (domaine) => domaine.id === this.newCompetence.domaine_id\r\n        );\r\n\r\n        // Set the niveau_competence_id property of the newCompetence object based on the selected domain\r\n        this.newCompetence.niveau_competence_id = domaineToAdd.niveau_competence.id;\r\n\r\n        // Check if the selected domain is already added to the user's competences\r\n        const alreadyAdded = this.user.domaines_competence.some(\r\n          (competence) => competence.domaine_id === this.newCompetence.domaine_id\r\n        );\r\n\r\n        // If the selected domain is already added, do nothing and return\r\n        if (alreadyAdded) return;\r\n\r\n        // Send a POST request to the server to add the new competence\r\n        await axios.post(\r\n          `http://127.0.0.1:8000/api/users/${this.user.id}/competence`,\r\n          {\r\n            // Send the selected domain ID and level ID in the request body\r\n            domaine_competence_id: this.newCompetence.domaine_id,\r\n            niveau_competence_id: this.newCompetence.niveau_competence_id,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        // If the competence is added successfully, update the local user object\r\n        this.user.domaines_competence.push({\r\n          domaine_nom: domaineToAdd.nom,\r\n          user_domaine_competence_id: this.newCompetence.domaine_id,\r\n          niveau_competence: {\r\n            id: this.newCompetence.niveau_competence_id,\r\n            // Add other properties of the niveau_competence object here if needed\r\n          },\r\n        });\r\n\r\n        // Close the modal and reset the selected domain and level\r\n        this.showAddCompetenceModal = false;\r\n        this.newCompetence.domaine_id = null;\r\n        this.newCompetence.niveau_competence_id = null;\r\n      } catch (error) {\r\n        // If there's an error, log it to the console\r\n        console.error(\"Erreur lors de l'ajout de la compétence:\", error);\r\n      }\r\n    },\r\n    async deleteCompetence(userDomaineCompetenceId) {\r\n      try {\r\n        await axios.delete(\r\n          `http://127.0.0.1:8000/api/user-domaine-competence/${userDomaineCompetenceId}`,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        this.user.domaines_competence = this.user.domaines_competence.filter(\r\n          (competence) =>\r\n            competence.user_domaine_competence_id !== userDomaineCompetenceId\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la suppression de la compétence:\", error);\r\n      }\r\n    },\r\n    async updateUser() {\r\n      try {\r\n        const response = await axios.post(\r\n          `http://127.0.0.1:8000/api/users/${this.id}`,\r\n          this.form,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        alert(\"Utilisateur mis à jour avec succès:\", response.data);\r\n        this.$router.push('/listPs');\r\n        this.errorMessage = \"\";\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la mise à jour de l'utilisateur:\", error);\r\n        this.errorMessage = \"Erreur lors de la mise à jour de l'utilisateur. Veuillez réessayer.\";\r\n      }\r\n    },\r\n    toggleCompetences() {\r\n      this.showCompetences = !this.showCompetences;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Ajoutez vos styles ici */\r\n.slide-fade-enter-active {\r\n  transition: all 0.8s ease;\r\n}\r\n.slide-fade-leave-active {\r\n  transition: all 0.5s ease;\r\n}\r\n.slide-fade-enter, .slide-fade-leave-to /* .slide-fade-leave-active in <2.1.8 */ {\r\n  transform: translateX(100%);\r\n  opacity: 0;\r\n}\r\n.modal-enter-active, .modal-leave-active {\r\n  transition: opacity 0.5s;\r\n}\r\n.modal-enter, .modal-leave-to /* .modal-leave-active in <2.1.8 */ {\r\n  opacity: 0;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}