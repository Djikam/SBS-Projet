{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { getWithCache } from '../../api';\nimport axios from 'axios';\nimport { API_URL } from '@/config'; // Importez l'URL de l'API depuis le fichier de configuration\n\nconst state = () => ({\n  apiUrl: API_URL,\n  // Utilisez l'URL de l'API depuis le fichier de configuration\n  users: [],\n  agencies: [],\n  showCompetenceModal: false,\n  selectedUser: {},\n  selectedAgency: null,\n  currentPage: 1,\n  itemsPerPage: 10\n});\nconst mutations = {\n  setUsers(state, users) {\n    state.users = users;\n  },\n  setAgencies(state, agencies) {\n    state.agencies = agencies;\n  },\n  setShowCompetenceModal(state, show) {\n    state.showCompetenceModal = show;\n  },\n  setSelectedUser(state, user) {\n    state.selectedUser = user;\n  },\n  setSelectedAgency(state, agency) {\n    state.selectedAgency = agency;\n  },\n  setCurrentPage(state, page) {\n    state.currentPage = page;\n  }\n};\nconst actions = {\n  async fetchUsers({\n    commit,\n    state\n  }) {\n    try {\n      let url = `${state.apiUrl}/users/type-zero`;\n      if (state.selectedAgency) {\n        url += `?agence_id=${state.selectedAgency}`;\n      }\n      const response = await getWithCache(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      commit('setUsers', response.data);\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  },\n  async fetchAgencies({\n    commit,\n    state\n  }) {\n    try {\n      const response = await getWithCache(`${state.apiUrl}/agences`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      commit('setAgencies', response.data.agences);\n    } catch (error) {\n      console.error(\"Error fetching agencies:\", error);\n    }\n  },\n  async toggleUserStatus({\n    commit,\n    state\n  }, user) {\n    try {\n      const endpoint = user.active ? `${state.apiUrl}/users/${user.id}/deactivate` : `${state.apiUrl}/users/${user.id}/activate`;\n      await axios.post(endpoint, null, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      commit('setUsers', state.users.map(u => u.id === user.id ? {\n        ...u,\n        active: !u.active\n      } : u));\n    } catch (error) {\n      console.error(\"Error toggling user status:\", error);\n    }\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n};","map":{"version":3,"names":["getWithCache","axios","API_URL","state","apiUrl","users","agencies","showCompetenceModal","selectedUser","selectedAgency","currentPage","itemsPerPage","mutations","setUsers","setAgencies","setShowCompetenceModal","show","setSelectedUser","user","setSelectedAgency","agency","setCurrentPage","page","actions","fetchUsers","commit","url","response","headers","Authorization","localStorage","getItem","data","error","console","fetchAgencies","agences","toggleUserStatus","endpoint","active","id","post","map","u","namespaced"],"sources":["C:/Users/gongue/Desktop/frontsbs/src/store/modules/listPs.js"],"sourcesContent":["import { getWithCache } from '../../api';\r\nimport axios from 'axios';\r\nimport { API_URL } from '@/config'; // Importez l'URL de l'API depuis le fichier de configuration\r\n\r\nconst state = () => ({\r\n    apiUrl: API_URL, // Utilisez l'URL de l'API depuis le fichier de configuration\r\n    users: [],\r\n    agencies: [],\r\n    showCompetenceModal: false,\r\n    selectedUser: {},\r\n    selectedAgency: null,\r\n    currentPage: 1,\r\n    itemsPerPage: 10,\r\n});\r\n\r\nconst mutations = {\r\n    setUsers(state, users) {\r\n        state.users = users;\r\n    },\r\n    setAgencies(state, agencies) {\r\n        state.agencies = agencies;\r\n    },\r\n    setShowCompetenceModal(state, show) {\r\n        state.showCompetenceModal = show;\r\n    },\r\n    setSelectedUser(state, user) {\r\n        state.selectedUser = user;\r\n    },\r\n    setSelectedAgency(state, agency) {\r\n        state.selectedAgency = agency;\r\n    },\r\n    setCurrentPage(state, page) {\r\n        state.currentPage = page;\r\n    },\r\n};\r\n\r\nconst actions = {\r\n    async fetchUsers({ commit, state }) {\r\n        try {\r\n            let url = `${state.apiUrl}/users/type-zero`;\r\n            if (state.selectedAgency) {\r\n                url += `?agence_id=${state.selectedAgency}`;\r\n            }\r\n            const response = await getWithCache(url, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            });\r\n            commit('setUsers', response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching users:\", error);\r\n        }\r\n    },\r\n    async fetchAgencies({ commit, state }) {\r\n        try {\r\n            const response = await getWithCache(`${state.apiUrl}/agences`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            });\r\n            commit('setAgencies', response.data.agences);\r\n        } catch (error) {\r\n            console.error(\"Error fetching agencies:\", error);\r\n        }\r\n    },\r\n    async toggleUserStatus({ commit, state }, user) {\r\n        try {\r\n            const endpoint = user.active\r\n                ? `${state.apiUrl}/users/${user.id}/deactivate`\r\n                : `${state.apiUrl}/users/${user.id}/activate`;\r\n\r\n            await axios.post(endpoint, null, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            });\r\n\r\n            commit('setUsers', state.users.map(u => u.id === user.id ? { ...u, active: !u.active } : u));\r\n        } catch (error) {\r\n            console.error(\"Error toggling user status:\", error);\r\n        }\r\n    }\r\n};\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state,\r\n    mutations,\r\n    actions,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}