{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport axios from 'axios';\nimport { API_URL } from '@/config'; // Assurez-vous que le chemin est correct\n\nexport default {\n  data() {\n    return {\n      id: this.$route.params.id,\n      form: {\n        name: '',\n        email: '',\n        password: '',\n        type: null,\n        agence_id: null,\n        conge: null,\n        recuperation: null,\n        domaines: []\n      },\n      agences: [],\n      domaines: [],\n      niveaux: [],\n      showCompetences: false,\n      showAddCompetenceModal: false,\n      newCompetence: {\n        domaine_id: null,\n        module_id: null,\n        niveau_competence_id: null\n      },\n      selectedModules: [],\n      errorMessage: '',\n      user: '',\n      users: []\n    };\n  },\n  mounted() {\n    this.fetchDomaines();\n    this.fetchUserData();\n    this.fetchAgencies();\n    this.fetchUser();\n    this.fetchNiveaux();\n  },\n  computed: {\n    groupedCompetences() {\n      const grouped = {};\n      this.user.domaines_competence.forEach(competence => {\n        if (!grouped[competence.domaine_id]) {\n          grouped[competence.domaine_id] = {\n            domaine_id: competence.domaine_id,\n            domaine_nom: competence.domaine_nom,\n            modules: []\n          };\n        }\n        grouped[competence.domaine_id].modules.push({\n          module_id: competence.module_id,\n          module_nom: competence.module_nom,\n          niveau_competence: competence.niveau_competence,\n          user_domaine_competence_id: competence.user_domaine_competence_id\n        });\n      });\n      return Object.values(grouped);\n    }\n  },\n  methods: {\n    async fetchUser() {\n      try {\n        const response = await axios.get(`${API_URL}/user`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.users = response.data;\n        localStorage.setItem('userType', this.user.type);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    },\n    fetchAgencies() {\n      axios.get(`${API_URL}/agences`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(response => {\n        // Ensure the API returns 'agences' and populate agencies\n        this.agences = response.data.agences || [];\n      }).catch(error => {\n        console.error('Error fetching agencies:', error);\n      });\n    },\n    async fetchDomaines() {\n      try {\n        const response = await axios.get(`${API_URL}/domaines-competence`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.domaines = response.data;\n      } catch (error) {\n        console.error('Erreur lors du chargement des domaines:', error);\n      }\n    },\n    async fetchNiveaux() {\n      try {\n        const response = await axios.get(`${API_URL}/niveaux-competence`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.niveaux = response.data;\n      } catch (error) {\n        console.error('Erreur lors du chargement des niveaux:', error);\n      }\n    },\n    async fetchUserData() {\n      try {\n        const response = await axios.get(`${API_URL}/users/${this.id}`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        this.form = {\n          ...response.data\n        };\n        this.user = response.data;\n        this.errorMessage = '';\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données de l\\'utilisateur:', error);\n        this.errorMessage = 'Utilisateur non trouvé. Veuillez vérifier l\\'ID.';\n      }\n    },\n    async addCompetence() {\n      try {\n        // Send a POST request to the server to add the new competence\n        await axios.post(`${API_URL}/users/${this.user.id}/competence`, {\n          // Send the selected domain ID, module ID, and level ID in the request body\n          domaine_competence_id: this.newCompetence.domaine_id,\n          module_id: this.newCompetence.module_id,\n          niveau_competence_id: this.newCompetence.niveau_competence_id\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n\n        // If the competence is added successfully, update the local user object\n        this.user.domaines_competence.push({\n          domaine_nom: this.domaines.find(d => d.id === this.newCompetence.domaine_id).nom,\n          module_nom: this.selectedModules.find(m => m.id === this.newCompetence.module_id).nom,\n          niveau_competence: this.niveaux.find(n => n.id === this.newCompetence.niveau_competence_id).niveau,\n          user_domaine_competence_id: this.newCompetence.domaine_id\n        });\n\n        // Close the modal and reset the selected domain, module, and level\n        this.showAddCompetenceModal = false;\n        this.newCompetence.domaine_id = null;\n        this.newCompetence.module_id = null;\n        this.newCompetence.niveau_competence_id = null;\n      } catch (error) {\n        // If there's an error, log it to the console\n        console.error(\"Erreur lors de l'ajout de la compétence:\", error);\n      }\n    },\n    async deleteCompetence(userDomaineCompetenceId) {\n      try {\n        await axios.delete(`${API_URL}/user-domaine-competence/${userDomaineCompetenceId}`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        this.user.domaines_competence = this.user.domaines_competence.filter(competence => competence.user_domaine_competence_id !== userDomaineCompetenceId);\n      } catch (error) {\n        console.error(\"Erreur lors de la suppression de la compétence:\", error);\n      }\n    },\n    async updateUser() {\n      try {\n        // Préparer les domaines et modules pour l'envoi\n        this.form.domaines = this.user.domaines_competence.map(competence => ({\n          domaine_competence_id: competence.domaine_id,\n          module_id: competence.module_id,\n          niveau_competence_id: competence.niveau_competence.id\n        }));\n\n        // 1. Enregistrer l'utilisateur\n        const userResponse = await axios.post(`${API_URL}/users/${this.id}`, this.form, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n\n        // Vérifiez si l'utilisateur est bien enregistré\n        if (userResponse.status === 200) {\n          // Rediriger après succès\n          this.$router.push('/listPs');\n        }\n      } catch (error) {\n        console.error('Erreur lors de la mise à jour de l\\'utilisateur:', error.response?.data?.errors || error.message);\n      }\n    },\n    toggleCompetences() {\n      this.showCompetences = !this.showCompetences;\n    },\n    updateModules() {\n      const domaine = this.domaines.find(d => d.id === this.newCompetence.domaine_id);\n      if (domaine) {\n        this.selectedModules = domaine.modules;\n      } else {\n        this.selectedModules = [];\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","data","id","$route","params","form","name","email","password","type","agence_id","conge","recuperation","domaines","agences","niveaux","showCompetences","showAddCompetenceModal","newCompetence","domaine_id","module_id","niveau_competence_id","selectedModules","errorMessage","user","users","mounted","fetchDomaines","fetchUserData","fetchAgencies","fetchUser","fetchNiveaux","computed","groupedCompetences","grouped","domaines_competence","forEach","competence","domaine_nom","modules","push","module_nom","niveau_competence","user_domaine_competence_id","Object","values","methods","response","get","headers","localStorage","getItem","setItem","error","console","Authorization","then","catch","addCompetence","post","domaine_competence_id","find","d","nom","m","n","niveau","deleteCompetence","userDomaineCompetenceId","delete","filter","updateUser","map","userResponse","status","$router","errors","message","toggleCompetences","updateModules","domaine"],"sources":["C:\\Users\\gongue\\Desktop\\frontsbs\\src\\components\\intervenants\\ListPS.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex items-center justify-center min-h-screen p-6 bg-gray-100\">\r\n    <div class=\"container relative max-w-screen-lg mx-auto\">\r\n      <!-- Section principale du formulaire -->\r\n      <div class=\"p-4 px-4 mb-6 bg-white rounded-lg shadow-lg md:p-8\">\r\n        <div class=\"grid items-center justify-center grid-cols-1 gap-4 text-sm gap-y-2 lg:grid-cols-3\">\r\n          <div class=\"text-gray-600\">\r\n            <img src=\"@/assets/sbsN.jpeg\" alt=\"\" class=\"mb-2 rounded-lg\" />\r\n            <p class=\"text-lg font-medium\">Modifier un Consultant</p>\r\n            <p class=\"text-xs\">\r\n              S'il vous plaît, remplissez les champs que vous désirez modifier\r\n            </p>\r\n            <div v-if=\"errorMessage\" class=\"text-red-500\">{{ errorMessage }}</div>\r\n          </div>\r\n\r\n          <div class=\"lg:col-span-2\">\r\n            <div class=\"grid grid-cols-1 gap-4 text-sm gap-y-2 md:grid-cols-5\">\r\n              <div class=\"md:col-span-5\">\r\n                <label for=\"name\">Noms</label>\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"form.name\"\r\n                  id=\"name\"\r\n                  class=\"w-full h-10 px-4 mt-1 border rounded bg-gray-50 focus:ring focus:ring-blue-300\"\r\n                  placeholder=\"Noms\"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"md:col-span-5\">\r\n                <label for=\"email\">Email Address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  v-model=\"form.email\"\r\n                  id=\"email\"\r\n                  class=\"w-full h-10 px-4 mt-1 border rounded bg-gray-50 focus:ring focus:ring-blue-300\"\r\n                  placeholder=\"email@domain.com\"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"md:col-span-5\">\r\n                <label for=\"password\">Mot de Passe</label>\r\n                <input\r\n                  type=\"password\"\r\n                  v-model=\"form.password\"\r\n                  id=\"password\"\r\n                  class=\"w-full h-10 px-4 mt-1 border rounded bg-gray-50 focus:ring focus:ring-blue-300\"\r\n                  placeholder=\"Mot de Passe (laisser vide si inchangé)\"\r\n                />\r\n              </div>\r\n\r\n              <!-- Agency Select Dropdown -->\r\n              <div class=\"md:col-span-5\">\r\n                <label for=\"agency\">Agence</label>\r\n                <select v-model=\"form.agence_id\" id=\"agency\" class=\"w-full h-10 px-4 mt-1 border rounded bg-gray-50\">\r\n                  <option value=\"\">Choisir une agence</option>\r\n                  <option v-for=\"agence in agences\" :key=\"agence.id\" :value=\"agence.id\">\r\n                    {{ agence.name }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n\r\n              <div class=\"md:col-span-5\">\r\n                <label for=\"type\">Rôle de l'utilisateur</label>\r\n                <select\r\n                  v-model=\"form.type\"\r\n                  id=\"type\"\r\n                  class=\"w-full h-10 px-4 mt-1 border rounded bg-gray-50 focus:ring focus:ring-blue-300\"\r\n                >\r\n                  <option value=\"\">Choisir</option>\r\n                  <option value=\"5\" v-if=\"users.type == 5\">Administrateur</option>\r\n                  <option value=\"4\">Manager</option>\r\n                  <option value=\"3\">Chef De Projet</option>\r\n                  <option value=\"0\">Consultant Technique</option>\r\n                  <option value=\"1\">Consultant Fonctionnel</option>\r\n                  <option value=\"2\">Consultant FullStack</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div class=\"md:col-span-5\">\r\n                <label for=\"conge\">Congés</label>\r\n                <input\r\n                  type=\"number\"\r\n                  v-model=\"form.conge\"\r\n                  id=\"conge\"\r\n                  class=\"w-full h-10 px-4 mt-1 border rounded bg-gray-50 focus:ring focus:ring-blue-300\"\r\n                  placeholder=\"Congés\"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"md:col-span-5\">\r\n                <label for=\"recuperation\">Récupération</label>\r\n                <input\r\n                  type=\"number\"\r\n                  v-model=\"form.recuperation\"\r\n                  id=\"recuperation\"\r\n                  class=\"w-full h-10 px-4 mt-1 border rounded bg-gray-50 focus:ring focus:ring-blue-300\"\r\n                  placeholder=\"Récupération\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"mt-4 text-center md:col-span-5\">\r\n              <div class=\"inline-flex items-center justify-between space-x-6\">\r\n                <button\r\n                  @click=\"toggleCompetences\"\r\n                  v-if=\"!showCompetences\"\r\n                  class=\"px-4 py-2 font-bold text-white bg-blue-500 rounded left-6 hover:bg-blue-700\"\r\n                >\r\n                  Voir Compétences\r\n                </button>\r\n                <button\r\n                  @click=\"toggleCompetences\"\r\n                  v-if=\"showCompetences\"\r\n                  class=\"px-4 py-2 font-bold text-white bg-blue-500 rounded left-6 hover:bg-blue-700\"\r\n                >\r\n                  Fermer Compétences\r\n                </button>\r\n                <router-link to=\"/listPs\">\r\n                  <button\r\n                    class=\"px-4 py-2 font-bold text-white bg-blue-500 rounded hover:bg-blue-700\"\r\n                  >\r\n                    Retour\r\n                  </button>\r\n                </router-link>\r\n\r\n                <button\r\n                  @click=\"updateUser\"\r\n                  class=\"px-4 py-2 font-bold text-white bg-blue-500 rounded hover:bg-blue-700\"\r\n                >\r\n                  Enregistrer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Modal pour ajouter une compétence -->\r\n      <transition name=\"modal\">\r\n        <div\r\n          v-if=\"showAddCompetenceModal\"\r\n          class=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\"\r\n        >\r\n          <div class=\"p-4 bg-white rounded shadow-lg w-96\">\r\n            <h2 class=\"text-lg font-bold\">Ajouter une Compétence</h2>\r\n            <select\r\n              v-model=\"newCompetence.domaine_id\"\r\n              class=\"w-full h-10 mt-2 border rounded bg-gray-50 focus:ring focus:ring-blue-300\"\r\n              @change=\"updateModules\"\r\n            >\r\n              <option disabled selected>Choisissez un domaine</option>\r\n              <option\r\n                v-for=\"domaine in domaines\"\r\n                :key=\"domaine.id\"\r\n                :value=\"domaine.id\"\r\n              >\r\n                {{ domaine.nom }}\r\n              </option>\r\n            </select>\r\n            <select\r\n              v-model=\"newCompetence.module_id\"\r\n              class=\"w-full h-10 mt-2 border rounded bg-gray-50 focus:ring focus:ring-blue-300\"\r\n            >\r\n              <option disabled selected>Choisissez un module</option>\r\n              <option\r\n                v-for=\"module in selectedModules\"\r\n                :key=\"module.id\"\r\n                :value=\"module.id\"\r\n              >\r\n                {{ module.nom }}\r\n              </option>\r\n            </select>\r\n            <select\r\n              v-model=\"newCompetence.niveau_competence_id\"\r\n              class=\"w-full h-10 mt-2 border rounded bg-gray-50 focus:ring focus:ring-blue-300\"\r\n            >\r\n              <option disabled selected>Choisissez un niveau</option>\r\n              <option\r\n                v-for=\"niveau in niveaux\"\r\n                :key=\"niveau.id\"\r\n                :value=\"niveau.id\"\r\n              >\r\n                {{ niveau.niveau }}\r\n              </option>\r\n            </select>\r\n            <div class=\"flex items-center justify-center space-x-4\">\r\n              <button\r\n                @click=\"addCompetence\"\r\n                class=\"px-4 py-2 mt-4 text-white transition duration-200 bg-blue-500 rounded hover:bg-blue-700\"\r\n              >\r\n                Ajouter\r\n              </button>\r\n              <button\r\n                @click=\"showAddCompetenceModal = false\"\r\n                class=\"px-4 py-2 mt-4 text-black transition duration-200 border rounded hover:bg-gray-300\"\r\n              >\r\n                Annuler\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </transition>\r\n\r\n      <!-- Modal pour afficher les compétences -->\r\n      <transition name=\"modal\">\r\n        <div\r\n          v-if=\"showCompetences\"\r\n          class=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 center\"\r\n        >\r\n          <div class=\"w-full max-w-4xl p-6 bg-white rounded shadow-lg\">\r\n            <h3 class=\"mb-4 text-lg font-bold text-center\">Compétences</h3>\r\n            <table class=\"w-full table-auto\">\r\n              <thead>\r\n                <tr>\r\n                  <th class=\"px-4 py-2\">Domaine</th>\r\n                  <th class=\"px-4 py-2\">Module</th>\r\n                  <th class=\"px-4 py-2\">Niveau</th>\r\n                  <th class=\"px-4 py-2\">Supprimer</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <template v-for=\"domain in groupedCompetences\" :key=\"domain.domaine_id\">\r\n                  <tr>\r\n                    <td :rowspan=\"domain.modules.length\" class=\"px-4 py-2 border\">{{ domain.domaine_nom }}</td>\r\n                    <td class=\"px-4 py-2 border\">{{ domain.modules[0].module_nom }}</td>\r\n                    <td class=\"px-4 py-2 border\">{{ domain.modules[0].niveau_competence }}</td>\r\n                    <td class=\"px-4 py-2 border\">\r\n                      <button\r\n                        @click=\"deleteCompetence(domain.modules[0].user_domaine_competence_id)\"\r\n                        class=\"text-xs font-semibold text-red-600 hover:text-red-800\"\r\n                      >\r\n                        Supprimer\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                  <tr v-for=\"(module) in domain.modules.slice(1)\" :key=\"module.module_id\">\r\n                    <td class=\"px-4 py-2 border\">{{ module.module_nom }}</td>\r\n                    <td class=\"px-4 py-2 border\">{{ module.niveau_competence }}</td>\r\n                    <td class=\"px-4 py-2 border\">\r\n                      <button\r\n                        @click=\"deleteCompetence(module.user_domaine_competence_id)\"\r\n                        class=\"text-xs font-semibold text-red-600 hover:text-red-800\"\r\n                      >\r\n                        Supprimer\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                </template>\r\n              </tbody>\r\n            </table>\r\n            <div class=\"mt-4 text-center\">\r\n              <button\r\n                @click=\"toggleCompetences\"\r\n                class=\"px-4 py-2 font-bold text-white bg-blue-500 rounded hover:bg-blue-700\"\r\n              >\r\n                Fermer\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </transition>\r\n\r\n      <!-- Bouton pour ajouter les compétences -->\r\n      <button\r\n        @click=\"showAddCompetenceModal = true\"\r\n        class=\"absolute top-0 px-4 py-2 mt-4 text-white transition duration-200 bg-green-500 rounded left-6 hover:bg-green-700\"\r\n      >\r\n        Ajouter Compétence\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { API_URL } from '@/config'; // Assurez-vous que le chemin est correct\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      id: this.$route.params.id,\r\n      form: {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        type: null,\r\n        agence_id: null,\r\n        conge: null,\r\n        recuperation: null,\r\n        domaines: []\r\n      },\r\n      agences: [],\r\n      domaines: [],\r\n      niveaux: [],\r\n      showCompetences: false,\r\n      showAddCompetenceModal: false,\r\n      newCompetence: {\r\n        domaine_id: null,\r\n        module_id: null,\r\n        niveau_competence_id: null,\r\n      },\r\n      selectedModules: [],\r\n      errorMessage: '',\r\n      user: '',\r\n      users: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchDomaines();\r\n    this.fetchUserData();\r\n    this.fetchAgencies();\r\n    this.fetchUser();\r\n    this.fetchNiveaux();\r\n  },\r\n  computed: {\r\n    groupedCompetences() {\r\n      const grouped = {};\r\n      this.user.domaines_competence.forEach(competence => {\r\n        if (!grouped[competence.domaine_id]) {\r\n          grouped[competence.domaine_id] = {\r\n            domaine_id: competence.domaine_id,\r\n            domaine_nom: competence.domaine_nom,\r\n            modules: []\r\n          };\r\n        }\r\n        grouped[competence.domaine_id].modules.push({\r\n          module_id: competence.module_id,\r\n          module_nom: competence.module_nom,\r\n          niveau_competence: competence.niveau_competence,\r\n          user_domaine_competence_id: competence.user_domaine_competence_id\r\n        });\r\n      });\r\n      return Object.values(grouped);\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchUser() {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/user`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        this.users = response.data;\r\n        localStorage.setItem('userType', this.user.type);\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    },\r\n    fetchAgencies() {\r\n      axios.get(`${API_URL}/agences`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        // Ensure the API returns 'agences' and populate agencies\r\n        this.agences = response.data.agences || [];\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching agencies:', error);\r\n      });\r\n    },\r\n    async fetchDomaines() {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/domaines-competence`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        this.domaines = response.data;\r\n      } catch (error) {\r\n        console.error('Erreur lors du chargement des domaines:', error);\r\n      }\r\n    },\r\n    async fetchNiveaux() {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/niveaux-competence`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        this.niveaux = response.data;\r\n      } catch (error) {\r\n        console.error('Erreur lors du chargement des niveaux:', error);\r\n      }\r\n    },\r\n    async fetchUserData() {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/users/${this.id}`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        this.form = { ...response.data };\r\n        this.user = response.data;\r\n        this.errorMessage = '';\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération des données de l\\'utilisateur:', error);\r\n        this.errorMessage = 'Utilisateur non trouvé. Veuillez vérifier l\\'ID.';\r\n      }\r\n    },\r\n    async addCompetence() {\r\n      try {\r\n        // Send a POST request to the server to add the new competence\r\n        await axios.post(\r\n          `${API_URL}/users/${this.user.id}/competence`,\r\n          {\r\n            // Send the selected domain ID, module ID, and level ID in the request body\r\n            domaine_competence_id: this.newCompetence.domaine_id,\r\n            module_id: this.newCompetence.module_id,\r\n            niveau_competence_id: this.newCompetence.niveau_competence_id,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        // If the competence is added successfully, update the local user object\r\n        this.user.domaines_competence.push({\r\n          domaine_nom: this.domaines.find(d => d.id === this.newCompetence.domaine_id).nom,\r\n          module_nom: this.selectedModules.find(m => m.id === this.newCompetence.module_id).nom,\r\n          niveau_competence: this.niveaux.find(n => n.id === this.newCompetence.niveau_competence_id).niveau,\r\n          user_domaine_competence_id: this.newCompetence.domaine_id,\r\n        });\r\n\r\n        // Close the modal and reset the selected domain, module, and level\r\n        this.showAddCompetenceModal = false;\r\n        this.newCompetence.domaine_id = null;\r\n        this.newCompetence.module_id = null;\r\n        this.newCompetence.niveau_competence_id = null;\r\n      } catch (error) {\r\n        // If there's an error, log it to the console\r\n        console.error(\"Erreur lors de l'ajout de la compétence:\", error);\r\n      }\r\n    },\r\n    async deleteCompetence(userDomaineCompetenceId) {\r\n      try {\r\n        await axios.delete(\r\n          `${API_URL}/user-domaine-competence/${userDomaineCompetenceId}`,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        this.user.domaines_competence = this.user.domaines_competence.filter(\r\n          (competence) =>\r\n            competence.user_domaine_competence_id !== userDomaineCompetenceId\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la suppression de la compétence:\", error);\r\n      }\r\n    },\r\n    async updateUser() {\r\n      try {\r\n        // Préparer les domaines et modules pour l'envoi\r\n        this.form.domaines = this.user.domaines_competence.map(competence => ({\r\n          domaine_competence_id: competence.domaine_id,\r\n          module_id: competence.module_id,\r\n          niveau_competence_id: competence.niveau_competence.id\r\n        }));\r\n\r\n        // 1. Enregistrer l'utilisateur\r\n        const userResponse = await axios.post(`${API_URL}/users/${this.id}`, this.form, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          }\r\n        });\r\n\r\n        // Vérifiez si l'utilisateur est bien enregistré\r\n        if (userResponse.status === 200) {\r\n          // Rediriger après succès\r\n          this.$router.push('/listPs');\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur lors de la mise à jour de l\\'utilisateur:', error.response?.data?.errors || error.message);\r\n      }\r\n    },\r\n    toggleCompetences() {\r\n      this.showCompetences = !this.showCompetences;\r\n    },\r\n    updateModules() {\r\n      const domaine = this.domaines.find(d => d.id === this.newCompetence.domaine_id);\r\n      if (domaine) {\r\n        this.selectedModules = domaine.modules;\r\n      } else {\r\n        this.selectedModules = [];\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Ajoutez vos styles ici */\r\n.slide-fade-enter-active {\r\n  transition: all 0.8s ease;\r\n}\r\n.slide-fade-leave-active {\r\n  transition: all 0.5s ease;\r\n}\r\n.slide-fade-enter, .slide-fade-leave-to /* .slide-fade-leave-active in <2.1.8 */ {\r\n  transform: translateX(100%);\r\n  opacity: 0;\r\n}\r\n.modal-enter-active, .modal-leave-active {\r\n  transition: opacity 0.5s;\r\n}\r\n.modal-enter, .modal-leave-to /* .modal-leave-active in <2.1.8 */ {\r\n  opacity: 0;\r\n}\r\n</style>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}