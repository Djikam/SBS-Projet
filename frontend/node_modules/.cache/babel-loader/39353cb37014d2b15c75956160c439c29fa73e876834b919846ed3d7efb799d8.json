{"ast":null,"code":"// src/api.js\nimport axios from 'axios';\nconst api = axios.create();\n\n// Fonction pour obtenir les données de la cache ou faire une requête HTTP\nconst getWithCache = async (url, options = {}) => {\n  const cacheKey = `${url}-${JSON.stringify(options)}`;\n  const cachedResponse = localStorage.getItem(cacheKey);\n  if (cachedResponse) {\n    const cachedData = JSON.parse(cachedResponse);\n    const expirationTime = cachedData.expirationTime;\n\n    // Vérifiez si les données en cache sont expirées\n    if (new Date() < new Date(expirationTime)) {\n      return cachedData.response;\n    } else {\n      // Supprimez les données expirées du cache\n      localStorage.removeItem(cacheKey);\n    }\n  }\n  const response = await api.get(url, options);\n  const expirationTime = new Date(new Date().getTime() + 5 * 60000); // Durée de cache (5 minutes)\n\n  // Stockez la réponse avec une date d'expiration\n  localStorage.setItem(cacheKey, JSON.stringify({\n    response,\n    expirationTime\n  }));\n  a;\n  return response;\n};\nexport { getWithCache };","map":{"version":3,"names":["axios","api","create","getWithCache","url","options","cacheKey","JSON","stringify","cachedResponse","localStorage","getItem","cachedData","parse","expirationTime","Date","response","removeItem","get","getTime","setItem","a"],"sources":["C:/Users/gongue/Desktop/frontsbs/src/api.js"],"sourcesContent":["// src/api.js\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create();\r\n\r\n// Fonction pour obtenir les données de la cache ou faire une requête HTTP\r\nconst getWithCache = async (url, options = {}) => {\r\n    const cacheKey = `${url}-${JSON.stringify(options)}`;\r\n    const cachedResponse = localStorage.getItem(cacheKey);\r\n\r\n    if (cachedResponse) {\r\n        const cachedData = JSON.parse(cachedResponse);\r\n        const expirationTime = cachedData.expirationTime;\r\n\r\n        // Vérifiez si les données en cache sont expirées\r\n        if (new Date() < new Date(expirationTime)) {\r\n            return cachedData.response;\r\n        } else {\r\n            // Supprimez les données expirées du cache\r\n            localStorage.removeItem(cacheKey);\r\n        }\r\n    }\r\n\r\n    const response = await api.get(url, options);\r\n    const expirationTime = new Date(new Date().getTime() + 5 * 60000); // Durée de cache (5 minutes)\r\n\r\n    // Stockez la réponse avec une date d'expiration\r\n    localStorage.setItem(cacheKey, JSON.stringify({ response, expirationTime }));\r\na\r\n    return response;\r\n};\r\n\r\nexport { getWithCache };\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC,CAAC;;AAE1B;AACA,MAAMC,YAAY,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC9C,MAAMC,QAAQ,GAAG,GAAGF,GAAG,IAAIG,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC,EAAE;EACpD,MAAMI,cAAc,GAAGC,YAAY,CAACC,OAAO,CAACL,QAAQ,CAAC;EAErD,IAAIG,cAAc,EAAE;IAChB,MAAMG,UAAU,GAAGL,IAAI,CAACM,KAAK,CAACJ,cAAc,CAAC;IAC7C,MAAMK,cAAc,GAAGF,UAAU,CAACE,cAAc;;IAEhD;IACA,IAAI,IAAIC,IAAI,CAAC,CAAC,GAAG,IAAIA,IAAI,CAACD,cAAc,CAAC,EAAE;MACvC,OAAOF,UAAU,CAACI,QAAQ;IAC9B,CAAC,MAAM;MACH;MACAN,YAAY,CAACO,UAAU,CAACX,QAAQ,CAAC;IACrC;EACJ;EAEA,MAAMU,QAAQ,GAAG,MAAMf,GAAG,CAACiB,GAAG,CAACd,GAAG,EAAEC,OAAO,CAAC;EAC5C,MAAMS,cAAc,GAAG,IAAIC,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;;EAEnE;EACAT,YAAY,CAACU,OAAO,CAACd,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAAC;IAAEQ,QAAQ;IAAEF;EAAe,CAAC,CAAC,CAAC;EAChFO,CAAC;EACG,OAAOL,QAAQ;AACnB,CAAC;AAED,SAASb,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}