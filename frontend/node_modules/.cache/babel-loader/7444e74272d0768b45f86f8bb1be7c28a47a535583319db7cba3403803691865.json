{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport axios from 'axios';\nimport { API_URL } from '@/config'; // Assurez-vous que le chemin est correct\n\nexport default {\n  data() {\n    return {\n      domaines: [],\n      agences: [],\n      users: [],\n      niveaux: [],\n      form: {\n        name: '',\n        email: '',\n        password: '',\n        type: '',\n        agence_id: null // New field for agency selection\n      },\n      selectedDomaines: [],\n      selectedModules: [],\n      selectedModuleIds: [],\n      selectedNiveaux: {},\n      generatedPassword: '',\n      // Holds the generated password\n      passwordVisible: false\n    };\n  },\n  mounted() {\n    this.fetchDomaines();\n    this.fetchAgencies();\n    this.fetchUser();\n    this.fetchNiveaux(); // Fetch the niveaux list when component is mounted\n  },\n  methods: {\n    async fetchUser() {\n      try {\n        const response = await axios.get(`${API_URL}/user`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.users = response.data;\n        localStorage.setItem('userType', this.user.type);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    },\n    async fetchNiveaux() {\n      try {\n        const response = await axios.get(`${API_URL}/niveaux-competence`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.niveaux = response.data;\n      } catch (error) {\n        console.error('Error fetching niveaux:', error);\n      }\n    },\n    generatePassword() {\n      this.generatedPassword = '123456789';\n      this.form.password = this.generatedPassword;\n    },\n    togglePasswordVisibility() {\n      this.passwordVisible = !this.passwordVisible; // Toggle password visibility\n    },\n    async saveUser() {\n      try {\n        // 1. Enregistrer l'utilisateur\n        const userResponse = await axios.post(`${API_URL}/store`, this.form, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n\n        // V√©rifiez si l'utilisateur est bien enregistr√©\n        if (userResponse.status === 201) {\n          const userId = userResponse.data.user.id; // R√©cup√©rez l'ID de l'utilisateur nouvellement cr√©√©\n\n          // 2. Cr√©er l'association domaine de comp√©tence pour l'utilisateur\n          const competencePromises = this.selectedDomaines.map(domaineId => {\n            return axios.post(`${API_URL}/user-domaine-competence`, {\n              user_id: userId,\n              domaine_competence_id: domaineId,\n              niveau_competence_id: this.getNiveauFromDomaine(domaineId)\n            }, {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n              }\n            });\n          });\n\n          // 3. Cr√©er l'association module de comp√©tence pour l'utilisateur\n          const modulePromises = this.selectedModuleIds.map(moduleId => {\n            return axios.post(`${API_URL}/user-module-competence`, {\n              user_id: userId,\n              module_id: moduleId,\n              niveau_competence_id: this.selectedNiveaux[moduleId]\n            }, {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n              }\n            });\n          });\n\n          // Attendre que toutes les promesses soient r√©solues\n          const competenceResponses = await Promise.all([...competencePromises, ...modulePromises]);\n\n          // V√©rifiez si toutes les associations ont bien √©t√© cr√©√©es\n          const allSuccessful = competenceResponses.every(response => response.status === 201);\n          if (allSuccessful) {\n            // Rediriger apr√®s succ√®s\n            this.$router.push('/listPs');\n          }\n        }\n      } catch (error) {\n        console.error('Erreur lors de l\\'enregistrement:', error.response?.data?.errors || error.message);\n      }\n    },\n    fetchDomaines() {\n      axios.get(`${API_URL}/domaines-competence`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(response => {\n        this.domaines = response.data;\n      }).catch(error => {\n        console.error('Error fetching domaines:', error);\n      });\n    },\n    fetchAgencies() {\n      axios.get(`${API_URL}/agences`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(response => {\n        this.agences = response.data.agences || [];\n      }).catch(error => {\n        console.error('Error fetching agencies:', error);\n      });\n    },\n    updateModules(domaineId) {\n      const domaine = this.domaines.find(d => d.id === domaineId);\n      if (domaine) {\n        this.selectedModules = domaine.modules;\n      }\n    },\n    // M√©thode pour r√©cup√©rer le niveau de comp√©tence associ√© √† un domaine\n    getNiveauFromDomaine(domaineId) {\n      const domaine = this.domaines.find(d => d.id === domaineId);\n      return domaine ? domaine.niveauCompetence.id : null;\n    },\n    // M√©thode pour r√©cup√©rer le niveau de comp√©tence associ√© √† un module\n    getNiveauFromModule(moduleId) {\n      const module = this.selectedModules.find(m => m.id === moduleId);\n      return module ? module.niveauCompetence.id : null;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","data","domaines","agences","users","niveaux","form","name","email","password","type","agence_id","selectedDomaines","selectedModules","selectedModuleIds","selectedNiveaux","generatedPassword","passwordVisible","mounted","fetchDomaines","fetchAgencies","fetchUser","fetchNiveaux","methods","response","get","headers","localStorage","getItem","setItem","user","error","console","generatePassword","togglePasswordVisibility","saveUser","userResponse","post","Authorization","status","userId","id","competencePromises","map","domaineId","user_id","domaine_competence_id","niveau_competence_id","getNiveauFromDomaine","modulePromises","moduleId","module_id","competenceResponses","Promise","all","allSuccessful","every","$router","push","errors","message","then","catch","updateModules","domaine","find","d","modules","niveauCompetence","getNiveauFromModule","module","m"],"sources":["C:\\Users\\gongue\\Desktop\\frontsbs\\src\\components\\intervenants\\AddPs.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"flex items-center justify-center min-h-screen p-6 bg-gray-100\">\r\n      <div class=\"container max-w-screen-lg mx-auto\">\r\n        <div class=\"p-4 px-4 mb-6 bg-white rounded shadow-lg md:p-8\">\r\n          <div class=\"grid items-center justify-center grid-cols-1 gap-4 text-sm gap-y-2 lg:grid-cols-3\">\r\n            <div class=\"text-gray-600\">\r\n              <img src=\"@/assets/sbsN.jpeg\" alt=\"\">\r\n              <p class=\"text-lg font-medium\">Ajouter un Consultant</p>\r\n              <p class=\"text-xs\">S'il vous pla√Æt remplissez tous les champs</p>\r\n            </div>\r\n\r\n            <div class=\"lg:col-span-2\">\r\n              <div class=\"grid grid-cols-1 gap-4 text-sm gap-y-2 md:grid-cols-5\">\r\n                <div class=\"md:col-span-5\">\r\n                  <label for=\"name\">Noms</label>\r\n                  <input v-model=\"form.name\" type=\"text\" id=\"name\" class=\"w-full h-10 px-4 mt-1 border rounded bg-gray-50\" placeholder=\"noms\" />\r\n                </div>\r\n\r\n                <div class=\"md:col-span-5\">\r\n                  <label for=\"email\">Email Address</label>\r\n                  <input v-model=\"form.email\" type=\"email\" id=\"email\" class=\"w-full h-10 px-4 mt-1 border rounded bg-gray-50\" placeholder=\"email@domain.com\" />\r\n                </div>\r\n\r\n                <div class=\"md:col-span-5\">\r\n                  <label for=\"password\">Mot de Passe</label>\r\n                  <div class=\"relative\">\r\n                    <input\r\n                      v-model=\"form.password\"\r\n                      :type=\"passwordVisible ? 'text' : 'password'\"\r\n                      id=\"password\"\r\n                      class=\"w-full h-10 px-4 mt-1 border rounded bg-gray-50\"\r\n                      placeholder=\"password\"\r\n                      readonly\r\n                    />\r\n                    <button @click=\"togglePasswordVisibility\" type=\"button\" class=\"absolute transform -translate-y-1/2 right-3 top-1/2\">\r\n                      <span v-if=\"passwordVisible\">üëÅÔ∏è</span>\r\n                      <span v-else>üëÅÔ∏è‚Äçüó®Ô∏è</span>\r\n                    </button>\r\n                  </div>\r\n                  <button @click=\"generatePassword\" class=\"px-4 py-2 mt-2 text-gray-800 bg-gray-300 rounded\">G√©n√©rer Mot de Passe</button>\r\n                </div>\r\n\r\n                <!-- Agency Select Dropdown -->\r\n                <div class=\"md:col-span-2\">\r\n                  <label for=\"agency\">Agence</label>\r\n                  <select v-model=\"form.agence_id\" id=\"agence\" class=\"w-full h-10 px-4 mt-1 border rounded bg-gray-50\">\r\n                    <option value=\"\">Choisir une agence</option>\r\n                    <option v-for=\"agence in agences\" :key=\"agence.id\" :value=\"agence.id\">\r\n                      {{ agence.name }}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div class=\"md:col-span-2\">\r\n                  <label for=\"type\">R√¥le de l'utilisateur</label>\r\n                  <select v-model=\"form.type\" id=\"type\" class=\"w-full h-10 px-4 mt-1 border rounded bg-gray-50\">\r\n                    <option value=\"\">Choisir</option>\r\n                    <option value=\"5\" v-if=\"users.type == 5\">Administrateur</option>\r\n                    <option value=\"4\">Manager</option>\r\n                    <option value=\"3\">Chef De Projet</option>\r\n                    <option value=\"0\">Consultant Technique</option>\r\n                    <option value=\"1\">Consultant Fonctionnel</option>\r\n                    <option value=\"2\">Consultant FullStack</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div class=\"md:col-span-2\">\r\n                  <label>Domaine de Comp√©tence</label>\r\n                  <div class=\"p-2 overflow-y-auto border rounded h-30 bg-gray-50\">\r\n                    <div v-for=\"domaine in domaines\" :key=\"domaine.id\" class=\"flex items-center mb-2\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        :id=\"'domaine_' + domaine.id\"\r\n                        :value=\"domaine.id\"\r\n                        v-model=\"selectedDomaines\"\r\n                        class=\"checkbox\"\r\n                        @change=\"updateModules(domaine.id)\"\r\n                      />\r\n                      <label :for=\"'domaine_' + domaine.id\" class=\"ml-2\">{{ domaine.nom }}</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"md:col-span-2\">\r\n                  <label>Modules</label>\r\n                  <div class=\"p-2 overflow-y-auto border rounded h-30 bg-gray-50\">\r\n                    <div v-for=\"module in selectedModules\" :key=\"module.id\" class=\"flex items-center mb-2\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        :id=\"'module_' + module.id\"\r\n                        :value=\"module.id\"\r\n                        v-model=\"selectedModuleIds\"\r\n                        class=\"checkbox\"\r\n                      />\r\n                      <label :for=\"'module_' + module.id\" class=\"ml-2\">{{ module.nom }}</label>\r\n                      <select v-model=\"selectedNiveaux[module.id]\" class=\"ml-2 border rounded\">\r\n                        <option v-for=\"niveau in niveaux\" :key=\"niveau.id\" :value=\"niveau.id\">\r\n                          {{ niveau.nom }}\r\n                        </option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"text-center md:col-span-5\">\r\n                  <div class=\"inline-flex items-center justify-between space-x-6\">\r\n                    <router-link to=\"/listPs\">\r\n                      <button class=\"px-4 py-2 font-bold text-white bg-blue-500 rounded hover:bg-blue-700\">Retour</button>\r\n                    </router-link>\r\n                    <button @click=\"saveUser\" class=\"px-4 py-2 font-bold text-white bg-blue-500 rounded hover:bg-blue-700\">Enregistrer</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { API_URL } from '@/config'; // Assurez-vous que le chemin est correct\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      domaines: [],\r\n      agences: [],\r\n      users: [],\r\n      niveaux: [],\r\n      form: {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        type: '',\r\n        agence_id: null,  // New field for agency selection\r\n      },\r\n      selectedDomaines: [],\r\n      selectedModules: [],\r\n      selectedModuleIds: [],\r\n      selectedNiveaux: {},\r\n      generatedPassword: '',  // Holds the generated password\r\n      passwordVisible: false,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchDomaines();\r\n    this.fetchAgencies();\r\n    this.fetchUser();\r\n    this.fetchNiveaux(); // Fetch the niveaux list when component is mounted\r\n  },\r\n  methods: {\r\n    async fetchUser() {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/user`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        this.users = response.data;\r\n        localStorage.setItem('userType', this.user.type);\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    },\r\n    async fetchNiveaux() {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/niveaux-competence`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        this.niveaux = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching niveaux:', error);\r\n      }\r\n    },\r\n    generatePassword() {\r\n      this.generatedPassword = '123456789';\r\n      this.form.password = this.generatedPassword;\r\n    },\r\n    togglePasswordVisibility() {\r\n      this.passwordVisible = !this.passwordVisible;  // Toggle password visibility\r\n    },\r\n    async saveUser() {\r\n      try {\r\n        // 1. Enregistrer l'utilisateur\r\n        const userResponse = await axios.post(`${API_URL}/store`, this.form, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n\r\n        // V√©rifiez si l'utilisateur est bien enregistr√©\r\n        if (userResponse.status === 201) {\r\n          const userId = userResponse.data.user.id; // R√©cup√©rez l'ID de l'utilisateur nouvellement cr√©√©\r\n\r\n          // 2. Cr√©er l'association domaine de comp√©tence pour l'utilisateur\r\n          const competencePromises = this.selectedDomaines.map(domaineId => {\r\n            return axios.post(`${API_URL}/user-domaine-competence`, {\r\n              user_id: userId,\r\n              domaine_competence_id: domaineId,\r\n              niveau_competence_id: this.getNiveauFromDomaine(domaineId)\r\n            }, {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${localStorage.getItem('token')}`\r\n              }\r\n            });\r\n          });\r\n\r\n          // 3. Cr√©er l'association module de comp√©tence pour l'utilisateur\r\n          const modulePromises = this.selectedModuleIds.map(moduleId => {\r\n            return axios.post(`${API_URL}/user-module-competence`, {\r\n              user_id: userId,\r\n              module_id: moduleId,\r\n              niveau_competence_id: this.selectedNiveaux[moduleId]\r\n            }, {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${localStorage.getItem('token')}`\r\n              }\r\n            });\r\n          });\r\n\r\n          // Attendre que toutes les promesses soient r√©solues\r\n          const competenceResponses = await Promise.all([...competencePromises, ...modulePromises]);\r\n\r\n          // V√©rifiez si toutes les associations ont bien √©t√© cr√©√©es\r\n          const allSuccessful = competenceResponses.every(response => response.status === 201);\r\n          if (allSuccessful) {\r\n            // Rediriger apr√®s succ√®s\r\n            this.$router.push('/listPs');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur lors de l\\'enregistrement:', error.response?.data?.errors || error.message);\r\n      }\r\n    },\r\n    fetchDomaines() {\r\n      axios.get(`${API_URL}/domaines-competence`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        this.domaines = response.data;\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching domaines:', error);\r\n      });\r\n    },\r\n    fetchAgencies() {\r\n      axios.get(`${API_URL}/agences`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        this.agences = response.data.agences || [];\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching agencies:', error);\r\n      });\r\n    },\r\n    updateModules(domaineId) {\r\n      const domaine = this.domaines.find(d => d.id === domaineId);\r\n      if (domaine) {\r\n        this.selectedModules = domaine.modules;\r\n      }\r\n    },\r\n    // M√©thode pour r√©cup√©rer le niveau de comp√©tence associ√© √† un domaine\r\n    getNiveauFromDomaine(domaineId) {\r\n      const domaine = this.domaines.find(d => d.id === domaineId);\r\n      return domaine ? domaine.niveauCompetence.id : null;\r\n    },\r\n    // M√©thode pour r√©cup√©rer le niveau de comp√©tence associ√© √† un module\r\n    getNiveauFromModule(moduleId) {\r\n      const module = this.selectedModules.find(m => m.id === moduleId);\r\n      return module ? module.niveauCompetence.id : null;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Ajoutez vos styles ici */\r\n.checkbox {\r\n  appearance: none;\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 2px solid #ccc;\r\n  border-radius: 50%;\r\n  background: white;\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  cursor: pointer;\r\n  transition: background 0.3s, border-color 0.3s;\r\n}\r\n\r\n.checkbox:checked {\r\n  background: #4caf50;\r\n  border-color: #4caf50;\r\n}\r\n\r\n.checkbox:focus {\r\n  outline: none;\r\n}\r\n\r\n.checkbox:disabled {\r\n  background: #ccc;\r\n  border-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.checkbox + label {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  margin-left: 8px;\r\n  cursor: pointer;\r\n}\r\n\r\n.h-30 {\r\n  height: 120px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.slide-fade-enter-active {\r\n  transition: all 0.5s ease;\r\n}\r\n.slide-fade-leave-active {\r\n  transition: all 0.5s ease;\r\n}\r\n.slide-fade-enter, .slide-fade-leave-to /* .slide-fade-leave-active in <2.1.8 */ {\r\n  transform: translateX(100%);\r\n  opacity: 0;\r\n}\r\n.modal-enter-active, .modal-leave-active {\r\n  transition: opacity 0.5s;\r\n}\r\n.modal-enter, .modal-leave-to /* .modal-leave-active in <2.1.8 */ {\r\n  opacity: 0;\r\n}\r\n</style>\r\n"],"mappings":";;;;;AA2HA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,OAAM,QAAS,UAAU,EAAE;;AAEpC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE;QACJC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAE,EAAE;QACRC,SAAS,EAAE,IAAI,CAAG;MACpB,CAAC;MACDC,gBAAgB,EAAE,EAAE;MACpBC,eAAe,EAAE,EAAE;MACnBC,iBAAiB,EAAE,EAAE;MACrBC,eAAe,EAAE,CAAC,CAAC;MACnBC,iBAAiB,EAAE,EAAE;MAAG;MACxBC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,IAAI,CAACC,SAAS,CAAC,CAAC;IAChB,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;EACvB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMF,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,GAAGzB,OAAO,OAAO,EAAE;UAClD0B,OAAO,EAAE;YACP,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UAC1D;QACF,CAAC,CAAC;QACF,IAAI,CAACxB,KAAI,GAAIoB,QAAQ,CAACvB,IAAI;QAC1B0B,YAAY,CAACE,OAAO,CAAC,UAAU,EAAE,IAAI,CAACC,IAAI,CAACpB,IAAI,CAAC;MAClD,EAAE,OAAOqB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACD,MAAMT,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,GAAGzB,OAAO,qBAAqB,EAAE;UAChE0B,OAAO,EAAE;YACP,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UAC1D;QACF,CAAC,CAAC;QACF,IAAI,CAACvB,OAAM,GAAImB,QAAQ,CAACvB,IAAI;MAC9B,EAAE,OAAO8B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDE,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACjB,iBAAgB,GAAI,WAAW;MACpC,IAAI,CAACV,IAAI,CAACG,QAAO,GAAI,IAAI,CAACO,iBAAiB;IAC7C,CAAC;IACDkB,wBAAwBA,CAAA,EAAG;MACzB,IAAI,CAACjB,eAAc,GAAI,CAAC,IAAI,CAACA,eAAe,EAAG;IACjD,CAAC;IACD,MAAMkB,QAAQA,CAAA,EAAG;MACf,IAAI;QACF;QACA,MAAMC,YAAW,GAAI,MAAMrC,KAAK,CAACsC,IAAI,CAAC,GAAGrC,OAAO,QAAQ,EAAE,IAAI,CAACM,IAAI,EAAE;UACnEoB,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCY,aAAa,EAAE,UAAUX,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UACxD;QACF,CAAC,CAAC;;QAEF;QACA,IAAIQ,YAAY,CAACG,MAAK,KAAM,GAAG,EAAE;UAC/B,MAAMC,MAAK,GAAIJ,YAAY,CAACnC,IAAI,CAAC6B,IAAI,CAACW,EAAE,EAAE;;UAE1C;UACA,MAAMC,kBAAiB,GAAI,IAAI,CAAC9B,gBAAgB,CAAC+B,GAAG,CAACC,SAAQ,IAAK;YAChE,OAAO7C,KAAK,CAACsC,IAAI,CAAC,GAAGrC,OAAO,0BAA0B,EAAE;cACtD6C,OAAO,EAAEL,MAAM;cACfM,qBAAqB,EAAEF,SAAS;cAChCG,oBAAoB,EAAE,IAAI,CAACC,oBAAoB,CAACJ,SAAS;YAC3D,CAAC,EAAE;cACDlB,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClCY,aAAa,EAAE,UAAUX,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;cACxD;YACF,CAAC,CAAC;UACJ,CAAC,CAAC;;UAEF;UACA,MAAMqB,cAAa,GAAI,IAAI,CAACnC,iBAAiB,CAAC6B,GAAG,CAACO,QAAO,IAAK;YAC5D,OAAOnD,KAAK,CAACsC,IAAI,CAAC,GAAGrC,OAAO,yBAAyB,EAAE;cACrD6C,OAAO,EAAEL,MAAM;cACfW,SAAS,EAAED,QAAQ;cACnBH,oBAAoB,EAAE,IAAI,CAAChC,eAAe,CAACmC,QAAQ;YACrD,CAAC,EAAE;cACDxB,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClCY,aAAa,EAAE,UAAUX,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;cACxD;YACF,CAAC,CAAC;UACJ,CAAC,CAAC;;UAEF;UACA,MAAMwB,mBAAkB,GAAI,MAAMC,OAAO,CAACC,GAAG,CAAC,CAAC,GAAGZ,kBAAkB,EAAE,GAAGO,cAAc,CAAC,CAAC;;UAEzF;UACA,MAAMM,aAAY,GAAIH,mBAAmB,CAACI,KAAK,CAAChC,QAAO,IAAKA,QAAQ,CAACe,MAAK,KAAM,GAAG,CAAC;UACpF,IAAIgB,aAAa,EAAE;YACjB;YACA,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;UAC9B;QACF;MACF,EAAE,OAAO3B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAACP,QAAQ,EAAEvB,IAAI,EAAE0D,MAAK,IAAK5B,KAAK,CAAC6B,OAAO,CAAC;MACnG;IACF,CAAC;IACDzC,aAAaA,CAAA,EAAG;MACdpB,KAAK,CAAC0B,GAAG,CAAC,GAAGzB,OAAO,sBAAsB,EAAE;QAC1C0B,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCY,aAAa,EAAE,UAAUX,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CAAC,EACAiC,IAAI,CAACrC,QAAO,IAAK;QAChB,IAAI,CAACtB,QAAO,GAAIsB,QAAQ,CAACvB,IAAI;MAC/B,CAAC,EACA6D,KAAK,CAAC/B,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACJ,CAAC;IACDX,aAAaA,CAAA,EAAG;MACdrB,KAAK,CAAC0B,GAAG,CAAC,GAAGzB,OAAO,UAAU,EAAE;QAC9B0B,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCY,aAAa,EAAE,UAAUX,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CAAC,EACAiC,IAAI,CAACrC,QAAO,IAAK;QAChB,IAAI,CAACrB,OAAM,GAAIqB,QAAQ,CAACvB,IAAI,CAACE,OAAM,IAAK,EAAE;MAC5C,CAAC,EACA2D,KAAK,CAAC/B,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACJ,CAAC;IACDgC,aAAaA,CAACnB,SAAS,EAAE;MACvB,MAAMoB,OAAM,GAAI,IAAI,CAAC9D,QAAQ,CAAC+D,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACzB,EAAC,KAAMG,SAAS,CAAC;MAC3D,IAAIoB,OAAO,EAAE;QACX,IAAI,CAACnD,eAAc,GAAImD,OAAO,CAACG,OAAO;MACxC;IACF,CAAC;IACD;IACAnB,oBAAoBA,CAACJ,SAAS,EAAE;MAC9B,MAAMoB,OAAM,GAAI,IAAI,CAAC9D,QAAQ,CAAC+D,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACzB,EAAC,KAAMG,SAAS,CAAC;MAC3D,OAAOoB,OAAM,GAAIA,OAAO,CAACI,gBAAgB,CAAC3B,EAAC,GAAI,IAAI;IACrD,CAAC;IACD;IACA4B,mBAAmBA,CAACnB,QAAQ,EAAE;MAC5B,MAAMoB,MAAK,GAAI,IAAI,CAACzD,eAAe,CAACoD,IAAI,CAACM,CAAA,IAAKA,CAAC,CAAC9B,EAAC,KAAMS,QAAQ,CAAC;MAChE,OAAOoB,MAAK,GAAIA,MAAM,CAACF,gBAAgB,CAAC3B,EAAC,GAAI,IAAI;IACnD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}