{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.flat-map.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { format } from \"date-fns\";\nimport axios from \"axios\";\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport ExcelJS from 'exceljs';\nimport { API_URL } from '@/config'; // Importer API_URL// Assurez-vous que le chemin est correct\n\nexport default {\n  props: ['userId'],\n  data() {\n    return {\n      colorMapping: {\n        1: {\n          name: 'Mission confirmée',\n          class: 'bg-orange-400'\n        },\n        2: {\n          name: 'Prévision de Mission',\n          class: 'bg-yellow-400'\n        },\n        3: {\n          name: 'Voyage',\n          class: 'bg-sky-400'\n        },\n        4: {\n          name: 'Congé',\n          class: 'bg-blue-300'\n        },\n        5: {\n          name: 'Formation',\n          class: 'bg-blue-500'\n        },\n        6: {\n          name: 'Récupération',\n          class: 'bg-red-200'\n        },\n        7: {\n          name: 'Congé maladie',\n          class: 'bg-purple-600'\n        },\n        8: {\n          name: 'Université',\n          class: 'bg-sky-600'\n        },\n        9: {\n          name: 'Avant Vente',\n          class: 'bg-teal-300'\n        },\n        10: {\n          name: 'Prévision de Congé',\n          class: 'bg-orange-600'\n        },\n        // Nouvelle couleur pour Prévision de Mission\n        11: {\n          name: 'Prévision de Récupération',\n          class: 'bg-indigo-400'\n        },\n        // Nouvelle couleur pour Prévision de Récupération\n        12: {\n          name: 'Prévision de Formation',\n          class: 'bg-pink-400'\n        },\n        // Nouvelle couleur pour Prévision de Formation\n        default: {\n          name: 'Inconnu',\n          class: 'bg-blue-400'\n        }\n      },\n      isExportModalOpen: false,\n      currentYear: new Date().getFullYear(),\n      currentMonth: new Date().getMonth(),\n      monthsOfYear: [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\", \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Décembre\"],\n      currentDay: new Date().getDate(),\n      viewMode: \"month\",\n      //  month or year\n      resources: [],\n      events: [],\n      selectedClientId: \"\",\n      clientSearch: \"\",\n      // Barre de recherche pour le filtre\n      clients: [],\n      // Assurez-vous que `clients` contient les données de vos clients\n      joursFeries: [],\n      agences: [],\n      bangeResults: [],\n      isBANGEModalOpen: false,\n      bangeStartDate: \"\",\n      bangeEndDate: \"\",\n      searchStartDate: \"\",\n      searchEndDate: \"\",\n      tnfSearchResults: [],\n      isEventModalOpen: false,\n      selectedEvent: {},\n      hoveredEvent: null,\n      hoveredDay: null,\n      selectedClientColor: \"\",\n      comment: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      user_id: null,\n      selectedPays: \"\"\n    };\n  },\n  computed: {\n    consultantsByRole() {\n      if (!this.resources || this.resources.length === 0) {\n        return {};\n      }\n      const roles = {\n        0: 'Consultant technique',\n        1: 'Consultant fonctionnel',\n        2: 'Consultant Fullstack',\n        3: 'Chef de projet',\n        4: 'Manager'\n      };\n      const consultantsCount = this.resources.reduce((acc, resource) => {\n        const role = resource.type;\n        if (!acc[role]) {\n          acc[role] = {\n            name: roles[role],\n            count: 0\n          };\n        }\n        acc[role].count++;\n        return acc;\n      }, {});\n      return consultantsCount;\n    },\n    totalConsultants() {\n      return this.resources.length;\n    },\n    totalInterventionDays() {\n      let total = 0;\n      this.filteredEvents.forEach(event => {\n        const eventStart = new Date(event.startDate);\n        const eventEnd = new Date(event.endDate);\n        total += this.calculateInterventionDays(eventStart, eventEnd, this.viewMode);\n      });\n      return total;\n    },\n    totalTNF() {\n      let total = 0;\n      const startDate = this.viewMode === 'month' ? new Date(this.currentYear, this.currentMonth, 1) : new Date(this.currentYear, 0, 1);\n      const endDate = this.viewMode === 'month' ? new Date(this.currentYear, this.currentMonth + 1, 0) : new Date(this.currentYear, 11, 31);\n      this.resources.forEach(resource => {\n        total += this.getTNFDaysInPeriod(resource, startDate, endDate).length;\n      });\n      return total;\n    },\n    filteredEvents() {\n      let filtered = this.events;\n\n      // Filtrer par agence sélectionnée\n      if (this.selectedPays) {\n        filtered = filtered.filter(event => {\n          const resource = this.resources.find(r => r.name === event.resource);\n          return resource && resource.agence && resource.agence.pays === this.selectedPays;\n        });\n      }\n      return filtered;\n    },\n    filteredClients() {\n      return this.clients.filter(client => client.nom.toLowerCase().includes(this.clientSearch.toLowerCase()));\n    },\n    displayPeriod() {\n      if (this.viewMode === \"month\") {\n        const firstDayOfMonth = new Date(this.currentYear, this.currentMonth, 1);\n        return format(firstDayOfMonth, \"MMMM yyyy\");\n      } else if (this.viewMode === \"year\") {\n        const firstDayOfYear = new Date(this.currentYear, 0, 1);\n        return format(firstDayOfYear, \"yyyy\");\n      } else {\n        return `${this.currentYear}`;\n      }\n    },\n    formattedJoursFeries() {\n      // Format the public holidays to only include the date in 'yyyy-MM-dd' format\n      return this.joursFeries.map(jourFerie => ({\n        date: format(new Date(jourFerie.date_ferie), \"yyyy-MM-dd\"),\n        // Keep the date format\n        name: jourFerie.nom_ferie\n      }));\n    },\n    periodDays() {\n      return this.viewMode === \"month\" ? this.getDaysInMonth() : this.getDaysInYear();\n    },\n    filteredResources() {\n      let filtered = this.resources;\n\n      // Filter by client name\n      if (this.clientSearch) {\n        // Find resource IDs that have interventions matching the client name\n        const matchingResourceIds = new Set(this.events.filter(event => event.clientName.toLowerCase().includes(this.clientSearch.toLowerCase())).map(event => event.resourceId));\n\n        // Filter resources based on matching IDs\n        filtered = this.resources.filter(resource => matchingResourceIds.has(resource.id));\n      }\n\n      // Filter by date range\n      if (this.searchStartDate && this.searchEndDate) {\n        const startDate = new Date(this.searchStartDate);\n        const endDate = new Date(this.searchEndDate);\n        filtered = filtered.filter(resource => {\n          const tnfDays = this.getTNFDaysInPeriod(resource, startDate, endDate);\n          return tnfDays.length > 0;\n        });\n      }\n\n      // Filter by selected agency\n      if (this.selectedPays) {\n        filtered = filtered.filter(resource => resource.agence && resource.agence.pays === this.selectedPays);\n      }\n      return filtered;\n    },\n    // Nouvelle propriété calculée pour récupérer les événements par jour et ressource\n    filteredEventsByDay() {\n      const filteredEvents = {};\n      this.filteredResources.forEach(resource => {\n        filteredEvents[resource.name] = {};\n        const days = this.viewMode === \"month\" ? this.getDaysInMonth() : this.getDaysInYear().flatMap(month => month.days);\n        days.forEach(day => {\n          const dayDate = new Date(this.currentYear, this.viewMode === \"month\" ? this.currentMonth : 0, typeof day === \"number\" ? day : day.day);\n          filteredEvents[resource.name][day] = this.events.filter(event => event.resource === resource.name && this.isEventOnDay(event, dayDate));\n        });\n      });\n      return filteredEvents;\n    },\n    statisticsByColor() {\n      return this.calculateStatisticsByColor();\n    }\n  },\n  mounted() {\n    this.fetchUserData().then(user => {\n      if (user && user.id) {\n        this.fetchResourcesAndEvents(user.id);\n      }\n    });\n    this.fetchClients();\n    this.fetchJoursFeries();\n  },\n  watch: {\n    searchStartDate() {\n      this.updateView();\n      this.updateStatistics();\n    },\n    searchEndDate() {\n      this.updateView();\n      this.updateStatistics();\n    },\n    clientSearch() {\n      this.updateView();\n      this.updateStatistics();\n    },\n    selectedPays() {\n      this.fetchJoursFeries();\n      this.fetchResourcesAndEvents(this.userId);\n      this.updateStatistics();\n    }\n  },\n  methods: {\n    ...mapActions('myCalendar', ['fetchUserData', 'fetchResourcesAndEvents', 'fetchClients', 'fetchJoursFeries']),\n    ...mapMutations('myCalendar', ['SET_SEARCH_START_DATE', 'SET_SEARCH_END_DATE', 'SET_CURRENT_YEAR', 'SET_CURRENT_MONTH', 'SET_CURRENT_DAY']),\n    getDayAbbreviation(date) {\n      const days = ['dim', 'lun', 'mar', 'mer', 'jeu', 'ven', 'sam'];\n      return days[date.getDay()];\n    },\n    isWednesday(day, monthIndex) {\n      const date = new Date(this.currentYear, monthIndex, day);\n      return date.getDay() === 3;\n    },\n    getWeeklyBANGE(day, monthIndex = null) {\n      const weekStart = new Date(this.currentYear, monthIndex !== null ? monthIndex : this.currentMonth, day);\n      const weekEnd = new Date(weekStart);\n      weekEnd.setDate(weekStart.getDate() + 6);\n      let totalTNF = 0;\n      let workingDays = 0;\n      for (let d = new Date(weekStart); d <= weekEnd; d.setDate(d.getDate() + 1)) {\n        const dayOfWeek = d.getDay();\n        if (dayOfWeek !== 0 && dayOfWeek !== 6 && !this.isJourFerie(d.getDate(), d.getMonth())) {\n          workingDays++;\n          this.resources.forEach(resource => {\n            const events = this.getEventsForMonth(resource.name, d.getMonth(), d.getDate());\n            if (!events || events.length === 0) {\n              totalTNF++;\n            }\n          });\n        }\n      }\n      const etp = workingDays > 0 ? Math.min(workingDays, 5) : 0;\n      const bange = etp > 0 ? (totalTNF / etp).toFixed(1) : 0;\n      return {\n        bange\n      };\n    },\n    getJourFerieName(day, monthIndex = null) {\n      const date = new Date(this.currentYear, monthIndex !== null ? monthIndex : this.currentMonth, typeof day === 'number' ? day : new Date(day).getDate());\n      const formattedDate = format(date, 'yyyy-MM-dd');\n      const jourFerie = this.formattedJoursFeries.find(jour => jour.date === formattedDate);\n      return jourFerie ? jourFerie.name : 'Férié';\n    },\n    isJourFerie(day, monthIndex = null) {\n      const date = new Date(this.currentYear, monthIndex !== null ? monthIndex : this.currentMonth, typeof day === 'number' ? day : new Date(day).getDate());\n      const formattedDate = format(date, 'yyyy-MM-dd');\n      return this.formattedJoursFeries.some(jour => jour.date === formattedDate);\n    },\n    calculateBusinessDays(startDate, endDate) {\n      let count = 0;\n      const currentDate = new Date(startDate);\n      while (currentDate <= endDate) {\n        const dayOfWeek = currentDate.getDay();\n        if (dayOfWeek !== 0 && dayOfWeek !== 6) {\n          count++;\n        }\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n      return count;\n    },\n    showComment(event, day) {\n      this.hoveredEvent = event;\n      this.hoveredDay = day;\n    },\n    hideComment() {\n      this.hoveredEvent = null;\n      this.hoveredDay = null;\n    },\n    updateView() {\n      if (this.searchStartDate && this.searchEndDate) {\n        const startDate = new Date(this.searchStartDate);\n        this.SET_CURRENT_YEAR(startDate.getFullYear());\n        this.SET_CURRENT_MONTH(startDate.getMonth());\n      }\n    },\n    clearDateFilters() {\n      this.SET_SEARCH_START_DATE('');\n      this.SET_SEARCH_END_DATE('');\n      this.updateView();\n    },\n    getTNFDaysInPeriod(resource, startDate, endDate) {\n      const tnfDays = [];\n      const resourceEvents = this.events.filter(event => event.resource === resource.name);\n      for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\n        if (this.isWeekend(d.getDate(), d.getMonth()).isWeekend || this.isJourFerie(d.getDate())) {\n          continue;\n        }\n        const eventsOnDay = resourceEvents.filter(event => this.isEventOnDay(event, d));\n        if (eventsOnDay.length === 0) {\n          tnfDays.push(new Date(d));\n        }\n      }\n      return tnfDays;\n    },\n    isHighlightedTNF(resourceName, day, monthIndex) {\n      if (!this.searchStartDate || !this.searchEndDate) return false;\n      const resource = this.resources.find(r => r.name === resourceName);\n      if (!resource) return false;\n      const date = new Date(this.currentYear, monthIndex !== undefined ? monthIndex : this.currentMonth, day);\n      const startDate = new Date(this.searchStartDate);\n      const endDate = new Date(this.searchEndDate);\n      if (date < startDate || date > endDate || this.isJourFerie(day)) return false;\n      const tnfDays = this.getTNFDaysInPeriod(resource, startDate, endDate);\n      return tnfDays.some(tnfDay => tnfDay.getDate() === date.getDate() && tnfDay.getMonth() === date.getMonth() && tnfDay.getFullYear() === date.getFullYear());\n    },\n    updateSelectedClient() {\n      const selectedClient = this.clients.find(client => client.id === this.selectedClientId);\n      if (selectedClient) {\n        this.selectedClientColor = selectedClient.color;\n      }\n    },\n    selectClient(clientId) {\n      const client = this.clients.find(c => c.id === clientId);\n      if (client) {\n        this.selectedClient = client.nom;\n        this.selectedClientId = client.id;\n        this.selectedClientColor = client.color;\n      } else {\n        this.selectedClient = null;\n        this.selectedClientId = null;\n        this.selectedClientColor = '';\n      }\n    },\n    openEventModal(day, resourceName, monthIndex = null) {\n      let selectedDate;\n      if (monthIndex !== null) {\n        selectedDate = new Date(this.currentYear, monthIndex, day);\n      } else {\n        selectedDate = new Date(this.currentYear, this.currentMonth, day);\n      }\n      if (!isNaN(selectedDate.getTime())) {\n        const headerDate = format(selectedDate, 'yyyy-MM-dd');\n        this.startDate = headerDate;\n        const resource = this.resources.find(r => r.name === resourceName);\n        if (resource) {\n          this.selectedEvent = {\n            resourceName,\n            resourceId: resource.id,\n            day: this.startDate\n          };\n          this.user_id = resource.id;\n          const events = monthIndex !== null ? this.getEventsForMonth(resourceName, monthIndex, day) : this.filteredEventsByDay[resourceName] && this.filteredEventsByDay[resourceName][day] ? this.filteredEventsByDay[resourceName][day] : [];\n          const event = events && events[0];\n          if (event) {\n            const intervention = resource.interventions.find(i => i.id === event.id);\n            console.log(intervention);\n            if (intervention) {\n              this.selectedClientId = intervention.client_id;\n              this.selectedClient = intervention.client_name;\n              this.comment = intervention.commentaire;\n              this.startDate = format(new Date(intervention.date_debut), 'yyyy-MM-dd');\n              this.endDate = format(new Date(intervention.date_fin), 'yyyy-MM-dd');\n              this.selectedClientColor = intervention.client_color;\n              this.selectedEvent.id = intervention.id;\n            }\n          } else {\n            this.selectedClient = null;\n            this.selectedClientId = null;\n            this.comment = '';\n            this.startDate = headerDate;\n            this.endDate = '';\n            this.selectedClientColor = '';\n            this.selectedEvent.id = null;\n          }\n          this.isEventModalOpen = true;\n        }\n      }\n    },\n    async deleteEvent() {\n      const API_URL = 'http://127.0.0.1:8000/api';\n      try {\n        await axios.delete(`${API_URL}/interventions/${this.selectedEvent.id}`, {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        await this.fetchResourcesAndEvents();\n        this.closeEventModal();\n      } catch (error) {\n        console.error('Erreur lors de la suppression de l\\'événement:', error);\n        if (error.response) {\n          console.error('Détails de l\\'erreur:', error.response.data);\n        }\n      }\n    },\n    closeEventModal() {\n      this.isEventModalOpen = false;\n      this.selectedEvent = {};\n      this.selectedClient = null;\n      this.comment = '';\n      this.startDate = '';\n      this.endDate = '';\n      this.selectedClientColor = '';\n    },\n    resetToToday() {\n      const today = new Date();\n      this.SET_CURRENT_YEAR(today.getFullYear());\n      this.SET_CURRENT_MONTH(today.getMonth());\n      this.SET_CURRENT_DAY(today.getDate());\n    },\n    prevPeriod() {\n      if (this.viewMode === 'month') {\n        this.SET_CURRENT_MONTH(this.currentMonth - 1);\n        if (this.currentMonth < 0) {\n          this.SET_CURRENT_MONTH(11);\n          this.SET_CURRENT_YEAR(this.currentYear - 1);\n        }\n      } else {\n        this.SET_CURRENT_YEAR(this.currentYear - 1);\n      }\n      this.fetchJoursFeries();\n    },\n    nextPeriod() {\n      if (this.viewMode === 'month') {\n        this.SET_CURRENT_MONTH(this.currentMonth + 1);\n        if (this.currentMonth > 11) {\n          this.SET_CURRENT_MONTH(0);\n          this.SET_CURRENT_YEAR(this.currentYear + 1);\n        }\n      } else {\n        this.SET_CURRENT_YEAR(this.currentYear + 1);\n      }\n      this.fetchJoursFeries();\n    },\n    getDayLabel(index, day) {\n      const dayDate = new Date(this.currentYear, this.currentMonth, day);\n      return format(dayDate, 'EEE dd');\n    },\n    getDaysInMonth(monthIndex = null) {\n      const month = monthIndex !== null ? monthIndex : this.currentMonth;\n      const daysInMonth = new Date(this.currentYear, month + 1, 0).getDate();\n      return Array.from({\n        length: daysInMonth\n      }, (_, i) => i + 1);\n    },\n    getDaysInYear() {\n      const months = [];\n      for (let month = 0; month < 12; month++) {\n        const daysInMonth = new Date(this.currentYear, month + 1, 0).getDate();\n        const days = Array.from({\n          length: daysInMonth\n        }, (_, i) => i + 1);\n        months.push({\n          month: format(new Date(this.currentYear, month), 'MMMM'),\n          days\n        });\n      }\n      return months;\n    },\n    isWeekend(day, month = this.currentMonth) {\n      const date = new Date(this.currentYear, month, day);\n      const dayOfWeek = date.getDay();\n      return {\n        isWeekend: dayOfWeek === 0 || dayOfWeek === 6,\n        dayOfWeek\n      };\n    },\n    isEventOnDay(event, day) {\n      const eventStart = new Date(event.startDate);\n      const eventEnd = new Date(event.endDate);\n      const dayOfWeek = day.getDay();\n      const isWeekend = dayOfWeek === 0 || dayOfWeek === 6;\n      const dayDate = new Date(day.getFullYear(), day.getMonth(), day.getDate());\n      const eventStartDate = new Date(eventStart.getFullYear(), eventStart.getMonth(), eventStart.getDate());\n      const eventEndDate = new Date(eventEnd.getFullYear(), eventEnd.getMonth(), eventEnd.getDate());\n      if (isWeekend) {\n        return (eventStart.getDay() === 0 || eventStart.getDay() === 6) && dayDate >= eventStartDate && dayDate <= eventEndDate;\n      } else {\n        return eventStart.getDay() !== 0 && eventStart.getDay() !== 6 && dayDate >= eventStartDate && dayDate <= eventEndDate;\n      }\n    },\n    getEventsForMonth(resourceName, monthIndex, day) {\n      const date = new Date(this.currentYear, monthIndex, day);\n      return this.events.filter(event => event.resource === resourceName && this.isEventOnDay(event, date));\n    },\n    getClientColor(color) {\n      if (!color || typeof color !== \"number\") {\n        return this.colorMapping.default.class; // Couleur par défaut si la couleur n'est pas définie ou invalide\n      }\n      return this.colorMapping[color] ? this.colorMapping[color].class : this.colorMapping.default.class;\n    },\n    getColorName(color) {\n      if (!color || typeof color !== \"number\") {\n        return this.colorMapping.default.name; // Nom par défaut si la couleur n'est pas définie ou invalide\n      }\n      return this.colorMapping[color] ? this.colorMapping[color].name : this.colorMapping.default.name;\n    },\n    calculateStatisticsByColor() {\n      const statistics = {};\n      let startDate, endDate;\n      if (this.viewMode === 'month') {\n        startDate = new Date(this.currentYear, this.currentMonth, 1);\n        endDate = new Date(this.currentYear, this.currentMonth + 1, 0);\n      } else if (this.viewMode === 'year') {\n        startDate = new Date(this.currentYear, 0, 1);\n        endDate = new Date(this.currentYear, 11, 31);\n      }\n\n      // Parcourez chaque jour de la période sélectionnée\n      for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\n        const dayOfWeek = d.getDay();\n        if (dayOfWeek !== 0 && dayOfWeek !== 6 && !this.isJourFerie(d.getDate(), d.getMonth())) {\n          this.events.forEach(event => {\n            const eventStartDate = new Date(event.startDate);\n            const eventEndDate = new Date(event.endDate);\n\n            // Vérifiez si l'événement est actif ce jour-là\n            if (d >= eventStartDate && d <= eventEndDate || d.getDate() === eventStartDate.getDate() && d.getMonth() === eventStartDate.getMonth() && d.getFullYear() === eventStartDate.getFullYear()) {\n              const clientColor = event.color;\n              const clientName = this.getColorName(clientColor);\n              const clientClass = this.getClientColor(clientColor); // Obtenez la classe CSS de la couleur\n\n              if (!statistics[clientColor]) {\n                statistics[clientColor] = {\n                  name: clientName,\n                  count: 0,\n                  color: clientColor,\n                  class: clientClass\n                };\n              }\n              statistics[clientColor].count++;\n            }\n          });\n        }\n      }\n      return statistics;\n    }\n  }\n};","map":{"version":3,"names":["format","axios","jsPDF","ExcelJS","API_URL","props","data","colorMapping","name","class","default","isExportModalOpen","currentYear","Date","getFullYear","currentMonth","getMonth","monthsOfYear","currentDay","getDate","viewMode","resources","events","selectedClientId","clientSearch","clients","joursFeries","agences","bangeResults","isBANGEModalOpen","bangeStartDate","bangeEndDate","searchStartDate","searchEndDate","tnfSearchResults","isEventModalOpen","selectedEvent","hoveredEvent","hoveredDay","selectedClientColor","comment","startDate","endDate","user_id","selectedPays","computed","consultantsByRole","length","roles","consultantsCount","reduce","acc","resource","role","type","count","totalConsultants","totalInterventionDays","total","filteredEvents","forEach","event","eventStart","eventEnd","calculateInterventionDays","totalTNF","getTNFDaysInPeriod","filtered","filter","find","r","agence","pays","filteredClients","client","nom","toLowerCase","includes","displayPeriod","firstDayOfMonth","firstDayOfYear","formattedJoursFeries","map","jourFerie","date","date_ferie","nom_ferie","periodDays","getDaysInMonth","getDaysInYear","filteredResources","matchingResourceIds","Set","clientName","resourceId","has","id","tnfDays","filteredEventsByDay","days","flatMap","month","day","dayDate","isEventOnDay","statisticsByColor","calculateStatisticsByColor","mounted","fetchUserData","then","user","fetchResourcesAndEvents","fetchClients","fetchJoursFeries","watch","updateView","updateStatistics","userId","methods","mapActions","mapMutations","getDayAbbreviation","getDay","isWednesday","monthIndex","getWeeklyBANGE","weekStart","weekEnd","setDate","workingDays","d","dayOfWeek","isJourFerie","getEventsForMonth","etp","Math","min","bange","toFixed","getJourFerieName","formattedDate","jour","some","calculateBusinessDays","currentDate","showComment","hideComment","SET_CURRENT_YEAR","SET_CURRENT_MONTH","clearDateFilters","SET_SEARCH_START_DATE","SET_SEARCH_END_DATE","resourceEvents","isWeekend","eventsOnDay","push","isHighlightedTNF","resourceName","undefined","tnfDay","updateSelectedClient","selectedClient","color","selectClient","clientId","c","openEventModal","selectedDate","isNaN","getTime","headerDate","intervention","interventions","i","console","log","client_id","client_name","commentaire","date_debut","date_fin","client_color","deleteEvent","delete","headers","Authorization","localStorage","getItem","closeEventModal","error","response","resetToToday","today","SET_CURRENT_DAY","prevPeriod","nextPeriod","getDayLabel","index","daysInMonth","Array","from","_","months","eventStartDate","eventEndDate","getClientColor","getColorName","statistics","clientColor","clientClass"],"sources":["C:\\Users\\gongue\\Desktop\\frontsbs\\src\\components\\intervenants\\MyCalendar.vue"],"sourcesContent":["<template>\r\n  <div class=\"container p-4 mx-auto\">\r\n  \r\n    <!-- Conteneur principal pour le calcul du bench et la recherche -->\r\n    <div class=\"flex items-center justify-between mb-2\">\r\n      <!-- Formulaire pour le calcul du BANGE -->\r\n      <div class=\"mb-1\">\r\n        <h3 class=\"mb-0   font-medium text-gray-800 text-[9px] uppercase\">\r\n          Calcul du Bench par période\r\n        </h3>\r\n        <div class=\"flex items-center p-2 space-x-6 rounded-lg shadow-md bg-gray-50\">\r\n          <div class=\"flex items-center space-x-2\">\r\n            <label for=\"bange-start-date\" class=\"text-sm font-medium text-gray-700 text-[9px]\">Date de début:</label>\r\n            <input id=\"bange-start-date\" v-model=\"bangeStartDate\" type=\"date\" class=\"p-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\" />\r\n          </div>\r\n          <div class=\"flex items-center space-x-2\">\r\n            <label for=\"bange-end-date\" class=\"text-sm font-medium text-gray-700 text-[9px]\">Date de fin:</label>\r\n            <input id=\"bange-end-date\" v-model=\"bangeEndDate\" type=\"date\" class=\"p-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\" />\r\n          </div>\r\n          <button @click=\"calculateAndDisplayBANGE\" class=\"p-2 text-[9px] text-white bg-blue-500 rounded shadow-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\">\r\n            Calculer le Bench\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Modal pour afficher les résultats du BANGE -->\r\n      <div v-if=\"isBANGEModalOpen\" class=\"fixed inset-0 z-[70] flex items-center justify-center bg-black bg-opacity-50\">\r\n        <div class=\"w-full max-w-md p-6 bg-white rounded-lg\">\r\n          <h2 class=\"mb-4 text-xl font-bold\">Résultats du Bench</h2>\r\n          <div class=\"overflow-y-auto max-h-60\">\r\n            <table class=\"w-full\">\r\n              <thead>\r\n                <tr>\r\n                  <th class=\"px-4 py-2 font-semibold text-left bg-gray-100\">Période</th>\r\n                  <th class=\"px-4 py-2 font-semibold text-right bg-gray-100\">Etp</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"result in bangeResults\" :key=\"result.date\" class=\"border-b\">\r\n                  <td class=\"px-4 py-2\">{{ result.date }}</td>\r\n                  <td class=\"px-4 py-2 text-right\">{{ result.bange }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <button @click=\"closeBANGEModal\" class=\"px-4 py-2 mt-4 text-white bg-blue-500 rounded hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\">\r\n            Fermer\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Formulaire de recherche -->\r\n      <div class=\"mb-1\">\r\n        <h3 class=\"mb-0  font-medium text-gray-800 text-[9px] uppercase\">Recherche des Consultants en TNF </h3>\r\n        <div class=\"flex items-center p-1 space-x-6 rounded-lg shadow-md bg-gray-50\">\r\n          <div class=\"flex items-center space-x-2\">\r\n            <label for=\"start-search\" class=\"text-sm font-medium text-gray-700 text-[9px]\">Date de début:</label>\r\n            <input id=\"start-search\" v-model=\"searchStartDate\" type=\"date\" class=\"p-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[9px]\" />\r\n          </div>\r\n          <div class=\"flex items-center space-x-2\">\r\n            <label for=\"end-search\" class=\"text-sm font-medium text-gray-700 text-[9px]\">Date de fin:</label>\r\n            <input id=\"end-search\" v-model=\"searchEndDate\" type=\"date\" class=\"p-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[9px]\" />\r\n          </div>\r\n          <button @click=\"clearDateFilters\" class=\"p-2 text-[9px] text-white bg-red-500 rounded shadow-lg hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50\">\r\n            Effacer les filtres\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex justify-center p-2 space-x-4\">\r\n      <!-- Modal pour sélectionner la période et le format d'exportation -->\r\n      <div v-if=\"isExportModalOpen\" class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-[70]\">\r\n        <div class=\"w-full max-w-md p-6 bg-white rounded-lg shadow-lg\">\r\n          <h2 class=\"mb-4 text-xl font-bold\">Exporter les données</h2>\r\n          <div class=\"mb-4\">\r\n            <label for=\"start-date\" class=\"block text-sm font-medium text-gray-700\">Date de début :</label>\r\n            <input type=\"date\" v-model=\"startDate\" id=\"start-date\" class=\"p-2 mt-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300\" />\r\n          </div>\r\n          <div class=\"mb-4\">\r\n            <label for=\"end-date\" class=\"block text-sm font-medium text-gray-700\">Date de fin :</label>\r\n            <input type=\"date\" v-model=\"endDate\" id=\"end-date\" class=\"p-2 mt-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300\" />\r\n          </div>\r\n          <div class=\"flex justify-between gap-2\">\r\n            <button @click=\"exportToXLSX\" class=\"px-4 py-2 text-xs text-white bg-green-500 rounded\">Exporter en XLSX</button>\r\n            <button @click=\"exportToPDF\" class=\"px-4 py-2 text-xs text-white bg-blue-500 rounded\">Exporter en PDF</button>\r\n            <button @click=\"closeExportModal\" class=\"px-4 py-2 text-xs text-white bg-red-500 rounded\">Fermer</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Legend Container -->\r\n      <div class=\"pt-2\">\r\n        <h4 class=\"mb-2 font-medium text-[9px] uppercase\">Statistique par Période</h4>\r\n        <div class=\"flex flex-wrap gap-2\">\r\n          <div v-for=\"(stat, color) in statisticsByColor\" :key=\"color\" class=\"flex items-center p-2 space-x-2 bg-white rounded shadow-md\">\r\n            <div class=\"flex items-center justify-center h-4 p-1\" :class=\"stat.class\">\r\n              <small class=\"text-[8px] text-white\">{{ stat.count }} / {{ totalInterventionDays }} j</small>\r\n            </div>\r\n            <span class=\"text-[8px] text-black\">{{ stat.name }}</span>\r\n            \r\n          </div>\r\n          \r\n        <div class=\"flex items-center p-2 space-x-2 bg-red-500 rounded shadow-md\">\r\n          <div class=\"flex items-center justify-center h-4 p-1\">\r\n            <small class=\"text-[8px] text-white\">{{ totalTNF }} j</small>\r\n          </div>\r\n          <span class=\"text-[8px] text-white\">Total TNF</span>\r\n        </div>\r\n        <div v-for=\"(role, index) in consultantsByRole\" :key=\"index\" class=\"flex items-center p-2 space-x-2 bg-blue-500 rounded shadow-md \">\r\n          <div class=\"flex items-center justify-center h-4 p-1\" :class=\"getClientColor(index)\">\r\n            <small class=\"text-[8px] text-white\">{{ role.count }} / {{ totalConsultants }}</small>\r\n          </div>\r\n          <span class=\"text-[8px] text-white\">{{ role.name }}</span>\r\n        </div>\r\n        \r\n          \r\n        </div>\r\n       \r\n      </div>\r\n    </div>\r\n    <div class=\"flex justify-between p-3 mt-1 bg-blue-500 rounded-t-md\">\r\n      <div class=\"flex items-center justify-\">\r\n        <div>\r\n          <button @click=\"prevPeriod\" class=\"px-4 py-2 text-white bg-blue-500 rounded shadow-lg text-[10px]\">\r\n            Précédent\r\n          </button>\r\n          <button @click=\"resetToToday\" class=\"px-4 py-2 ml-4 text-white bg-green-500 rounded shadow-lg text-[10px]\">\r\n            Mois en cours\r\n          </button>\r\n          <button @click=\"nextPeriod\" class=\"px-4 py-2 ml-4 text-white bg-blue-500 rounded shadow-lg text-[10px]\">\r\n            Suivant\r\n          </button>\r\n          <input id=\"client-search\" v-model=\"clientSearch\" type=\"text\" class=\"px-4 py-2 ml-4 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\" placeholder=\"Search with client name's\" />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h2 class=\"text-2xl font-bold text-white\">{{ displayPeriod }}</h2>\r\n      </div>\r\n      <div class=\"flex\">\r\n        <button @click=\"viewMode = 'month'\" :class=\"{ 'bg-white text-black': viewMode === 'month' }\" class=\"px-4 py-2 transition-colors duration-200 rounded shadow-lg text-[10px]\">\r\n          Mois\r\n        </button>\r\n        <button @click=\"viewMode = 'year'\" :class=\"{ 'bg-white text-black': viewMode === 'year' }\" class=\"px-4 py-2 ml-2 transition-colors duration-200 rounded shadow-lg text-[10px]\">\r\n          Année\r\n        </button>\r\n        <select v-model=\"selectedPays\" class=\"px-4 py-2 ml-2 transition-colors duration-200 rounded shadow-lg text-[10px]\">\r\n          <option value=\"\">Tous les pays</option>\r\n          <option v-for=\"agence in agences\" :key=\"agence.id\" :value=\"agence.pays\">\r\n            {{ agence.pays }}\r\n          </option>\r\n        </select>\r\n        <button @click=\"openExportModal\" class=\"px-4 py-2 ml-2 text-xs text-black rounded bg-gray-50\">Exporter</button>\r\n      </div>\r\n    </div>\r\n<!-- Vue Mensuelle -->\r\n<div v-if=\"viewMode === 'month'\" class=\"overflow-x-auto overflow-y-scroll md:h-[400px]\">\r\n  <table class=\"min-w-full border border-gray-300 table-auto\">\r\n    <thead class=\"sticky z-50 text-white bg-blue-500\">\r\n      <tr class=\"sticky z-50 bg-blue-500\">\r\n        <th class=\"sticky left-0 w-1/4 p-2 text-[9px] z-[70] bg-blue-500 rounded-l-lg\">\r\n          Ressources\r\n        </th>\r\n        <th v-for=\"(day, index) in periodDays\" :key=\"index\" class=\"sticky top-0 p-2 border-b bg-blue-500 z-50 border-gray-300 w-[50px] text-[9px]\">\r\n          {{ getDayLabel(index, day) }}\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <!-- Bench Row -->\r\n      <tr class=\"bench-row\">\r\n        <td class=\"sticky left-0 p-2 bg-white text-[9px] font-bold z-50\">\r\n          Bench\r\n        </td>\r\n        <td v-for=\"(day, index) in periodDays\" :key=\"index\" class=\"p-2 border-b border-gray-300 w-[50px] text-[9px]\">\r\n          {{ getWeeklyBenchForDay(day) }}\r\n        </td>\r\n      </tr>\r\n      <!-- Resource rows -->\r\n      <tr v-for=\"resource in filteredResources\" :key=\"resource.name\">\r\n        <td class=\"sticky left-0 p-1 bg-white text-[10px] z-50\">\r\n          {{ resource.name }}\r\n        </td>\r\n        <td v-for=\"(day, index) in periodDays\" :key=\"index\" class=\"p-1 border-b border-gray-300 w-[50px] text-[9px]\" :class=\"{\r\n            'bg-red-400': isJourFerie(day),\r\n            'bg-gray-300': isWeekend(day).isWeekend,\r\n          }\" @click=\"openEventModal(day, resource.name)\">\r\n          <!-- Holiday Display -->\r\n          <div v-if=\"isJourFerie(day)\" class=\"text-xs font-bold text-white\">\r\n            <div class=\"w-[50px] h-6 p-1 text-[6px] text-white bg-red-400 rounded\">\r\n              {{ getJourFerieName(day, monthIndex) }}\r\n            </div>\r\n          </div>\r\n          <!-- Weekend Display -->\r\n          <div v-else-if=\"isWeekend(day).isWeekend\" class=\"w-full h-full p-1 text-[9px] text-black bg-gray-300 rounded\">\r\n            <template v-if=\"filteredEventsByDay[resource.name][day].length\">\r\n              <div v-for=\"event in filteredEventsByDay[resource.name][day]\" :key=\"event.id\" class=\"relative w-[50px] h-6 p-1 text-[9px] text-center rounded cursor-pointer\" :class=\"getClientColor(event.color)\" @mouseover=\"showComment(event, day)\" @mouseleave=\"hideComment\">\r\n                {{ event.clientAbbreviation }}\r\n              </div>\r\n            </template>\r\n            <template v-else><p class=\"text-[9px]\">weekend</p></template>\r\n          </div>\r\n          <!-- Normal Day Display (not holiday, not weekend) -->\r\n          <div v-else>\r\n            <template v-if=\"filteredEventsByDay[resource.name][day].length\">\r\n              <div v-for=\"event in filteredEventsByDay[resource.name][day]\" :key=\"event.id\" class=\"relative w-[50px] h-6 p-1 text-[9px] text-center rounded cursor-pointer\" :class=\"getClientColor(event.color)\" @mouseover=\"showComment(event, day)\" @mouseleave=\"hideComment\">\r\n                {{ event.clientAbbreviation }}\r\n                <div v-if=\"hoveredEvent === event && hoveredDay === day\" class=\"absolute z-10 p-2 text-sm text-white whitespace-normal bg-gray-800 rounded shadow-lg\" style=\"\r\n                    width: 200px;\r\n                    bottom: 100%;\r\n                    left: 50%;\r\n                    transform: translateX(-50%);\r\n                  \">\r\n                  {{ event.name }}\r\n                </div>\r\n              </div>\r\n            </template>\r\n            <!-- TNF for normal days without events -->\r\n            <template v-else>\r\n              <div v-if=\"!isJourFerie(day)\" class=\"h-6 p-1 text-[9px] text-white bg-green-400 rounded cursor-pointer hover:bg-green-600\" :class=\"{\r\n                  'border-2 border-blue-600': isHighlightedTNF(resource.name, day),\r\n                }\">\r\n                TNF\r\n              </div>\r\n            </template>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n    <!-- Vue Annuelle -->\r\n    <div v-else-if=\"viewMode === 'year'\" class=\"overflow-x-auto overflow-y-scroll md:h-[400px]\">\r\n      <div class=\"relative overflow-x-auto\">\r\n        <table class=\"min-w-full border border-gray-900 table-auto\">\r\n          <thead class=\"sticky top-0 z-10 text-white bg-blue-500\">\r\n            <tr>\r\n              <th class=\"sticky left-0 z-50 w-1/4 p-1 bg-blue-500 rounded-l-lg\">Ressources</th>\r\n              <th v-for=\"month in monthsOfYear\" :key=\"month\" class=\"p-1 border border-gray-300\">\r\n                <div>{{ month }}</div>\r\n                <div class=\"flex row-auto gap-1\">\r\n                  <div v-for=\"day in getDaysInMonth(monthsOfYear.indexOf(month))\" :key=\"`${month}-${day}`\" class=\"text-[9px] p-1 w-[50px] mr-[8px]\">\r\n                    {{ getDayAbbreviation(new Date(currentYear, monthsOfYear.indexOf(month), day)) }}\r\n                    {{ String(day).padStart(2, \"0\") }}\r\n                  </div>\r\n                </div>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"overflow-x-auto\">\r\n            <!-- Bench Row pour la vue annuelle -->\r\n            <tr class=\"\">\r\n              <td class=\"sticky left-0 p-2 bg-white text-[9px] font-bold gap-2 \">Bench</td>\r\n              <td v-for=\"(month, monthIndex) in getDaysInYear()\" :key=\"monthIndex\" class=\"p-1 border border-gray-300 text-[9px]\">\r\n                <div class=\"flex gap-[2px]\">\r\n                  <div v-for=\"day in month.days\" :key=\"day\" class=\"mx-[5px] text-[9px] text-center bg-transparent w-[50px] h-6 gap-3 rounded-sm\">\r\n                    <!-- Ajout de la condition pour les jours fériés -->\r\n                    <div v-if=\"isJourFerie(day, monthIndex)\">\r\n                      <div class=\"w-[50px] h-6 p-1 text-[1px] text-white bg-transparent rounded\">\r\n                        {{ getJourFerieName(day, monthIndex) }}\r\n                      </div>\r\n                    </div>\r\n                    <div v-else-if=\"isWeekend(day, monthIndex).isWeekend\">\r\n                      <div class=\"w-[50px] h-6 p-1 text-[1px] text-center text-white bg-transparent rounded\">\r\n                        weekend\r\n                      </div>\r\n                    </div>\r\n                    <div v-else>\r\n                      <!-- Afficher le BANGE pour chaque mercredi en vérifiant directement le jour -->\r\n                      <div v-if=\"new Date(currentYear, monthIndex, day).getDay() === 3\" class=\"w-[50px] h-6 p-1 text-[9px] text-white bg-cyan-400 rounded cursor-pointer hover:bg-green-600\">\r\n                        {{ getWeeklyBANGE(day, monthIndex).bange }}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr v-for=\"resource in filteredResources\" :key=\"resource.name\">\r\n              <td class=\"sticky left-0  p-1 bg-white border text-[9px]\">\r\n                {{ resource.name }}\r\n              </td>\r\n              <td v-for=\"(month, monthIndex) in getDaysInYear()\" :key=\"monthIndex\" class=\"p-1 border border-gray-300 text-[9px]\">\r\n                <div class=\"flex gap-1\">\r\n                  <div v-for=\"day in month.days\" :key=\"day\" class=\"p-1 text-[9px] text-center rounded-lg\" @click=\"openEventModal(day, resource.name, monthIndex)\">\r\n                    <!-- Ajout de la condition pour les jours fériés -->\r\n                    <div v-if=\"isJourFerie(day, monthIndex)\">\r\n                      <div class=\"w-[50px] h-6 p-1 text-[6px] text-white bg-red-400 rounded\">\r\n                        {{ getJourFerieName(day, monthIndex) }}\r\n                      </div>\r\n                    </div>\r\n                    <div v-else-if=\"isWeekend(day, monthIndex).isWeekend\">\r\n                      <div class=\"w-[50px] h-6 p-1 text-[9px] text-center bg-gray-300 rounded\">\r\n                        <template v-if=\"getEventsForMonth(resource.name, monthIndex, day).length\">\r\n                          <div v-for=\"event in getEventsForMonth(resource.name, monthIndex, day)\" :key=\"event.id\" class=\"relative text-center rounded cursor-pointer w-[50px] h-6 p-1 text-[9px]\" :class=\"getClientColor(event.color)\" @mouseover=\"showComment(event, day)\" @mouseleave=\"hideComment\">\r\n                            {{ event.clientAbbreviation }}\r\n                            <div v-if=\"hoveredEvent === event && hoveredDay === day\" class=\"absolute z-10 p-1 text-[9px] text-white whitespace-normal bg-gray-800 rounded shadow-lg\" style=\"\r\n                              width: 200px;\r\n                              bottom: 100%;\r\n                              left: 50%;\r\n                              transform: translateX(-50%);\r\n                            \">\r\n                              {{ event.name }}\r\n                            </div>\r\n                          </div>\r\n                        </template>\r\n                        <template v-else>weekend</template>\r\n                      </div>\r\n                    </div>\r\n                    <div v-else>\r\n                      <template v-if=\"getEventsForMonth(resource.name, monthIndex, day).length\">\r\n                        <div v-for=\"event in getEventsForMonth(resource.name, monthIndex, day)\" :key=\"event.id\" class=\"relative w-[50px] h-6 p-1 text-[9px] text-center rounded cursor-pointer\" :class=\"getClientColor(event.color)\" @mouseover=\"showComment(event, day)\" @mouseleave=\"hideComment\">\r\n                          {{ event.clientAbbreviation }}\r\n                          <div v-if=\"hoveredEvent === event && hoveredDay === day\" class=\"absolute z-10 w-[50px] h-6 p-1 text-[9px] text-white whitespace-normal bg-gray-800 rounded shadow-lg\" style=\"\r\n                            width: 200px;\r\n                            bottom: 100%;\r\n                            left: 50%;\r\n                            transform: translateX(-50%);\r\n                          \">\r\n                            {{ event.name }}\r\n                          </div>\r\n                        </div>\r\n                      </template>\r\n                      <template v-else>\r\n                        <div v-if=\"!isJourFerie(day, monthIndex)\" class=\"w-[50px] h-6 p-1 text-[9px] text-white bg-green-400 rounded cursor-pointer hover:bg-green-600\" :class=\"{\r\n                          'border-2 border-blue-600': isHighlightedTNF(resource.name, day, monthIndex),\r\n                        }\">\r\n                          TNF\r\n                        </div>\r\n                      </template>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <!-- Modal pour ajouter/modifier un événement -->\r\n    <div v-if=\"isEventModalOpen\" class=\"fixed inset-0 z-50 flex items-center justify-center p-6 bg-black bg-opacity-50 backdrop-blur-sm\" @click.self=\"closeEventModal\">\r\n      <div class=\"w-full max-w-2xl p-6 transition-transform duration-300 ease-in-out transform scale-75 bg-white rounded-lg shadow-lg\">\r\n        <h3 class=\"mb-4 text-lg font-semibold text-gray-800\">\r\n          Ressource : {{ selectedEvent.resourceName }}\r\n        </h3>\r\n        <div class=\"mt-4\">\r\n          <label for=\"client\" class=\"block text-sm font-medium text-gray-700\">Mission:</label>\r\n          <div>\r\n            <!-- Barre de recherche pour filtrer les clients -->\r\n            <input type=\"text\" v-model=\"clientSearch\" placeholder=\"Rechercher un client\" class=\"w-full p-2 mb-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\" />\r\n            <!-- Sélecteur de clients -->\r\n            <select id=\"client\" v-model=\"selectedClientId\" @change=\"updateSelectedClient\" class=\"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\">\r\n              <option value=\"\">Sélectionnez un client</option>\r\n              <option v-for=\"client in filteredClients\" :key=\"client.id\" :value=\"client.id\">\r\n                {{ client.nom }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"mt-4\">\r\n          <label for=\"comment\" class=\"block text-sm font-medium text-gray-700\">Commentaire:</label>\r\n          <textarea id=\"comment\" v-model=\"comment\" class=\"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\" placeholder=\"Entrez un commentaire\"></textarea>\r\n        </div>\r\n        <div class=\"flex justify-between mt-4\">\r\n          <div class=\"w-full pr-2\">\r\n            <label for=\"start-date\" class=\"block text-sm font-medium text-gray-700\">Date de début:</label>\r\n            <input id=\"start-date\" type=\"date\" v-model=\"startDate\" class=\"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\" />\r\n          </div>\r\n          <div class=\"w-full pl-2\">\r\n            <label for=\"end-date\" class=\"block text-sm font-medium text-gray-700\">Date de fin:</label>\r\n            <input id=\"end-date\" type=\"date\" v-model=\"endDate\" class=\"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"flex space-x-4\">\r\n          <button v-if=\"selectedEvent.id\" @click=\"updateEvent\" class=\"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-green-500 rounded-md hover:bg-green-600 focus:outline-none focus:ring focus:ring-green-300\">\r\n            Mettre à jour l'intervention\r\n          </button>\r\n          <button v-else @click=\"saveEvent\" class=\"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-blue-500 rounded-md hover:bg-blue-600 focus:outline-none focus:ring focus:ring-blue-300\">\r\n            Enregistrer l'intervention\r\n          </button>\r\n          <!-- Button to delete the event -->\r\n          <button v-if=\"selectedEvent.id\" @click=\"deleteEvent\" class=\"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-red-500 rounded-md hover:bg-red-600 focus:outline-none focus:ring focus:ring-red-300\">\r\n            Supprimer l'intervention\r\n          </button>\r\n          <button @click=\"closeEventModal\" class=\"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-gray-500 rounded-md hover:bg-gray-600 focus:outline-none focus:ring focus:ring-gray-300\">\r\n            Fermer\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { format } from \"date-fns\";\r\nimport axios from \"axios\";\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport ExcelJS from 'exceljs';\r\nimport { API_URL } from '@/config'; // Importer API_URL// Assurez-vous que le chemin est correct\r\n\r\nexport default {\r\n  props: ['userId'],\r\n  data() {\r\n    return {\r\n      colorMapping: {\r\n        1: { name: 'Mission confirmée', class: 'bg-orange-400' },\r\n        2: { name: 'Prévision de Mission', class: 'bg-yellow-400' },\r\n        3: { name: 'Voyage', class: 'bg-sky-400' },\r\n        4: { name: 'Congé', class: 'bg-blue-300' },\r\n        5: { name: 'Formation', class: 'bg-blue-500' },\r\n        6: { name: 'Récupération', class: 'bg-red-200' },\r\n        7: { name: 'Congé maladie', class: 'bg-purple-600' },\r\n        8: { name: 'Université', class: 'bg-sky-600' },\r\n        9: { name: 'Avant Vente', class: 'bg-teal-300' },\r\n        10: { name: 'Prévision de Congé', class: 'bg-orange-600' }, // Nouvelle couleur pour Prévision de Mission\r\n        11: { name: 'Prévision de Récupération', class: 'bg-indigo-400' }, // Nouvelle couleur pour Prévision de Récupération\r\n        12: { name: 'Prévision de Formation', class: 'bg-pink-400' }, // Nouvelle couleur pour Prévision de Formation\r\n        default: { name: 'Inconnu', class: 'bg-blue-400' }\r\n      },\r\n      isExportModalOpen: false,\r\n      currentYear: new Date().getFullYear(),\r\n      currentMonth: new Date().getMonth(),\r\n      monthsOfYear: [\r\n        \"Janvier\",\r\n        \"Février\",\r\n        \"Mars\",\r\n        \"Avril\",\r\n        \"Mai\",\r\n        \"Juin\",\r\n        \"Juillet\",\r\n        \"Août\",\r\n        \"Septembre\",\r\n        \"Octobre\",\r\n        \"Novembre\",\r\n        \"Décembre\",\r\n      ],\r\n      currentDay: new Date().getDate(),\r\n      viewMode: \"month\", //  month or year\r\n      resources: [],\r\n      events: [],\r\n      selectedClientId: \"\",\r\n      clientSearch: \"\", // Barre de recherche pour le filtre\r\n      clients: [], // Assurez-vous que `clients` contient les données de vos clients\r\n      joursFeries: [],\r\n      agences: [],\r\n      bangeResults: [],\r\n      isBANGEModalOpen: false,\r\n      bangeStartDate: \"\",\r\n      bangeEndDate: \"\",\r\n      searchStartDate: \"\",\r\n      searchEndDate: \"\",\r\n      tnfSearchResults: [],\r\n      isEventModalOpen: false,\r\n      selectedEvent: {},\r\n      hoveredEvent: null,\r\n      hoveredDay: null,\r\n      selectedClientColor: \"\",\r\n      comment: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      user_id: null,\r\n      selectedPays: \"\",\r\n      \r\n    };\r\n  },\r\n  computed: {\r\n consultantsByRole() {\r\n    if (!this.resources || this.resources.length === 0) {\r\n      return {};\r\n    }\r\n\r\n    const roles = {\r\n      0: 'Consultant technique',\r\n      1: 'Consultant fonctionnel',\r\n      2: 'Consultant Fullstack',\r\n      3: 'Chef de projet',\r\n      4: 'Manager'\r\n    };\r\n\r\n    const consultantsCount = this.resources.reduce((acc, resource) => {\r\n      const role = resource.type;\r\n      if (!acc[role]) {\r\n        acc[role] = { name: roles[role], count: 0 };\r\n      }\r\n      acc[role].count++;\r\n      return acc;\r\n    }, {});\r\n\r\n    return consultantsCount;\r\n  },\r\n  totalConsultants() {\r\n    return this.resources.length;\r\n  },\r\n  totalInterventionDays() {\r\n    let total = 0;\r\n    this.filteredEvents.forEach(event => {\r\n      const eventStart = new Date(event.startDate);\r\n      const eventEnd = new Date(event.endDate);\r\n      total += this.calculateInterventionDays(eventStart, eventEnd, this.viewMode);\r\n    });\r\n    return total;\r\n  },\r\n  totalTNF() {\r\n    let total = 0;\r\n    const startDate = this.viewMode === 'month' ? new Date(this.currentYear, this.currentMonth, 1) : new Date(this.currentYear, 0, 1);\r\n    const endDate = this.viewMode === 'month' ? new Date(this.currentYear, this.currentMonth + 1, 0) : new Date(this.currentYear, 11, 31);\r\n\r\n    this.resources.forEach(resource => {\r\n      total += this.getTNFDaysInPeriod(resource, startDate, endDate).length;\r\n    });\r\n\r\n    return total;\r\n  },\r\n    filteredEvents() {\r\n    let filtered = this.events;\r\n\r\n    // Filtrer par agence sélectionnée\r\n    if (this.selectedPays) {\r\n      filtered = filtered.filter(event => {\r\n        const resource = this.resources.find(r => r.name === event.resource);\r\n        return resource && resource.agence && resource.agence.pays === this.selectedPays;\r\n      });\r\n    }\r\n\r\n    return filtered;\r\n  },\r\n   \r\n\r\n \r\n    filteredClients() {\r\n      return this.clients.filter((client) =>\r\n        client.nom.toLowerCase().includes(this.clientSearch.toLowerCase())\r\n      );\r\n    },\r\n    displayPeriod() {\r\n      if (this.viewMode === \"month\") {\r\n        const firstDayOfMonth = new Date(this.currentYear, this.currentMonth, 1);\r\n        return format(firstDayOfMonth, \"MMMM yyyy\");\r\n      } else if (this.viewMode === \"year\") {\r\n        const firstDayOfYear = new Date(this.currentYear, 0, 1);\r\n        return format(firstDayOfYear, \"yyyy\");\r\n      } else {\r\n        return `${this.currentYear}`;\r\n      }\r\n    },\r\n    formattedJoursFeries() {\r\n      // Format the public holidays to only include the date in 'yyyy-MM-dd' format\r\n      return this.joursFeries.map((jourFerie) => ({\r\n        date: format(new Date(jourFerie.date_ferie), \"yyyy-MM-dd\"), // Keep the date format\r\n        name: jourFerie.nom_ferie,\r\n      }));\r\n    },\r\n    periodDays() {\r\n      return this.viewMode === \"month\" ? this.getDaysInMonth() : this.getDaysInYear();\r\n    },\r\n    filteredResources() {\r\n      let filtered = this.resources;\r\n\r\n      // Filter by client name\r\n      if (this.clientSearch) {\r\n        // Find resource IDs that have interventions matching the client name\r\n        const matchingResourceIds = new Set(\r\n          this.events\r\n            .filter((event) =>\r\n              event.clientName.toLowerCase().includes(this.clientSearch.toLowerCase())\r\n            )\r\n            .map((event) => event.resourceId)\r\n        );\r\n\r\n        // Filter resources based on matching IDs\r\n        filtered = this.resources.filter((resource) =>\r\n          matchingResourceIds.has(resource.id)\r\n        );\r\n      }\r\n\r\n      // Filter by date range\r\n      if (this.searchStartDate && this.searchEndDate) {\r\n        const startDate = new Date(this.searchStartDate);\r\n        const endDate = new Date(this.searchEndDate);\r\n        filtered = filtered.filter((resource) => {\r\n          const tnfDays = this.getTNFDaysInPeriod(resource, startDate, endDate);\r\n          return tnfDays.length > 0;\r\n        });\r\n      }\r\n\r\n      // Filter by selected agency\r\n      if (this.selectedPays) {\r\n        filtered = filtered.filter(\r\n          (resource) => resource.agence && resource.agence.pays === this.selectedPays\r\n        );\r\n      }\r\n\r\n      return filtered;\r\n    },\r\n    // Nouvelle propriété calculée pour récupérer les événements par jour et ressource\r\n    filteredEventsByDay() {\r\n      const filteredEvents = {};\r\n\r\n      this.filteredResources.forEach((resource) => {\r\n        filteredEvents[resource.name] = {};\r\n\r\n        const days =\r\n          this.viewMode === \"month\"\r\n            ? this.getDaysInMonth()\r\n            : this.getDaysInYear().flatMap((month) => month.days);\r\n\r\n        days.forEach((day) => {\r\n          const dayDate = new Date(\r\n            this.currentYear,\r\n            this.viewMode === \"month\" ? this.currentMonth : 0,\r\n            typeof day === \"number\" ? day : day.day\r\n          );\r\n\r\n          filteredEvents[resource.name][day] = this.events.filter(\r\n            (event) =>\r\n              event.resource === resource.name && this.isEventOnDay(event, dayDate)\r\n          );\r\n        });\r\n      });\r\n\r\n      return filteredEvents;\r\n    },\r\n    statisticsByColor() {\r\n      return this.calculateStatisticsByColor();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchUserData().then((user) => {\r\n      if (user && user.id) {\r\n        this.fetchResourcesAndEvents(user.id);\r\n      }\r\n    });\r\n    this.fetchClients();\r\n    this.fetchJoursFeries();\r\n  },\r\n  watch: {\r\n  searchStartDate() {\r\n    this.updateView();\r\n    this.updateStatistics();\r\n  },\r\n  searchEndDate() {\r\n    this.updateView();\r\n    this.updateStatistics();\r\n  },\r\n  clientSearch() {\r\n    this.updateView();\r\n    this.updateStatistics();\r\n  },\r\n  selectedPays() {\r\n    this.fetchJoursFeries();\r\n    this.fetchResourcesAndEvents(this.userId);\r\n    this.updateStatistics();\r\n  }\r\n},\r\n  methods: {\r\n    ...mapActions('myCalendar', [\r\n      'fetchUserData',\r\n      'fetchResourcesAndEvents',\r\n      'fetchClients',\r\n      'fetchJoursFeries',\r\n    ]),\r\n    ...mapMutations('myCalendar', [\r\n      'SET_SEARCH_START_DATE',\r\n      'SET_SEARCH_END_DATE',\r\n      'SET_CURRENT_YEAR',\r\n      'SET_CURRENT_MONTH',\r\n      'SET_CURRENT_DAY',\r\n    ]),\r\n    getDayAbbreviation(date) {\r\n      const days = ['dim', 'lun', 'mar', 'mer', 'jeu', 'ven', 'sam'];\r\n      return days[date.getDay()];\r\n    },\r\n    isWednesday(day, monthIndex) {\r\n      const date = new Date(this.currentYear, monthIndex, day);\r\n      return date.getDay() === 3;\r\n    },\r\n    getWeeklyBANGE(day, monthIndex = null) {\r\n      const weekStart = new Date(\r\n        this.currentYear,\r\n        monthIndex !== null ? monthIndex : this.currentMonth,\r\n        day\r\n      );\r\n      const weekEnd = new Date(weekStart);\r\n      weekEnd.setDate(weekStart.getDate() + 6);\r\n\r\n      let totalTNF = 0;\r\n      let workingDays = 0;\r\n\r\n      for (let d = new Date(weekStart); d <= weekEnd; d.setDate(d.getDate() + 1)) {\r\n        const dayOfWeek = d.getDay();\r\n        if (\r\n          dayOfWeek !== 0 &&\r\n          dayOfWeek !== 6 &&\r\n          !this.isJourFerie(d.getDate(), d.getMonth())\r\n        ) {\r\n          workingDays++;\r\n          this.resources.forEach((resource) => {\r\n            const events = this.getEventsForMonth(\r\n              resource.name,\r\n              d.getMonth(),\r\n              d.getDate()\r\n            );\r\n            if (!events || events.length === 0) {\r\n              totalTNF++;\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      const etp = workingDays > 0 ? Math.min(workingDays, 5) : 0;\r\n      const bange = etp > 0 ? (totalTNF / etp).toFixed(1) : 0;\r\n      return { bange };\r\n    },\r\n    getJourFerieName(day, monthIndex = null) {\r\n      const date = new Date(\r\n        this.currentYear,\r\n        monthIndex !== null ? monthIndex : this.currentMonth,\r\n        typeof day === 'number' ? day : new Date(day).getDate()\r\n      );\r\n      const formattedDate = format(date, 'yyyy-MM-dd');\r\n      const jourFerie = this.formattedJoursFeries.find(\r\n        (jour) => jour.date === formattedDate\r\n      );\r\n      return jourFerie ? jourFerie.name : 'Férié';\r\n    },\r\n    isJourFerie(day, monthIndex = null) {\r\n      const date = new Date(\r\n        this.currentYear,\r\n        monthIndex !== null ? monthIndex : this.currentMonth,\r\n        typeof day === 'number' ? day : new Date(day).getDate()\r\n      );\r\n      const formattedDate = format(date, 'yyyy-MM-dd');\r\n      return this.formattedJoursFeries.some((jour) => jour.date === formattedDate);\r\n    },\r\n    calculateBusinessDays(startDate, endDate) {\r\n      let count = 0;\r\n      const currentDate = new Date(startDate);\r\n\r\n      while (currentDate <= endDate) {\r\n        const dayOfWeek = currentDate.getDay();\r\n        if (dayOfWeek !== 0 && dayOfWeek !== 6) {\r\n          count++;\r\n        }\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n      }\r\n\r\n      return count;\r\n    },\r\n    showComment(event, day) {\r\n      this.hoveredEvent = event;\r\n      this.hoveredDay = day;\r\n    },\r\n    hideComment() {\r\n      this.hoveredEvent = null;\r\n      this.hoveredDay = null;\r\n    },\r\n    updateView() {\r\n      if (this.searchStartDate && this.searchEndDate) {\r\n        const startDate = new Date(this.searchStartDate);\r\n        this.SET_CURRENT_YEAR(startDate.getFullYear());\r\n        this.SET_CURRENT_MONTH(startDate.getMonth());\r\n      }\r\n    },\r\n    clearDateFilters() {\r\n      this.SET_SEARCH_START_DATE('');\r\n      this.SET_SEARCH_END_DATE('');\r\n      this.updateView();\r\n    },\r\n    getTNFDaysInPeriod(resource, startDate, endDate) {\r\n      const tnfDays = [];\r\n      const resourceEvents = this.events.filter(\r\n        (event) => event.resource === resource.name\r\n      );\r\n\r\n      for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\r\n        if (\r\n          this.isWeekend(d.getDate(), d.getMonth()).isWeekend ||\r\n          this.isJourFerie(d.getDate())\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        const eventsOnDay = resourceEvents.filter((event) => this.isEventOnDay(event, d));\r\n        if (eventsOnDay.length === 0) {\r\n          tnfDays.push(new Date(d));\r\n        }\r\n      }\r\n\r\n      return tnfDays;\r\n    },\r\n    isHighlightedTNF(resourceName, day, monthIndex) {\r\n      if (!this.searchStartDate || !this.searchEndDate) return false;\r\n\r\n      const resource = this.resources.find((r) => r.name === resourceName);\r\n      if (!resource) return false;\r\n\r\n      const date = new Date(\r\n        this.currentYear,\r\n        monthIndex !== undefined ? monthIndex : this.currentMonth,\r\n        day\r\n      );\r\n      const startDate = new Date(this.searchStartDate);\r\n      const endDate = new Date(this.searchEndDate);\r\n\r\n      if (date < startDate || date > endDate || this.isJourFerie(day)) return false;\r\n\r\n      const tnfDays = this.getTNFDaysInPeriod(resource, startDate, endDate);\r\n\r\n      return tnfDays.some(\r\n        (tnfDay) =>\r\n          tnfDay.getDate() === date.getDate() &&\r\n          tnfDay.getMonth() === date.getMonth() &&\r\n          tnfDay.getFullYear() === date.getFullYear()\r\n      );\r\n    },\r\n    updateSelectedClient() {\r\n      const selectedClient = this.clients.find(\r\n        (client) => client.id === this.selectedClientId\r\n      );\r\n      if (selectedClient) {\r\n        this.selectedClientColor = selectedClient.color;\r\n      }\r\n    },\r\n    selectClient(clientId) {\r\n      const client = this.clients.find((c) => c.id === clientId);\r\n      if (client) {\r\n        this.selectedClient = client.nom;\r\n        this.selectedClientId = client.id;\r\n        this.selectedClientColor = client.color;\r\n      } else {\r\n        this.selectedClient = null;\r\n        this.selectedClientId = null;\r\n        this.selectedClientColor = '';\r\n      }\r\n    },\r\n    openEventModal(day, resourceName, monthIndex = null) {\r\n      let selectedDate;\r\n\r\n      if (monthIndex !== null) {\r\n        selectedDate = new Date(this.currentYear, monthIndex, day);\r\n      } else {\r\n        selectedDate = new Date(this.currentYear, this.currentMonth, day);\r\n      }\r\n\r\n      if (!isNaN(selectedDate.getTime())) {\r\n        const headerDate = format(selectedDate, 'yyyy-MM-dd');\r\n        this.startDate = headerDate;\r\n\r\n        const resource = this.resources.find((r) => r.name === resourceName);\r\n\r\n        if (resource) {\r\n          this.selectedEvent = {\r\n            resourceName,\r\n            resourceId: resource.id,\r\n            day: this.startDate,\r\n          };\r\n          this.user_id = resource.id;\r\n\r\n          const events =\r\n            monthIndex !== null\r\n              ? this.getEventsForMonth(resourceName, monthIndex, day)\r\n              : this.filteredEventsByDay[resourceName] && this.filteredEventsByDay[resourceName][day] ? this.filteredEventsByDay[resourceName][day] : [];\r\n\r\n          const event = events && events[0];\r\n\r\n          if (event) {\r\n            const intervention = resource.interventions.find((i) => i.id === event.id);\r\n            console.log(intervention);\r\n            if (intervention) {\r\n              this.selectedClientId = intervention.client_id;\r\n              this.selectedClient = intervention.client_name;\r\n              this.comment = intervention.commentaire;\r\n              this.startDate = format(new Date(intervention.date_debut), 'yyyy-MM-dd');\r\n              this.endDate = format(new Date(intervention.date_fin), 'yyyy-MM-dd');\r\n              this.selectedClientColor = intervention.client_color;\r\n              this.selectedEvent.id = intervention.id;\r\n            }\r\n          } else {\r\n            this.selectedClient = null;\r\n            this.selectedClientId = null;\r\n            this.comment = '';\r\n            this.startDate = headerDate;\r\n            this.endDate = '';\r\n            this.selectedClientColor = '';\r\n            this.selectedEvent.id = null;\r\n          }\r\n\r\n          this.isEventModalOpen = true;\r\n        }\r\n      }\r\n    },\r\n    async deleteEvent() {\r\n      const API_URL = 'http://127.0.0.1:8000/api';\r\n      try {\r\n        await axios.delete(`${API_URL}/interventions/${this.selectedEvent.id}`, {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n\r\n        await this.fetchResourcesAndEvents();\r\n        this.closeEventModal();\r\n      } catch (error) {\r\n        console.error('Erreur lors de la suppression de l\\'événement:', error);\r\n        if (error.response) {\r\n          console.error('Détails de l\\'erreur:', error.response.data);\r\n        }\r\n      }\r\n    },\r\n    closeEventModal() {\r\n      this.isEventModalOpen = false;\r\n      this.selectedEvent = {};\r\n      this.selectedClient = null;\r\n      this.comment = '';\r\n      this.startDate = '';\r\n      this.endDate = '';\r\n      this.selectedClientColor = '';\r\n    },\r\n    resetToToday() {\r\n      const today = new Date();\r\n      this.SET_CURRENT_YEAR(today.getFullYear());\r\n      this.SET_CURRENT_MONTH(today.getMonth());\r\n      this.SET_CURRENT_DAY(today.getDate());\r\n    },\r\n    prevPeriod() {\r\n      if (this.viewMode === 'month') {\r\n        this.SET_CURRENT_MONTH(this.currentMonth - 1);\r\n        if (this.currentMonth < 0) {\r\n          this.SET_CURRENT_MONTH(11);\r\n          this.SET_CURRENT_YEAR(this.currentYear - 1);\r\n        }\r\n      } else {\r\n        this.SET_CURRENT_YEAR(this.currentYear - 1);\r\n      }\r\n      this.fetchJoursFeries();\r\n    },\r\n    nextPeriod() {\r\n      if (this.viewMode === 'month') {\r\n        this.SET_CURRENT_MONTH(this.currentMonth + 1);\r\n        if (this.currentMonth > 11) {\r\n          this.SET_CURRENT_MONTH(0);\r\n          this.SET_CURRENT_YEAR(this.currentYear + 1);\r\n        }\r\n      } else {\r\n        this.SET_CURRENT_YEAR(this.currentYear + 1);\r\n      }\r\n      this.fetchJoursFeries();\r\n    },\r\n    getDayLabel(index, day) {\r\n      const dayDate = new Date(this.currentYear, this.currentMonth, day);\r\n      return format(dayDate, 'EEE dd');\r\n    },\r\n    getDaysInMonth(monthIndex = null) {\r\n      const month = monthIndex !== null ? monthIndex : this.currentMonth;\r\n      const daysInMonth = new Date(this.currentYear, month + 1, 0).getDate();\r\n      return Array.from({ length: daysInMonth }, (_, i) => i + 1);\r\n    },\r\n    getDaysInYear() {\r\n      const months = [];\r\n      for (let month = 0; month < 12; month++) {\r\n        const daysInMonth = new Date(this.currentYear, month + 1, 0).getDate();\r\n        const days = Array.from({ length: daysInMonth }, (_, i) => i + 1);\r\n        months.push({\r\n          month: format(new Date(this.currentYear, month), 'MMMM'),\r\n          days,\r\n        });\r\n      }\r\n      return months;\r\n    },\r\n    isWeekend(day, month = this.currentMonth) {\r\n      const date = new Date(this.currentYear, month, day);\r\n      const dayOfWeek = date.getDay();\r\n      return { isWeekend: dayOfWeek === 0 || dayOfWeek === 6, dayOfWeek };\r\n    },\r\n    isEventOnDay(event, day) {\r\n      const eventStart = new Date(event.startDate);\r\n      const eventEnd = new Date(event.endDate);\r\n      const dayOfWeek = day.getDay();\r\n      const isWeekend = dayOfWeek === 0 || dayOfWeek === 6;\r\n\r\n      const dayDate = new Date(day.getFullYear(), day.getMonth(), day.getDate());\r\n      const eventStartDate = new Date(\r\n        eventStart.getFullYear(),\r\n        eventStart.getMonth(),\r\n        eventStart.getDate()\r\n      );\r\n      const eventEndDate = new Date(\r\n        eventEnd.getFullYear(),\r\n        eventEnd.getMonth(),\r\n        eventEnd.getDate()\r\n      );\r\n\r\n      if (isWeekend) {\r\n        return (\r\n          (eventStart.getDay() === 0 || eventStart.getDay() === 6) &&\r\n          dayDate >= eventStartDate &&\r\n          dayDate <= eventEndDate\r\n        );\r\n      } else {\r\n        return (\r\n          eventStart.getDay() !== 0 &&\r\n          eventStart.getDay() !== 6 &&\r\n          dayDate >= eventStartDate &&\r\n          dayDate <= eventEndDate\r\n        );\r\n      }\r\n    },\r\n    getEventsForMonth(resourceName, monthIndex, day) {\r\n      const date = new Date(this.currentYear, monthIndex, day);\r\n      return this.events.filter(\r\n        (event) => event.resource === resourceName && this.isEventOnDay(event, date)\r\n      );\r\n    },\r\n    getClientColor(color) {\r\n      if (!color || typeof color !== \"number\") {\r\n        return this.colorMapping.default.class; // Couleur par défaut si la couleur n'est pas définie ou invalide\r\n      }\r\n      return this.colorMapping[color] ? this.colorMapping[color].class : this.colorMapping.default.class;\r\n    },\r\n    getColorName(color) {\r\n      if (!color || typeof color !== \"number\") {\r\n        return this.colorMapping.default.name; // Nom par défaut si la couleur n'est pas définie ou invalide\r\n      }\r\n      return this.colorMapping[color] ? this.colorMapping[color].name : this.colorMapping.default.name;\r\n    },\r\ncalculateStatisticsByColor() {\r\n  const statistics = {};\r\n  let startDate, endDate;\r\n\r\n  if (this.viewMode === 'month') {\r\n    startDate = new Date(this.currentYear, this.currentMonth, 1);\r\n    endDate = new Date(this.currentYear, this.currentMonth + 1, 0);\r\n  } else if (this.viewMode === 'year') {\r\n    startDate = new Date(this.currentYear, 0, 1);\r\n    endDate = new Date(this.currentYear, 11, 31);\r\n  }\r\n\r\n  // Parcourez chaque jour de la période sélectionnée\r\n  for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\r\n    const dayOfWeek = d.getDay();\r\n    if (dayOfWeek !== 0 && dayOfWeek !== 6 && !this.isJourFerie(d.getDate(), d.getMonth())) {\r\n      this.events.forEach(event => {\r\n        const eventStartDate = new Date(event.startDate);\r\n        const eventEndDate = new Date(event.endDate);\r\n\r\n        // Vérifiez si l'événement est actif ce jour-là\r\n        if ((d >= eventStartDate && d <= eventEndDate) || (d.getDate() === eventStartDate.getDate() && d.getMonth() === eventStartDate.getMonth() && d.getFullYear() === eventStartDate.getFullYear())) {\r\n          const clientColor = event.color;\r\n          const clientName = this.getColorName(clientColor);\r\n          const clientClass = this.getClientColor(clientColor); // Obtenez la classe CSS de la couleur\r\n\r\n          if (!statistics[clientColor]) {\r\n            statistics[clientColor] = { name: clientName, count: 0, color: clientColor, class: clientClass };\r\n          }\r\n          statistics[clientColor].count++;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return statistics;\r\n},\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Ajoutez vos styles ici */\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}