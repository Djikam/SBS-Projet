{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { format } from \"date-fns\";\nimport axios from \"axios\";\nimport { API_URL } from '@/config'; // Assurez-vous que le chemin est correct\n\nexport default {\n  props: [\"userId\"],\n  data() {\n    return {\n      currentYear: new Date().getFullYear(),\n      currentMonth: new Date().getMonth(),\n      monthsOfYear: [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\", \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Décembre\"],\n      currentDay: new Date().getDate(),\n      viewMode: \"month\",\n      resources: [],\n      events: [],\n      clients: [],\n      isEventModalOpen: false,\n      selectedEvent: {},\n      selectedClient: null,\n      selectedClientId: null,\n      comment: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      user_id: null,\n      joursFeries: [],\n      bangeResults: [],\n      isBANGEModalOpen: false,\n      searchStartDate: \"\",\n      searchEndDate: \"\",\n      tnfSearchResults: [],\n      clientSearch: '',\n      hoveredEvent: null,\n      hoveredDay: null,\n      bangeStartDate: \"\",\n      bangeEndDate: \"\",\n      selectedClientColor: \"\"\n    };\n  },\n  computed: {\n    filteredClients() {\n      return this.clients.filter(client => client.nom.toLowerCase().includes(this.clientSearch.toLowerCase()));\n    },\n    displayPeriod() {\n      if (this.viewMode === \"month\") {\n        const firstDayOfMonth = new Date(this.currentYear, this.currentMonth, 1);\n        return format(firstDayOfMonth, \"MMMM yyyy\");\n      } else if (this.viewMode === \"year\") {\n        const firstDayOfYear = new Date(this.currentYear, 0, 1);\n        return format(firstDayOfYear, \"yyyy\");\n      } else {\n        return `${this.currentYear}`;\n      }\n    },\n    formattedJoursFeries() {\n      // Format the public holidays to only include the date in 'yyyy-MM-dd' format\n      return this.joursFeries.map(jourFerie => ({\n        date: format(new Date(jourFerie.date_ferie), \"yyyy-MM-dd\"),\n        // Keep the date format\n        name: jourFerie.nom_ferie\n      }));\n    },\n    periodDays() {\n      return this.viewMode === \"month\" ? this.getDaysInMonth() : this.getDaysInYear();\n    },\n    filteredResources() {\n      if (!this.searchStartDate || !this.searchEndDate) {\n        return this.resources;\n      }\n      const startDate = new Date(this.searchStartDate);\n      const endDate = new Date(this.searchEndDate);\n      return this.resources.filter(resource => {\n        const tnfDays = this.getTNFDaysInPeriod(resource, startDate, endDate);\n        return tnfDays.length > 0;\n      });\n    },\n    // Nouvelle propriété calculée pour récupérer les événements par jour et ressource\n    filteredEventsByDay() {\n      const filteredEvents = {};\n      this.resources.forEach(resource => {\n        filteredEvents[resource.name] = {};\n        this.periodDays.forEach(day => {\n          const dayDate = new Date(this.currentYear, this.currentMonth, day);\n          filteredEvents[resource.name][day] = this.events.filter(event => event.resource === resource.name && this.isEventOnDay(event, dayDate));\n        });\n      });\n      return filteredEvents;\n    }\n  },\n  watch: {\n    searchStartDate() {\n      this.updateView();\n    },\n    searchEndDate() {\n      this.updateView();\n    }\n  },\n  mounted() {\n    this.fetchResourcesAndEvents(this.userId);\n    this.fetchClients();\n    this.fetchJoursFeries();\n  },\n  methods: {\n    getDayAbbreviation(date) {\n      const days = [\"dim\", \"lun\", \"mar\", \"mer\", \"jeu\", \"ven\", \"sam\"];\n      return days[date.getDay()];\n    },\n    isWednesday(day, monthIndex) {\n      const date = new Date(this.currentYear, monthIndex, day);\n      return date.getDay() === 3; // 3 représente mercredi (0 = dimanche, 1 = lundi, etc.)\n    },\n    // Modifiez la méthode getWeeklyBANGE pour prendre en compte le monthIndex\n    getWeeklyBANGE(day, monthIndex = null) {\n      // Define start and end of the week based on `day`\n      const weekStart = new Date(this.currentYear, monthIndex !== null ? monthIndex : this.currentMonth, day);\n      const weekEnd = new Date(weekStart);\n      weekEnd.setDate(weekStart.getDate() + 6);\n      let totalTNF = 0;\n      let workingDays = 0;\n      for (let d = new Date(weekStart); d <= weekEnd; d.setDate(d.getDate() + 1)) {\n        const dayOfWeek = d.getDay();\n        if (dayOfWeek !== 0 && dayOfWeek !== 6 && !this.isJourFerie(d.getDate(), d.getMonth())) {\n          workingDays++;\n          this.resources.forEach(resource => {\n            const events = this.getEventsForMonth(resource.name, d.getMonth(), d.getDate());\n            if (!events || events.length === 0) {\n              totalTNF++;\n            }\n          });\n        }\n      }\n      const etp = workingDays > 0 ? Math.min(workingDays, 5) : 0;\n      const bange = etp > 0 ? (totalTNF / etp).toFixed(1) : 0;\n      return {\n        bange\n      };\n    },\n    getJourFerieName(day, monthIndex = null) {\n      const date = new Date(this.currentYear, monthIndex !== null ? monthIndex : this.currentMonth, typeof day === \"number\" ? day : new Date(day).getDate());\n      const formattedDate = format(date, \"yyyy-MM-dd\");\n      const jourFerie = this.formattedJoursFeries.find(jour => jour.date === formattedDate);\n      return jourFerie ? jourFerie.name : \"Férié\";\n    },\n    isJourFerie(day, monthIndex = null) {\n      const date = new Date(this.currentYear, monthIndex !== null ? monthIndex : this.currentMonth, typeof day === \"number\" ? day : new Date(day).getDate());\n      const formattedDate = format(date, \"yyyy-MM-dd\");\n      return this.formattedJoursFeries.some(jour => jour.date === formattedDate);\n    },\n    calculateBusinessDays(startDate, endDate) {\n      let count = 0;\n      const currentDate = new Date(startDate);\n      while (currentDate <= endDate) {\n        const dayOfWeek = currentDate.getDay();\n        if (dayOfWeek !== 0 && dayOfWeek !== 6) {\n          count++;\n        }\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n      return count;\n    },\n    showComment(event, day) {\n      this.hoveredEvent = event;\n      this.hoveredDay = day;\n    },\n    hideComment() {\n      this.hoveredEvent = null;\n      this.hoveredDay = null;\n    },\n    // Remplacer la méthode searchTNF par updateView\n    updateView() {\n      if (this.searchStartDate && this.searchEndDate) {\n        const startDate = new Date(this.searchStartDate);\n        this.currentYear = startDate.getFullYear();\n        this.currentMonth = startDate.getMonth();\n      }\n    },\n    clearDateFilters() {\n      this.searchStartDate = \"\";\n      this.searchEndDate = \"\";\n      this.updateView();\n    },\n    getTNFDaysInPeriod(resource, startDate, endDate) {\n      const tnfDays = [];\n      const resourceEvents = this.events.filter(event => event.resource === resource.name);\n      for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\n        // Ignorer les week-ends et les jours fériés\n        if (this.isWeekend(d.getDate(), d.getMonth()).isWeekend || this.isJourFerie(d.getDate())) {\n          continue;\n        }\n        const eventsOnDay = resourceEvents.filter(event => this.isEventOnDay(event, d));\n        if (eventsOnDay.length === 0) {\n          tnfDays.push(new Date(d));\n        }\n      }\n      return tnfDays;\n    },\n    isHighlightedTNF(resourceName, day, monthIndex) {\n      if (!this.searchStartDate || !this.searchEndDate) return false;\n      const resource = this.resources.find(r => r.name === resourceName);\n      if (!resource) return false;\n      const date = new Date(this.currentYear, monthIndex !== undefined ? monthIndex : this.currentMonth, day);\n      const startDate = new Date(this.searchStartDate);\n      const endDate = new Date(this.searchEndDate);\n\n      // Exclure le jour s'il est en dehors de la plage ou s'il est un jour férié\n      if (date < startDate || date > endDate || this.isJourFerie(day)) return false;\n      const tnfDays = this.getTNFDaysInPeriod(resource, startDate, endDate);\n      return tnfDays.some(tnfDay => tnfDay.getDate() === date.getDate() && tnfDay.getMonth() === date.getMonth() && tnfDay.getFullYear() === date.getFullYear());\n    },\n    async fetchJoursFeries() {\n      try {\n        const response = await axios.get(`${API_URL}/jours-feries`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        this.joursFeries = response.data; // Stocke les jours fériés\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des jours fériés:\", error);\n      }\n    },\n    updateSelectedClient() {\n      const selectedClient = this.clients.find(client => client.id === this.selectedClientId);\n      if (selectedClient) {\n        this.selectedClientColor = selectedClient.color;\n      }\n    },\n    async fetchClients() {\n      try {\n        const response = await axios.get(`${API_URL}/clients`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        this.clients = response.data;\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des clients:\", error);\n      }\n    },\n    async saveEvent() {\n      try {\n        await axios.post(`${API_URL}/interventions`, {\n          user_id: this.user_id,\n          client_id: this.selectedClientId,\n          // Assurez-vous d'utiliser l'ID du client ici\n          commentaire: this.comment,\n          date_debut: this.startDate,\n          date_fin: this.endDate,\n          color: this.selectedClientColor\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        await this.fetchResourcesAndEvents();\n        this.closeEventModal();\n      } catch (error) {\n        console.error(\"Erreur lors de la sauvegarde de l'événement:\", error);\n        if (error.response) {\n          console.error(\"Détails de l'erreur:\", error.response.data);\n          // Affichez un message d'erreur utilisateur ici si nécessaire\n        }\n      }\n    },\n    async updateEvent() {\n      try {\n        await axios.post(\n        // Utilisez PUT pour les mises à jour\n        `${API_URL}/interventions/${this.selectedEvent.id}`, {\n          user_id: this.user_id,\n          client_id: this.selectedClientId,\n          // Assurez-vous d'utiliser l'ID du client ici\n          commentaire: this.comment,\n          date_debut: this.startDate,\n          date_fin: this.endDate,\n          color: this.selectedClientColor\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        await this.fetchResourcesAndEvents();\n        this.closeEventModal();\n      } catch (error) {\n        console.error(\"Erreur lors de la mise à jour de l'événement:\", error);\n        if (error.response) {\n          console.error(\"Détails de l'erreur:\", error.response.data);\n          // Affichez un message d'erreur utilisateur ici si nécessaire\n        }\n      }\n    },\n    selectClient(clientId) {\n      const client = this.clients.find(c => c.id === clientId);\n      if (client) {\n        this.selectedClient = client.nom;\n        this.selectedClientId = client.id;\n        this.selectedClientColor = client.color; // Assurez-vous que cette ligne est présente\n      } else {\n        this.selectedClient = null;\n        this.selectedClientId = null;\n        this.selectedClientColor = \"\";\n      }\n    },\n    openEventModal(day, resourceName, monthIndex = null) {\n      let selectedDate;\n      if (monthIndex !== null) {\n        selectedDate = new Date(this.currentYear, monthIndex, day);\n      } else {\n        selectedDate = new Date(this.currentYear, this.currentMonth, day);\n      }\n      if (!isNaN(selectedDate.getTime())) {\n        const headerDate = format(selectedDate, \"yyyy-MM-dd\");\n        this.startDate = headerDate;\n        const resource = this.resources.find(r => r.name === resourceName);\n        if (resource) {\n          this.selectedEvent = {\n            resourceName,\n            resourceId: resource.id,\n            day: this.startDate\n          };\n          this.user_id = resource.id;\n          const events = monthIndex !== null ? this.getEventsForMonth(resourceName, monthIndex, day) : this.filteredEventsByDay[resourceName][day];\n          const event = events && events[0];\n          if (event) {\n            const intervention = resource.interventions.find(i => i.id === event.id);\n            console.log(intervention); // Ajoutez ceci pour vérifier ce que contient intervention\n            if (intervention) {\n              this.selectedClientId = intervention.client_id; // L'ID du client\n              this.selectedClient = intervention.client_name; // Le nom du client\n              this.comment = intervention.commentaire;\n              this.startDate = format(new Date(intervention.date_debut), \"yyyy-MM-dd\");\n              this.endDate = format(new Date(intervention.date_fin), \"yyyy-MM-dd\");\n              this.selectedClientColor = intervention.client_color, this.selectedEvent.id = intervention.id; // Marquer comme événement existant\n            }\n          } else {\n            // Réinitialiser pour un nouvel événement\n            this.selectedClient = null;\n            this.selectedClientId = null;\n            this.comment = \"\";\n            this.startDate = headerDate;\n            this.endDate = \"\";\n            this.selectedClientColor = \"\"; // Valeur par défaut\n            this.selectedEvent.id = null; // Marquer comme nouvel événement\n          }\n          this.isEventModalOpen = true; // Ouvrir le modal\n        }\n      }\n    },\n    async deleteEvent() {\n      try {\n        await axios.delete(`${API_URL}/interventions/${this.selectedEvent.id}`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        await this.fetchResourcesAndEvents();\n        this.closeEventModal();\n      } catch (error) {\n        console.error(\"Erreur lors de la suppression de l'événement:\", error);\n        if (error.response) {\n          console.error(\"Détails de l'erreur:\", error.response.data);\n        }\n      }\n    },\n    closeEventModal() {\n      this.isEventModalOpen = false;\n      this.selectedEvent = {};\n      this.selectedClient = null;\n      this.comment = \"\";\n      this.startDate = \"\";\n      this.endDate = \"\";\n      this.selectedClientColor = \"\";\n    },\n    resetToToday() {\n      const today = new Date();\n      this.currentYear = today.getFullYear();\n      this.currentMonth = today.getMonth();\n      this.currentDay = today.getDate();\n    },\n    prevPeriod() {\n      if (this.viewMode === \"month\") {\n        this.currentMonth--;\n        if (this.currentMonth < 0) {\n          this.currentMonth = 11;\n          this.currentYear--;\n        }\n      } else {\n        this.currentYear--;\n      }\n      this.fetchJoursFeries(); // Ajoutez cette ligne\n    },\n    nextPeriod() {\n      if (this.viewMode === \"month\") {\n        this.currentMonth++;\n        if (this.currentMonth > 11) {\n          this.currentMonth = 0;\n          this.currentYear++;\n        }\n      } else {\n        this.currentYear++;\n      }\n      this.fetchJoursFeries(); // Ajoutez cette ligne\n    },\n    getDayLabel(index, day) {\n      const dayDate = new Date(this.currentYear, this.currentMonth, day);\n      return format(dayDate, \"EEE dd\");\n    },\n    getDaysInMonth(monthIndex = null) {\n      const month = monthIndex !== null ? monthIndex : this.currentMonth;\n      const daysInMonth = new Date(this.currentYear, month + 1, 0).getDate();\n      return Array.from({\n        length: daysInMonth\n      }, (_, i) => i + 1);\n    },\n    getDaysInYear() {\n      const months = [];\n      for (let month = 0; month < 12; month++) {\n        const daysInMonth = new Date(this.currentYear, month + 1, 0).getDate();\n        const days = Array.from({\n          length: daysInMonth\n        }, (_, i) => i + 1);\n        months.push({\n          month: format(new Date(this.currentYear, month), \"MMMM\"),\n          days\n        });\n      }\n      return months;\n    },\n    isWeekend(day, month = this.currentMonth) {\n      const date = new Date(this.currentYear, month, day);\n      const dayOfWeek = date.getDay();\n      return {\n        isWeekend: dayOfWeek === 0 || dayOfWeek === 6,\n        dayOfWeek\n      };\n    },\n    isEventOnDay(event, day) {\n      const eventStart = new Date(event.startDate);\n      const eventEnd = new Date(event.endDate);\n      const dayOfWeek = day.getDay();\n      const isWeekend = dayOfWeek === 0 || dayOfWeek === 6;\n      const dayDate = new Date(day.getFullYear(), day.getMonth(), day.getDate());\n      const eventStartDate = new Date(eventStart.getFullYear(), eventStart.getMonth(), eventStart.getDate());\n      const eventEndDate = new Date(eventEnd.getFullYear(), eventEnd.getMonth(), eventEnd.getDate());\n      if (isWeekend) {\n        // Pour les week-ends, afficher uniquement les événements qui commencent un week-end\n        return (eventStart.getDay() === 0 || eventStart.getDay() === 6) && dayDate >= eventStartDate && dayDate <= eventEndDate;\n      } else {\n        // Pour les jours de semaine, afficher uniquement les événements qui commencent un jour de semaine\n        return eventStart.getDay() !== 0 && eventStart.getDay() !== 6 && dayDate >= eventStartDate && dayDate <= eventEndDate;\n      }\n    },\n    getEventsForMonth(resourceName, monthIndex, day) {\n      const date = new Date(this.currentYear, monthIndex, day);\n      return this.events.filter(event => event.resource === resourceName && this.isEventOnDay(event, date));\n    },\n    async fetchResourcesAndEvents(userId) {\n      try {\n        const response = await axios.get(`${API_URL}/user/${userId}/interventions`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        const data = response.data;\n        console.log(data); // Vérifiez ce qui est renvoyé par l'API\n\n        // Directement accéder à `data` car c'est un objet et non un tableau\n        this.resources = [{\n          id: data.id,\n          name: data.name,\n          interventions: data.interventions\n        }];\n\n        // Extraire les événements à partir de `data.interventions`\n        this.events = data.interventions.map(intervention => ({\n          id: intervention.id,\n          name: intervention.commentaire,\n          startDate: intervention.date_debut,\n          endDate: intervention.date_fin,\n          color: intervention.client_color,\n          resource: data.name,\n          // Utilisez `data.name` car il s'agit d'un utilisateur unique\n          resourceId: data.id,\n          clientAbbreviation: intervention.client_abbreviation\n        }));\n        console.log(this.events); // Vérifiez ce qui est assigné à events\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des données:\", error.response ? error.response.data : error.message);\n      }\n    },\n    getClientColor(color) {\n      if (!color || typeof color !== \"number\") {\n        return \"bg-blue-400\"; // Couleur par défaut si la couleur n'est pas définie ou invalide\n      }\n      switch (color) {\n        case 1:\n          return \"bg-orange-400\";\n        // Client (Orange)\n        case 2:\n          return \"bg-yellow-400\";\n        // Prévision (Jaune)\n        case 3:\n          return \"bg-sky-400\";\n        // Voyage (Bleu clair)\n        case 4:\n          return \"bg-blue-300\";\n        // Férié/Congé (Bleu ciel)\n        case 5:\n          return \"bg-blue-500\";\n        // Formation (Bleu)\n        case 6:\n          return \"bg-red-400\";\n        // Récupération (Rouge)\n        case 7:\n          return \"bg-purple-600\";\n        // Congé maladie (Violet)\n        case 8:\n          return \"bg-sky-600\";\n        // Université (Sky)\n        default:\n          return \"bg-blue-400\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["format","axios","API_URL","props","data","currentYear","Date","getFullYear","currentMonth","getMonth","monthsOfYear","currentDay","getDate","viewMode","resources","events","clients","isEventModalOpen","selectedEvent","selectedClient","selectedClientId","comment","startDate","endDate","user_id","joursFeries","bangeResults","isBANGEModalOpen","searchStartDate","searchEndDate","tnfSearchResults","clientSearch","hoveredEvent","hoveredDay","bangeStartDate","bangeEndDate","selectedClientColor","computed","filteredClients","filter","client","nom","toLowerCase","includes","displayPeriod","firstDayOfMonth","firstDayOfYear","formattedJoursFeries","map","jourFerie","date","date_ferie","name","nom_ferie","periodDays","getDaysInMonth","getDaysInYear","filteredResources","resource","tnfDays","getTNFDaysInPeriod","length","filteredEventsByDay","filteredEvents","forEach","day","dayDate","event","isEventOnDay","watch","updateView","mounted","fetchResourcesAndEvents","userId","fetchClients","fetchJoursFeries","methods","getDayAbbreviation","days","getDay","isWednesday","monthIndex","getWeeklyBANGE","weekStart","weekEnd","setDate","totalTNF","workingDays","d","dayOfWeek","isJourFerie","getEventsForMonth","etp","Math","min","bange","toFixed","getJourFerieName","formattedDate","find","jour","some","calculateBusinessDays","count","currentDate","showComment","hideComment","clearDateFilters","resourceEvents","isWeekend","eventsOnDay","push","isHighlightedTNF","resourceName","r","undefined","tnfDay","response","get","headers","Authorization","localStorage","getItem","error","console","updateSelectedClient","id","color","saveEvent","post","client_id","commentaire","date_debut","date_fin","closeEventModal","updateEvent","selectClient","clientId","c","openEventModal","selectedDate","isNaN","getTime","headerDate","resourceId","intervention","interventions","i","log","client_name","client_color","deleteEvent","delete","resetToToday","today","prevPeriod","nextPeriod","getDayLabel","index","month","daysInMonth","Array","from","_","months","eventStart","eventEnd","eventStartDate","eventEndDate","clientAbbreviation","client_abbreviation","message","getClientColor"],"sources":["C:\\Users\\gongue\\Desktop\\frontsbs\\src\\components\\intervenants\\UserCalendar.vue"],"sourcesContent":["\r\n    <template>\r\n      <div class=\"container p-4 mx-auto\">\r\n        <div class=\"flex items-end justify-end p-2\">\r\n          <router-link\r\n            to=\"/ListPS\"\r\n            class=\"px-4 py-2 text-white bg-gray-500 rounded shadow-lg\"\r\n          >\r\n            Retour\r\n          </router-link>\r\n        </div>\r\n        <!-- Conteneur principal pour le calcul du bench et la recherche -->\r\n        <div class=\"flex items-center justify-between mb-2\">\r\n          <!-- Formulaire pour le calcul du BANGE -->\r\n          <div class=\"mb-1\">\r\n            <h3 class=\"mb-0   font-medium text-gray-800 text-[9px] uppercase\">\r\n              Calcul du Bench par période\r\n            </h3>\r\n            <div class=\"flex items-center p-2 space-x-6 rounded-lg shadow-md bg-gray-50\">\r\n              <div class=\"flex items-center space-x-2\">\r\n                <label for=\"bange-start-date\" class=\"text-sm font-medium text-gray-700 text-[9px]\">Date de début:</label>\r\n                <input id=\"bange-start-date\" v-model=\"bangeStartDate\" type=\"date\" class=\"p-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\" />\r\n              </div>\r\n              <div class=\"flex items-center space-x-2\">\r\n                <label for=\"bange-end-date\" class=\"text-sm font-medium text-gray-700 text-[9px]\">Date de fin:</label>\r\n                <input id=\"bange-end-date\" v-model=\"bangeEndDate\" type=\"date\" class=\"p-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\" />\r\n              </div>\r\n              <button @click=\"calculateAndDisplayBANGE\" class=\"p-2 text-[9px] text-white bg-blue-500 rounded shadow-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\">\r\n                Calculer le Bench\r\n              </button>\r\n            </div>\r\n          </div>\r\n    \r\n          <!-- Modal pour afficher les résultats du BANGE -->\r\n          <div v-if=\"isBANGEModalOpen\" class=\"fixed inset-0 z-[70] flex items-center justify-center bg-black bg-opacity-50\">\r\n            <div class=\"w-full max-w-md p-6 bg-white rounded-lg\">\r\n              <h2 class=\"mb-4 text-xl font-bold\">Résultats du Bench</h2>\r\n              <div class=\"overflow-y-auto max-h-60\">\r\n                <table class=\"w-full\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th class=\"px-4 py-2 font-semibold text-left bg-gray-100\">Période</th>\r\n                      <th class=\"px-4 py-2 font-semibold text-right bg-gray-100\">Etp</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr v-for=\"result in bangeResults\" :key=\"result.date\" class=\"border-b\">\r\n                      <td class=\"px-4 py-2\">{{ result.date }}</td>\r\n                      <td class=\"px-4 py-2 text-right\">{{ result.bange }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <button @click=\"closeBANGEModal\" class=\"px-4 py-2 mt-4 text-white bg-blue-500 rounded hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\">\r\n                Fermer\r\n              </button>\r\n            </div>\r\n          </div>\r\n    \r\n          <!-- Formulaire de recherche -->\r\n          <div class=\"mb-1\">\r\n            <h3 class=\"mb-0  font-medium text-gray-800 text-[9px] uppercase\">Recherche des Consultants en TNF </h3>\r\n            <div class=\"flex items-center p-1 space-x-6 rounded-lg shadow-md bg-gray-50\">\r\n              <div class=\"flex items-center space-x-2\">\r\n                <label for=\"start-search\" class=\"text-sm font-medium text-gray-700 text-[9px]\">Date de début:</label>\r\n                <input id=\"start-search\" v-model=\"searchStartDate\" type=\"date\" class=\"p-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[9px]\" />\r\n              </div>\r\n              <div class=\"flex items-center space-x-2\">\r\n                <label for=\"end-search\" class=\"text-sm font-medium text-gray-700 text-[9px]\">Date de fin:</label>\r\n                <input id=\"end-search\" v-model=\"searchEndDate\" type=\"date\" class=\"p-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[9px]\" />\r\n              </div>\r\n              <button @click=\"clearDateFilters\" class=\"p-2 text-[9px] text-white bg-red-500 rounded shadow-lg hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50\">\r\n                Effacer les filtres\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex justify-center p-2 space-x-4\">\r\n          <!-- Modal pour sélectionner la période et le format d'exportation -->\r\n          <div v-if=\"isExportModalOpen\" class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-[70]\">\r\n            <div class=\"w-full max-w-md p-6 bg-white rounded-lg shadow-lg\">\r\n              <h2 class=\"mb-4 text-xl font-bold\">Exporter les données</h2>\r\n              <div class=\"mb-4\">\r\n                <label for=\"start-date\" class=\"block text-sm font-medium text-gray-700\">Date de début :</label>\r\n                <input type=\"date\" v-model=\"startDate\" id=\"start-date\" class=\"p-2 mt-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300\" />\r\n              </div>\r\n              <div class=\"mb-4\">\r\n                <label for=\"end-date\" class=\"block text-sm font-medium text-gray-700\">Date de fin :</label>\r\n                <input type=\"date\" v-model=\"endDate\" id=\"end-date\" class=\"p-2 mt-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300\" />\r\n              </div>\r\n              <div class=\"flex justify-between gap-2\">\r\n                <button @click=\"exportToXLSX\" class=\"px-4 py-2 text-xs text-white bg-green-500 rounded\">Exporter en XLSX</button>\r\n                <button @click=\"exportToPDF\" class=\"px-4 py-2 text-xs text-white bg-blue-500 rounded\">Exporter en PDF</button>\r\n                <button @click=\"closeExportModal\" class=\"px-4 py-2 text-xs text-white bg-red-500 rounded\">Fermer</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- Legend Container -->\r\n          <div class=\"pt-2\">\r\n            <h4 class=\"mb-2 font-medium text-[9px] uppercase\">Statistique par Période</h4>\r\n            <div class=\"flex flex-wrap gap-2\">\r\n              <div v-for=\"(stat, color) in statisticsByColor\" :key=\"color\" class=\"flex items-center p-2 space-x-2 bg-white rounded shadow-md\">\r\n                <div class=\"flex items-center justify-center h-4 p-1\" :class=\"stat.class\">\r\n                  <small class=\"text-[8px] text-white\">{{ stat.count }} / {{ totalInterventionDays }} j</small>\r\n                </div>\r\n                <span class=\"text-[8px] text-black\">{{ stat.name }}</span>\r\n                \r\n              </div>\r\n              \r\n            <div class=\"flex items-center p-2 space-x-2 bg-red-500 rounded shadow-md\">\r\n              <div class=\"flex items-center justify-center h-4 p-1\">\r\n                <small class=\"text-[8px] text-white\">{{ totalTNF }} j</small>\r\n              </div>\r\n              <span class=\"text-[8px] text-white\">Total TNF</span>\r\n            </div>\r\n            <div v-for=\"(role, index) in consultantsByRole\" :key=\"index\" class=\"flex items-center p-2 space-x-2 bg-blue-500 rounded shadow-md \">\r\n              <div class=\"flex items-center justify-center h-4 p-1\" :class=\"getClientColor(index)\">\r\n                <small class=\"text-[8px] text-white\">{{ role.count }} / {{ totalConsultants }}</small>\r\n              </div>\r\n              <span class=\"text-[8px] text-white\">{{ role.name }}</span>\r\n            </div>\r\n            \r\n              \r\n            </div>\r\n           \r\n          </div>\r\n        </div>\r\n        <div class=\"flex justify-between p-3 mt-1 bg-blue-500 rounded-t-md\">\r\n          <div class=\"flex items-center justify-\">\r\n            <div>\r\n              <button @click=\"prevPeriod\" class=\"px-4 py-2 text-white bg-blue-500 rounded shadow-lg text-[10px]\">\r\n                Précédent\r\n              </button>\r\n              <button @click=\"resetToToday\" class=\"px-4 py-2 ml-4 text-white bg-green-500 rounded shadow-lg text-[10px]\">\r\n                Mois en cours\r\n              </button>\r\n              <button @click=\"nextPeriod\" class=\"px-4 py-2 ml-4 text-white bg-blue-500 rounded shadow-lg text-[10px]\">\r\n                Suivant\r\n              </button>\r\n              <input id=\"client-search\" v-model=\"clientSearch\" type=\"text\" class=\"px-4 py-2 ml-4 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\" placeholder=\"Search with client name's\" />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h2 class=\"text-2xl font-bold text-white\">{{ displayPeriod }}</h2>\r\n          </div>\r\n          <div class=\"flex\">\r\n            <button @click=\"viewMode = 'month'\" :class=\"{ 'bg-white text-black': viewMode === 'month' }\" class=\"px-4 py-2 transition-colors duration-200 rounded shadow-lg text-[10px]\">\r\n              Mois\r\n            </button>\r\n            <button @click=\"viewMode = 'year'\" :class=\"{ 'bg-white text-black': viewMode === 'year' }\" class=\"px-4 py-2 ml-2 transition-colors duration-200 rounded shadow-lg text-[10px]\">\r\n              Année\r\n            </button>\r\n            <select v-model=\"selectedPays\" class=\"px-4 py-2 ml-2 transition-colors duration-200 rounded shadow-lg text-[10px]\">\r\n              <option value=\"\">Tous les pays</option>\r\n              <option v-for=\"agence in agences\" :key=\"agence.id\" :value=\"agence.pays\">\r\n                {{ agence.pays }}\r\n              </option>\r\n            </select>\r\n            <button @click=\"openExportModal\" class=\"px-4 py-2 ml-2 text-xs text-black rounded bg-gray-50\">Exporter</button>\r\n          </div>\r\n        </div>\r\n    <!-- Vue Mensuelle -->\r\n    <div v-if=\"viewMode === 'month'\" class=\"overflow-x-auto overflow-y-scroll md:h-[400px]\">\r\n      <table class=\"min-w-full border border-gray-300 table-auto\">\r\n        <thead class=\"sticky z-50 text-white bg-blue-500\">\r\n          <tr class=\"sticky z-50 bg-blue-500\">\r\n            <th class=\"sticky left-0 w-1/4 p-2 text-[9px] z-[70] bg-blue-500 rounded-l-lg\">\r\n              Ressources\r\n            </th>\r\n            <th v-for=\"(day, index) in periodDays\" :key=\"index\" class=\"sticky top-0 p-2 border-b bg-blue-500 z-50 border-gray-300 w-[50px] text-[9px]\">\r\n              {{ getDayLabel(index, day) }}\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <!-- Bench Row -->\r\n          <tr class=\"bench-row\">\r\n            <td class=\"sticky left-0 p-2 bg-white text-[9px] font-bold z-50\">\r\n              Bench\r\n            </td>\r\n            <td v-for=\"(day, index) in periodDays\" :key=\"index\" class=\"p-2 border-b border-gray-300 w-[50px] text-[9px]\">\r\n              {{ getWeeklyBenchForDay(day) }}\r\n            </td>\r\n          </tr>\r\n          <!-- Resource rows -->\r\n          <tr v-for=\"resource in filteredResources\" :key=\"resource.name\">\r\n            <td class=\"sticky left-0 p-1 bg-white text-[10px] z-50\">\r\n              {{ resource.name }}\r\n            </td>\r\n            <td v-for=\"(day, index) in periodDays\" :key=\"index\" class=\"p-1 border-b border-gray-300 w-[50px] text-[9px]\" :class=\"{\r\n                'bg-red-400': isJourFerie(day),\r\n                'bg-gray-300': isWeekend(day).isWeekend,\r\n              }\" @click=\"openEventModal(day, resource.name)\">\r\n              <!-- Holiday Display -->\r\n              <div v-if=\"isJourFerie(day)\" class=\"text-xs font-bold text-white\">\r\n                <div class=\"w-[50px] h-6 p-1 text-[6px] text-white bg-red-400 rounded\">\r\n                  {{ getJourFerieName(day, monthIndex) }}\r\n                </div>\r\n              </div>\r\n              <!-- Weekend Display -->\r\n              <div v-else-if=\"isWeekend(day).isWeekend\" class=\"w-full h-full p-1 text-[9px] text-black bg-gray-300 rounded\">\r\n                <template v-if=\"filteredEventsByDay[resource.name][day].length\">\r\n                  <div v-for=\"event in filteredEventsByDay[resource.name][day]\" :key=\"event.id\" class=\"relative w-[50px] h-6 p-1 text-[9px] text-center rounded cursor-pointer\" :class=\"getClientColor(event.color)\" @mouseover=\"showComment(event, day)\" @mouseleave=\"hideComment\">\r\n                    {{ event.clientAbbreviation }}\r\n                  </div>\r\n                </template>\r\n                <template v-else><p class=\"text-[9px]\">weekend</p></template>\r\n              </div>\r\n              <!-- Normal Day Display (not holiday, not weekend) -->\r\n              <div v-else>\r\n                <template v-if=\"filteredEventsByDay[resource.name][day].length\">\r\n                  <div v-for=\"event in filteredEventsByDay[resource.name][day]\" :key=\"event.id\" class=\"relative w-[50px] h-6 p-1 text-[9px] text-center rounded cursor-pointer\" :class=\"getClientColor(event.color)\" @mouseover=\"showComment(event, day)\" @mouseleave=\"hideComment\">\r\n                    {{ event.clientAbbreviation }}\r\n                    <div v-if=\"hoveredEvent === event && hoveredDay === day\" class=\"absolute z-10 p-2 text-sm text-white whitespace-normal bg-gray-800 rounded shadow-lg\" style=\"\r\n                        width: 200px;\r\n                        bottom: 100%;\r\n                        left: 50%;\r\n                        transform: translateX(-50%);\r\n                      \">\r\n                      {{ event.name }}\r\n                    </div>\r\n                  </div>\r\n                </template>\r\n                <!-- TNF for normal days without events -->\r\n                <template v-else>\r\n                  <div v-if=\"!isJourFerie(day)\" class=\"h-6 p-1 text-[9px] text-white bg-green-400 rounded cursor-pointer hover:bg-green-600\" :class=\"{\r\n                      'border-2 border-blue-600': isHighlightedTNF(resource.name, day),\r\n                    }\">\r\n                    TNF\r\n                  </div>\r\n                </template>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    \r\n        <!-- Vue Annuelle -->\r\n        <div v-else-if=\"viewMode === 'year'\" class=\"overflow-x-auto overflow-y-scroll md:h-[400px]\">\r\n          <div class=\"relative overflow-x-auto\">\r\n            <table class=\"min-w-full border border-gray-900 table-auto\">\r\n              <thead class=\"sticky top-0 z-10 text-white bg-blue-500\">\r\n                <tr>\r\n                  <th class=\"sticky left-0 z-50 w-1/4 p-1 bg-blue-500 rounded-l-lg\">Ressources</th>\r\n                  <th v-for=\"month in monthsOfYear\" :key=\"month\" class=\"p-1 border border-gray-300\">\r\n                    <div>{{ month }}</div>\r\n                    <div class=\"flex row-auto gap-1\">\r\n                      <div v-for=\"day in getDaysInMonth(monthsOfYear.indexOf(month))\" :key=\"`${month}-${day}`\" class=\"text-[9px] p-1 w-[50px] mr-[8px]\">\r\n                        {{ getDayAbbreviation(new Date(currentYear, monthsOfYear.indexOf(month), day)) }}\r\n                        {{ String(day).padStart(2, \"0\") }}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody class=\"overflow-x-auto\">\r\n                <!-- Bench Row pour la vue annuelle -->\r\n                <tr class=\"\">\r\n                  <td class=\"sticky left-0 p-2 bg-white text-[9px] font-bold gap-2 \">Bench</td>\r\n                  <td v-for=\"(month, monthIndex) in getDaysInYear()\" :key=\"monthIndex\" class=\"p-1 border border-gray-300 text-[9px]\">\r\n                    <div class=\"flex gap-[2px]\">\r\n                      <div v-for=\"day in month.days\" :key=\"day\" class=\"mx-[5px] text-[9px] text-center bg-transparent w-[50px] h-6 gap-3 rounded-sm\">\r\n                        <!-- Ajout de la condition pour les jours fériés -->\r\n                        <div v-if=\"isJourFerie(day, monthIndex)\">\r\n                          <div class=\"w-[50px] h-6 p-1 text-[1px] text-white bg-transparent rounded\">\r\n                            {{ getJourFerieName(day, monthIndex) }}\r\n                          </div>\r\n                        </div>\r\n                        <div v-else-if=\"isWeekend(day, monthIndex).isWeekend\">\r\n                          <div class=\"w-[50px] h-6 p-1 text-[1px] text-center text-white bg-transparent rounded\">\r\n                            weekend\r\n                          </div>\r\n                        </div>\r\n                        <div v-else>\r\n                          <!-- Afficher le BANGE pour chaque mercredi en vérifiant directement le jour -->\r\n                          <div v-if=\"new Date(currentYear, monthIndex, day).getDay() === 3\" class=\"w-[50px] h-6 p-1 text-[9px] text-white bg-cyan-400 rounded cursor-pointer hover:bg-green-600\">\r\n                            {{ getWeeklyBANGE(day, monthIndex).bange }}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr v-for=\"resource in filteredResources\" :key=\"resource.name\">\r\n                  <td class=\"sticky left-0  p-1 bg-white border text-[9px]\">\r\n                    {{ resource.name }}\r\n                  </td>\r\n                  <td v-for=\"(month, monthIndex) in getDaysInYear()\" :key=\"monthIndex\" class=\"p-1 border border-gray-300 text-[9px]\">\r\n                    <div class=\"flex gap-1\">\r\n                      <div v-for=\"day in month.days\" :key=\"day\" class=\"p-1 text-[9px] text-center rounded-lg\" @click=\"openEventModal(day, resource.name, monthIndex)\">\r\n                        <!-- Ajout de la condition pour les jours fériés -->\r\n                        <div v-if=\"isJourFerie(day, monthIndex)\">\r\n                          <div class=\"w-[50px] h-6 p-1 text-[6px] text-white bg-red-400 rounded\">\r\n                            {{ getJourFerieName(day, monthIndex) }}\r\n                          </div>\r\n                        </div>\r\n                        <div v-else-if=\"isWeekend(day, monthIndex).isWeekend\">\r\n                          <div class=\"w-[50px] h-6 p-1 text-[9px] text-center bg-gray-300 rounded\">\r\n                            <template v-if=\"getEventsForMonth(resource.name, monthIndex, day).length\">\r\n                              <div v-for=\"event in getEventsForMonth(resource.name, monthIndex, day)\" :key=\"event.id\" class=\"relative text-center rounded cursor-pointer w-[50px] h-6 p-1 text-[9px]\" :class=\"getClientColor(event.color)\" @mouseover=\"showComment(event, day)\" @mouseleave=\"hideComment\">\r\n                                {{ event.clientAbbreviation }}\r\n                                <div v-if=\"hoveredEvent === event && hoveredDay === day\" class=\"absolute z-10 p-1 text-[9px] text-white whitespace-normal bg-gray-800 rounded shadow-lg\" style=\"\r\n                                  width: 200px;\r\n                                  bottom: 100%;\r\n                                  left: 50%;\r\n                                  transform: translateX(-50%);\r\n                                \">\r\n                                  {{ event.name }}\r\n                                </div>\r\n                              </div>\r\n                            </template>\r\n                            <template v-else>weekend</template>\r\n                          </div>\r\n                        </div>\r\n                        <div v-else>\r\n                          <template v-if=\"getEventsForMonth(resource.name, monthIndex, day).length\">\r\n                            <div v-for=\"event in getEventsForMonth(resource.name, monthIndex, day)\" :key=\"event.id\" class=\"relative w-[50px] h-6 p-1 text-[9px] text-center rounded cursor-pointer\" :class=\"getClientColor(event.color)\" @mouseover=\"showComment(event, day)\" @mouseleave=\"hideComment\">\r\n                              {{ event.clientAbbreviation }}\r\n                              <div v-if=\"hoveredEvent === event && hoveredDay === day\" class=\"absolute z-10 w-[50px] h-6 p-1 text-[9px] text-white whitespace-normal bg-gray-800 rounded shadow-lg\" style=\"\r\n                                width: 200px;\r\n                                bottom: 100%;\r\n                                left: 50%;\r\n                                transform: translateX(-50%);\r\n                              \">\r\n                                {{ event.name }}\r\n                              </div>\r\n                            </div>\r\n                          </template>\r\n                          <template v-else>\r\n                            <div v-if=\"!isJourFerie(day, monthIndex)\" class=\"w-[50px] h-6 p-1 text-[9px] text-white bg-green-400 rounded cursor-pointer hover:bg-green-600\" :class=\"{\r\n                              'border-2 border-blue-600': isHighlightedTNF(resource.name, day, monthIndex),\r\n                            }\">\r\n                              TNF\r\n                            </div>\r\n                          </template>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <!-- Modal pour ajouter/modifier un événement -->\r\n        <div v-if=\"isEventModalOpen\" class=\"fixed inset-0 z-50 flex items-center justify-center p-6 bg-black bg-opacity-50 backdrop-blur-sm\" @click.self=\"closeEventModal\">\r\n          <div class=\"w-full max-w-2xl p-6 transition-transform duration-300 ease-in-out transform scale-75 bg-white rounded-lg shadow-lg\">\r\n            <h3 class=\"mb-4 text-lg font-semibold text-gray-800\">\r\n              Ressource : {{ selectedEvent.resourceName }}\r\n            </h3>\r\n            <div class=\"mt-4\">\r\n              <label for=\"client\" class=\"block text-sm font-medium text-gray-700\">Mission:</label>\r\n              <div>\r\n                <!-- Barre de recherche pour filtrer les clients -->\r\n                <input type=\"text\" v-model=\"clientSearch\" placeholder=\"Rechercher un client\" class=\"w-full p-2 mb-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\" />\r\n                <!-- Sélecteur de clients -->\r\n                <select id=\"client\" v-model=\"selectedClientId\" @change=\"updateSelectedClient\" class=\"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\">\r\n                  <option value=\"\">Sélectionnez un client</option>\r\n                  <option v-for=\"client in filteredClients\" :key=\"client.id\" :value=\"client.id\">\r\n                    {{ client.nom }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"mt-4\">\r\n              <label for=\"comment\" class=\"block text-sm font-medium text-gray-700\">Commentaire:</label>\r\n              <textarea id=\"comment\" v-model=\"comment\" class=\"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\" placeholder=\"Entrez un commentaire\"></textarea>\r\n            </div>\r\n            <div class=\"flex justify-between mt-4\">\r\n              <div class=\"w-full pr-2\">\r\n                <label for=\"start-date\" class=\"block text-sm font-medium text-gray-700\">Date de début:</label>\r\n                <input id=\"start-date\" type=\"date\" v-model=\"startDate\" class=\"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\" />\r\n              </div>\r\n              <div class=\"w-full pl-2\">\r\n                <label for=\"end-date\" class=\"block text-sm font-medium text-gray-700\">Date de fin:</label>\r\n                <input id=\"end-date\" type=\"date\" v-model=\"endDate\" class=\"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"flex space-x-4\">\r\n              <button v-if=\"selectedEvent.id\" @click=\"updateEvent\" class=\"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-green-500 rounded-md hover:bg-green-600 focus:outline-none focus:ring focus:ring-green-300\">\r\n                Mettre à jour l'intervention\r\n              </button>\r\n              <button v-else @click=\"saveEvent\" class=\"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-blue-500 rounded-md hover:bg-blue-600 focus:outline-none focus:ring focus:ring-blue-300\">\r\n                Enregistrer l'intervention\r\n              </button>\r\n              <!-- Button to delete the event -->\r\n              <button v-if=\"selectedEvent.id\" @click=\"deleteEvent\" class=\"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-red-500 rounded-md hover:bg-red-600 focus:outline-none focus:ring focus:ring-red-300\">\r\n                Supprimer l'intervention\r\n              </button>\r\n              <button @click=\"closeEventModal\" class=\"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-gray-500 rounded-md hover:bg-gray-600 focus:outline-none focus:ring focus:ring-gray-300\">\r\n                Fermer\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </template>\r\n<script>\r\nimport { format } from \"date-fns\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from '@/config'; // Assurez-vous que le chemin est correct\r\n\r\nexport default {\r\n  props: [\"userId\"],\r\n  data() {\r\n    return {\r\n      currentYear: new Date().getFullYear(),\r\n      currentMonth: new Date().getMonth(),\r\n      monthsOfYear: [\r\n        \"Janvier\",\r\n        \"Février\",\r\n        \"Mars\",\r\n        \"Avril\",\r\n        \"Mai\",\r\n        \"Juin\",\r\n        \"Juillet\",\r\n        \"Août\",\r\n        \"Septembre\",\r\n        \"Octobre\",\r\n        \"Novembre\",\r\n        \"Décembre\",\r\n      ],\r\n      currentDay: new Date().getDate(),\r\n      viewMode: \"month\",\r\n      resources: [],\r\n      events: [],\r\n      clients: [],\r\n      isEventModalOpen: false,\r\n      selectedEvent: {},\r\n      selectedClient: null,\r\n      selectedClientId: null,\r\n      comment: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      user_id: null,\r\n      joursFeries: [],\r\n      bangeResults: [],\r\n      isBANGEModalOpen: false,\r\n      searchStartDate: \"\",\r\n      searchEndDate: \"\",\r\n      tnfSearchResults: [],\r\n      clientSearch: '',\r\n      hoveredEvent: null,\r\n      hoveredDay: null,\r\n      bangeStartDate: \"\",\r\n      bangeEndDate: \"\",\r\n      selectedClientColor: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    filteredClients() {\r\n      return this.clients.filter((client) =>\r\n        client.nom.toLowerCase().includes(this.clientSearch.toLowerCase())\r\n      );\r\n    },\r\n    displayPeriod() {\r\n      if (this.viewMode === \"month\") {\r\n        const firstDayOfMonth = new Date(this.currentYear, this.currentMonth, 1);\r\n        return format(firstDayOfMonth, \"MMMM yyyy\");\r\n      } else if (this.viewMode === \"year\") {\r\n        const firstDayOfYear = new Date(this.currentYear, 0, 1);\r\n        return format(firstDayOfYear, \"yyyy\");\r\n      } else {\r\n        return `${this.currentYear}`;\r\n      }\r\n    },\r\n    formattedJoursFeries() {\r\n      // Format the public holidays to only include the date in 'yyyy-MM-dd' format\r\n      return this.joursFeries.map((jourFerie) => ({\r\n        date: format(new Date(jourFerie.date_ferie), \"yyyy-MM-dd\"), // Keep the date format\r\n        name: jourFerie.nom_ferie,\r\n      }));\r\n    },\r\n    periodDays() {\r\n      return this.viewMode === \"month\" ? this.getDaysInMonth() : this.getDaysInYear();\r\n    },\r\n    filteredResources() {\r\n      if (!this.searchStartDate || !this.searchEndDate) {\r\n        return this.resources;\r\n      }\r\n\r\n      const startDate = new Date(this.searchStartDate);\r\n      const endDate = new Date(this.searchEndDate);\r\n\r\n      return this.resources.filter((resource) => {\r\n        const tnfDays = this.getTNFDaysInPeriod(resource, startDate, endDate);\r\n        return tnfDays.length > 0;\r\n      });\r\n    },\r\n    // Nouvelle propriété calculée pour récupérer les événements par jour et ressource\r\n    filteredEventsByDay() {\r\n      const filteredEvents = {};\r\n\r\n      this.resources.forEach((resource) => {\r\n        filteredEvents[resource.name] = {};\r\n\r\n        this.periodDays.forEach((day) => {\r\n          const dayDate = new Date(this.currentYear, this.currentMonth, day);\r\n          filteredEvents[resource.name][day] = this.events.filter(\r\n            (event) =>\r\n              event.resource === resource.name && this.isEventOnDay(event, dayDate)\r\n          );\r\n        });\r\n      });\r\n\r\n      return filteredEvents;\r\n    },\r\n  },\r\n  watch: {\r\n    searchStartDate() {\r\n      this.updateView();\r\n    },\r\n    searchEndDate() {\r\n      this.updateView();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchResourcesAndEvents(this.userId);\r\n    this.fetchClients();\r\n    this.fetchJoursFeries();\r\n  },\r\n  methods: {\r\n    getDayAbbreviation(date) {\r\n      const days = [\"dim\", \"lun\", \"mar\", \"mer\", \"jeu\", \"ven\", \"sam\"];\r\n      return days[date.getDay()];\r\n    },\r\n    isWednesday(day, monthIndex) {\r\n      const date = new Date(this.currentYear, monthIndex, day);\r\n      return date.getDay() === 3; // 3 représente mercredi (0 = dimanche, 1 = lundi, etc.)\r\n    },\r\n    // Modifiez la méthode getWeeklyBANGE pour prendre en compte le monthIndex\r\n    getWeeklyBANGE(day, monthIndex = null) {\r\n      // Define start and end of the week based on `day`\r\n      const weekStart = new Date(\r\n        this.currentYear,\r\n        monthIndex !== null ? monthIndex : this.currentMonth,\r\n        day\r\n      );\r\n      const weekEnd = new Date(weekStart);\r\n      weekEnd.setDate(weekStart.getDate() + 6);\r\n\r\n      let totalTNF = 0;\r\n      let workingDays = 0;\r\n\r\n      for (let d = new Date(weekStart); d <= weekEnd; d.setDate(d.getDate() + 1)) {\r\n        const dayOfWeek = d.getDay();\r\n        if (\r\n          dayOfWeek !== 0 &&\r\n          dayOfWeek !== 6 &&\r\n          !this.isJourFerie(d.getDate(), d.getMonth())\r\n        ) {\r\n          workingDays++;\r\n          this.resources.forEach((resource) => {\r\n            const events = this.getEventsForMonth(\r\n              resource.name,\r\n              d.getMonth(),\r\n              d.getDate()\r\n            );\r\n            if (!events || events.length === 0) {\r\n              totalTNF++;\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      const etp = workingDays > 0 ? Math.min(workingDays, 5) : 0;\r\n      const bange = etp > 0 ? (totalTNF / etp).toFixed(1) : 0;\r\n      return { bange };\r\n    },\r\n    getJourFerieName(day, monthIndex = null) {\r\n      const date = new Date(\r\n        this.currentYear,\r\n        monthIndex !== null ? monthIndex : this.currentMonth,\r\n        typeof day === \"number\" ? day : new Date(day).getDate()\r\n      );\r\n      const formattedDate = format(date, \"yyyy-MM-dd\");\r\n      const jourFerie = this.formattedJoursFeries.find(\r\n        (jour) => jour.date === formattedDate\r\n      );\r\n      return jourFerie ? jourFerie.name : \"Férié\";\r\n    },\r\n    isJourFerie(day, monthIndex = null) {\r\n      const date = new Date(\r\n        this.currentYear,\r\n        monthIndex !== null ? monthIndex : this.currentMonth,\r\n        typeof day === \"number\" ? day : new Date(day).getDate()\r\n      );\r\n      const formattedDate = format(date, \"yyyy-MM-dd\");\r\n      return this.formattedJoursFeries.some((jour) => jour.date === formattedDate);\r\n    },\r\n    calculateBusinessDays(startDate, endDate) {\r\n      let count = 0;\r\n      const currentDate = new Date(startDate);\r\n\r\n      while (currentDate <= endDate) {\r\n        const dayOfWeek = currentDate.getDay();\r\n        if (dayOfWeek !== 0 && dayOfWeek !== 6) {\r\n          count++;\r\n        }\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n      }\r\n\r\n      return count;\r\n    },\r\n    showComment(event, day) {\r\n      this.hoveredEvent = event;\r\n      this.hoveredDay = day;\r\n    },\r\n    hideComment() {\r\n      this.hoveredEvent = null;\r\n      this.hoveredDay = null;\r\n    },\r\n    // Remplacer la méthode searchTNF par updateView\r\n    updateView() {\r\n      if (this.searchStartDate && this.searchEndDate) {\r\n        const startDate = new Date(this.searchStartDate);\r\n        this.currentYear = startDate.getFullYear();\r\n        this.currentMonth = startDate.getMonth();\r\n      }\r\n    },\r\n    clearDateFilters() {\r\n      this.searchStartDate = \"\";\r\n      this.searchEndDate = \"\";\r\n      this.updateView();\r\n    },\r\n    getTNFDaysInPeriod(resource, startDate, endDate) {\r\n      const tnfDays = [];\r\n      const resourceEvents = this.events.filter(\r\n        (event) => event.resource === resource.name\r\n      );\r\n\r\n      for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\r\n        // Ignorer les week-ends et les jours fériés\r\n        if (\r\n          this.isWeekend(d.getDate(), d.getMonth()).isWeekend ||\r\n          this.isJourFerie(d.getDate())\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        const eventsOnDay = resourceEvents.filter((event) => this.isEventOnDay(event, d));\r\n        if (eventsOnDay.length === 0) {\r\n          tnfDays.push(new Date(d));\r\n        }\r\n      }\r\n\r\n      return tnfDays;\r\n    },\r\n    isHighlightedTNF(resourceName, day, monthIndex) {\r\n      if (!this.searchStartDate || !this.searchEndDate) return false;\r\n\r\n      const resource = this.resources.find((r) => r.name === resourceName);\r\n      if (!resource) return false;\r\n\r\n      const date = new Date(\r\n        this.currentYear,\r\n        monthIndex !== undefined ? monthIndex : this.currentMonth,\r\n        day\r\n      );\r\n      const startDate = new Date(this.searchStartDate);\r\n      const endDate = new Date(this.searchEndDate);\r\n\r\n      // Exclure le jour s'il est en dehors de la plage ou s'il est un jour férié\r\n      if (date < startDate || date > endDate || this.isJourFerie(day)) return false;\r\n\r\n      const tnfDays = this.getTNFDaysInPeriod(resource, startDate, endDate);\r\n\r\n      return tnfDays.some(\r\n        (tnfDay) =>\r\n          tnfDay.getDate() === date.getDate() &&\r\n          tnfDay.getMonth() === date.getMonth() &&\r\n          tnfDay.getFullYear() === date.getFullYear()\r\n      );\r\n    },\r\n    async fetchJoursFeries() {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/jours-feries`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        this.joursFeries = response.data; // Stocke les jours fériés\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des jours fériés:\", error);\r\n      }\r\n    },\r\n    updateSelectedClient() {\r\n      const selectedClient = this.clients.find(\r\n        (client) => client.id === this.selectedClientId\r\n      );\r\n      if (selectedClient) {\r\n        this.selectedClientColor = selectedClient.color;\r\n      }\r\n    },\r\n    async fetchClients() {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/clients`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        this.clients = response.data;\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des clients:\", error);\r\n      }\r\n    },\r\n    async saveEvent() {\r\n      try {\r\n        await axios.post(\r\n          `${API_URL}/interventions`,\r\n          {\r\n            user_id: this.user_id,\r\n            client_id: this.selectedClientId, // Assurez-vous d'utiliser l'ID du client ici\r\n            commentaire: this.comment,\r\n            date_debut: this.startDate,\r\n            date_fin: this.endDate,\r\n            color: this.selectedClientColor,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        await this.fetchResourcesAndEvents();\r\n        this.closeEventModal();\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la sauvegarde de l'événement:\", error);\r\n        if (error.response) {\r\n          console.error(\"Détails de l'erreur:\", error.response.data);\r\n          // Affichez un message d'erreur utilisateur ici si nécessaire\r\n        }\r\n      }\r\n    },\r\n    async updateEvent() {\r\n      try {\r\n        await axios.post(\r\n          // Utilisez PUT pour les mises à jour\r\n          `${API_URL}/interventions/${this.selectedEvent.id}`,\r\n          {\r\n            user_id: this.user_id,\r\n            client_id: this.selectedClientId, // Assurez-vous d'utiliser l'ID du client ici\r\n            commentaire: this.comment,\r\n            date_debut: this.startDate,\r\n            date_fin: this.endDate,\r\n            color: this.selectedClientColor,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        await this.fetchResourcesAndEvents();\r\n        this.closeEventModal();\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la mise à jour de l'événement:\", error);\r\n        if (error.response) {\r\n          console.error(\"Détails de l'erreur:\", error.response.data);\r\n          // Affichez un message d'erreur utilisateur ici si nécessaire\r\n        }\r\n      }\r\n    },\r\n    selectClient(clientId) {\r\n      const client = this.clients.find((c) => c.id === clientId);\r\n      if (client) {\r\n        this.selectedClient = client.nom;\r\n        this.selectedClientId = client.id;\r\n        this.selectedClientColor = client.color; // Assurez-vous que cette ligne est présente\r\n      } else {\r\n        this.selectedClient = null;\r\n        this.selectedClientId = null;\r\n        this.selectedClientColor = \"\";\r\n      }\r\n    },\r\n    openEventModal(day, resourceName, monthIndex = null) {\r\n      let selectedDate;\r\n\r\n      if (monthIndex !== null) {\r\n        selectedDate = new Date(this.currentYear, monthIndex, day);\r\n      } else {\r\n        selectedDate = new Date(this.currentYear, this.currentMonth, day);\r\n      }\r\n\r\n      if (!isNaN(selectedDate.getTime())) {\r\n        const headerDate = format(selectedDate, \"yyyy-MM-dd\");\r\n        this.startDate = headerDate;\r\n\r\n        const resource = this.resources.find((r) => r.name === resourceName);\r\n\r\n        if (resource) {\r\n          this.selectedEvent = {\r\n            resourceName,\r\n            resourceId: resource.id,\r\n            day: this.startDate,\r\n          };\r\n          this.user_id = resource.id;\r\n\r\n          const events =\r\n            monthIndex !== null\r\n              ? this.getEventsForMonth(resourceName, monthIndex, day)\r\n              : this.filteredEventsByDay[resourceName][day];\r\n\r\n          const event = events && events[0];\r\n\r\n          if (event) {\r\n            const intervention = resource.interventions.find((i) => i.id === event.id);\r\n            console.log(intervention); // Ajoutez ceci pour vérifier ce que contient intervention\r\n            if (intervention) {\r\n              this.selectedClientId = intervention.client_id; // L'ID du client\r\n              this.selectedClient = intervention.client_name; // Le nom du client\r\n              this.comment = intervention.commentaire;\r\n              this.startDate = format(new Date(intervention.date_debut), \"yyyy-MM-dd\");\r\n              this.endDate = format(new Date(intervention.date_fin), \"yyyy-MM-dd\");\r\n              (this.selectedClientColor = intervention.client_color),\r\n                (this.selectedEvent.id = intervention.id); // Marquer comme événement existant\r\n            }\r\n          } else {\r\n            // Réinitialiser pour un nouvel événement\r\n            this.selectedClient = null;\r\n            this.selectedClientId = null;\r\n            this.comment = \"\";\r\n            this.startDate = headerDate;\r\n            this.endDate = \"\";\r\n            this.selectedClientColor = \"\"; // Valeur par défaut\r\n            this.selectedEvent.id = null; // Marquer comme nouvel événement\r\n          }\r\n\r\n          this.isEventModalOpen = true; // Ouvrir le modal\r\n        }\r\n      }\r\n    },\r\n    async deleteEvent() {\r\n      try {\r\n        await axios.delete(`${API_URL}/interventions/${this.selectedEvent.id}`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n\r\n        await this.fetchResourcesAndEvents();\r\n        this.closeEventModal();\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la suppression de l'événement:\", error);\r\n        if (error.response) {\r\n          console.error(\"Détails de l'erreur:\", error.response.data);\r\n        }\r\n      }\r\n    },\r\n    closeEventModal() {\r\n      this.isEventModalOpen = false;\r\n      this.selectedEvent = {};\r\n      this.selectedClient = null;\r\n      this.comment = \"\";\r\n      this.startDate = \"\";\r\n      this.endDate = \"\";\r\n      this.selectedClientColor = \"\";\r\n    },\r\n    resetToToday() {\r\n      const today = new Date();\r\n      this.currentYear = today.getFullYear();\r\n      this.currentMonth = today.getMonth();\r\n      this.currentDay = today.getDate();\r\n    },\r\n    prevPeriod() {\r\n      if (this.viewMode === \"month\") {\r\n        this.currentMonth--;\r\n        if (this.currentMonth < 0) {\r\n          this.currentMonth = 11;\r\n          this.currentYear--;\r\n        }\r\n      } else {\r\n        this.currentYear--;\r\n      }\r\n      this.fetchJoursFeries(); // Ajoutez cette ligne\r\n    },\r\n    nextPeriod() {\r\n      if (this.viewMode === \"month\") {\r\n        this.currentMonth++;\r\n        if (this.currentMonth > 11) {\r\n          this.currentMonth = 0;\r\n          this.currentYear++;\r\n        }\r\n      } else {\r\n        this.currentYear++;\r\n      }\r\n      this.fetchJoursFeries(); // Ajoutez cette ligne\r\n    },\r\n    getDayLabel(index, day) {\r\n      const dayDate = new Date(this.currentYear, this.currentMonth, day);\r\n      return format(dayDate, \"EEE dd\");\r\n    },\r\n    getDaysInMonth(monthIndex = null) {\r\n      const month = monthIndex !== null ? monthIndex : this.currentMonth;\r\n      const daysInMonth = new Date(this.currentYear, month + 1, 0).getDate();\r\n      return Array.from({ length: daysInMonth }, (_, i) => i + 1);\r\n    },\r\n    getDaysInYear() {\r\n      const months = [];\r\n      for (let month = 0; month < 12; month++) {\r\n        const daysInMonth = new Date(this.currentYear, month + 1, 0).getDate();\r\n        const days = Array.from({ length: daysInMonth }, (_, i) => i + 1);\r\n        months.push({\r\n          month: format(new Date(this.currentYear, month), \"MMMM\"),\r\n          days,\r\n        });\r\n      }\r\n      return months;\r\n    },\r\n    isWeekend(day, month = this.currentMonth) {\r\n      const date = new Date(this.currentYear, month, day);\r\n      const dayOfWeek = date.getDay();\r\n      return { isWeekend: dayOfWeek === 0 || dayOfWeek === 6, dayOfWeek };\r\n    },\r\n    isEventOnDay(event, day) {\r\n      const eventStart = new Date(event.startDate);\r\n      const eventEnd = new Date(event.endDate);\r\n      const dayOfWeek = day.getDay();\r\n      const isWeekend = dayOfWeek === 0 || dayOfWeek === 6;\r\n\r\n      const dayDate = new Date(day.getFullYear(), day.getMonth(), day.getDate());\r\n      const eventStartDate = new Date(\r\n        eventStart.getFullYear(),\r\n        eventStart.getMonth(),\r\n        eventStart.getDate()\r\n      );\r\n      const eventEndDate = new Date(\r\n        eventEnd.getFullYear(),\r\n        eventEnd.getMonth(),\r\n        eventEnd.getDate()\r\n      );\r\n\r\n      if (isWeekend) {\r\n        // Pour les week-ends, afficher uniquement les événements qui commencent un week-end\r\n        return (\r\n          (eventStart.getDay() === 0 || eventStart.getDay() === 6) &&\r\n          dayDate >= eventStartDate &&\r\n          dayDate <= eventEndDate\r\n        );\r\n      } else {\r\n        // Pour les jours de semaine, afficher uniquement les événements qui commencent un jour de semaine\r\n        return (\r\n          eventStart.getDay() !== 0 &&\r\n          eventStart.getDay() !== 6 &&\r\n          dayDate >= eventStartDate &&\r\n          dayDate <= eventEndDate\r\n        );\r\n      }\r\n    },\r\n    getEventsForMonth(resourceName, monthIndex, day) {\r\n      const date = new Date(this.currentYear, monthIndex, day);\r\n      return this.events.filter(\r\n        (event) => event.resource === resourceName && this.isEventOnDay(event, date)\r\n      );\r\n    },\r\n    async fetchResourcesAndEvents(userId) {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/user/${userId}/interventions`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        const data = response.data;\r\n\r\n        console.log(data); // Vérifiez ce qui est renvoyé par l'API\r\n\r\n        // Directement accéder à `data` car c'est un objet et non un tableau\r\n        this.resources = [\r\n          {\r\n            id: data.id,\r\n            name: data.name,\r\n            interventions: data.interventions,\r\n          },\r\n        ];\r\n\r\n        // Extraire les événements à partir de `data.interventions`\r\n        this.events = data.interventions.map((intervention) => ({\r\n          id: intervention.id,\r\n          name: intervention.commentaire,\r\n          startDate: intervention.date_debut,\r\n          endDate: intervention.date_fin,\r\n          color: intervention.client_color,\r\n          resource: data.name, // Utilisez `data.name` car il s'agit d'un utilisateur unique\r\n          resourceId: data.id,\r\n          clientAbbreviation: intervention.client_abbreviation,\r\n        }));\r\n\r\n        console.log(this.events); // Vérifiez ce qui est assigné à events\r\n      } catch (error) {\r\n        console.error(\r\n          \"Erreur lors de la récupération des données:\",\r\n          error.response ? error.response.data : error.message\r\n        );\r\n      }\r\n    },\r\n    getClientColor(color) {\r\n      if (!color || typeof color !== \"number\") {\r\n        return \"bg-blue-400\"; // Couleur par défaut si la couleur n'est pas définie ou invalide\r\n      }\r\n\r\n      switch (color) {\r\n        case 1:\r\n          return \"bg-orange-400\"; // Client (Orange)\r\n        case 2:\r\n          return \"bg-yellow-400\"; // Prévision (Jaune)\r\n        case 3:\r\n          return \"bg-sky-400\"; // Voyage (Bleu clair)\r\n        case 4:\r\n          return \"bg-blue-300\"; // Férié/Congé (Bleu ciel)\r\n        case 5:\r\n          return \"bg-blue-500\"; // Formation (Bleu)\r\n        case 6:\r\n          return \"bg-red-400\"; // Récupération (Rouge)\r\n        case 7:\r\n          return \"bg-purple-600\"; // Congé maladie (Violet)\r\n        case 8:\r\n          return \"bg-sky-600\"; // Université (Sky)\r\n        default:\r\n          return \"bg-blue-400\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}