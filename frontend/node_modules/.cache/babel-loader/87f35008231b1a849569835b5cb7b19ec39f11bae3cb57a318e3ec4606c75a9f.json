{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { getWithCache } from '../../api';\nconst state = {\n  agences: [],\n  searchName: \"\",\n  searchPays: \"\",\n  showAddModal: false,\n  showEditModal: false,\n  currentAgence: {\n    id: null,\n    name: \"\",\n    pays: \"\"\n  },\n  currentPage: 1,\n  itemsPerPage: 10\n};\nconst getters = {\n  filteredAgences: state => {\n    if (!Array.isArray(state.agences)) {\n      return [];\n    }\n    return state.agences.filter(agence => agence.name.toLowerCase().includes(state.searchName.toLowerCase()) && agence.pays.toLowerCase().includes(state.searchPays.toLowerCase()));\n  },\n  uniquePays: state => {\n    const pays = state.agences.map(agence => agence.pays);\n    return [...new Set(pays)];\n  },\n  totalPages: (state, getters) => {\n    return Math.ceil(getters.filteredAgences.length / state.itemsPerPage);\n  }\n};\nconst mutations = {\n  SET_AGENCES(state, agences) {\n    state.agences = agences;\n  },\n  SET_SEARCH_NAME(state, query) {\n    state.searchName = query;\n  },\n  SET_SEARCH_PAYS(state, query) {\n    state.searchPays = query;\n  },\n  SET_SHOW_ADD_MODAL(state, value) {\n    state.showAddModal = value;\n  },\n  SET_SHOW_EDIT_MODAL(state, value) {\n    state.showEditModal = value;\n  },\n  SET_CURRENT_AGENCE(state, agence) {\n    state.currentAgence = agence;\n  },\n  SET_CURRENT_PAGE(state, page) {\n    state.currentPage = page;\n  },\n  ADD_AGENCE(state, agence) {\n    state.agences.push(agence);\n  },\n  UPDATE_AGENCE(state, agence) {\n    const index = state.agences.findIndex(a => a.id === agence.id);\n    if (index !== -1) {\n      state.agences.splice(index, 1, agence);\n    }\n  },\n  DELETE_AGENCE(state, id) {\n    state.agences = state.agences.filter(agence => agence.id !== id);\n  }\n};\nconst actions = {\n  async fetchAgences({\n    commit\n  }) {\n    try {\n      const response = await getWithCache('/agences', {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      commit('SET_AGENCES', response.data.agences);\n    } catch (error) {\n      console.error(\"Error fetching agences:\", error);\n    }\n  },\n  async addAgence({\n    commit,\n    dispatch\n  }, agence) {\n    try {\n      const response = await getWithCache(\"/agences\", {\n        method: 'POST',\n        data: agence,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      const newAgence = response.data; // Assurez-vous que la réponse contient les données de la nouvelle agence\n\n      commit('ADD_AGENCE', newAgence);\n      commit('SET_SHOW_ADD_MODAL', false);\n      commit('SET_CURRENT_AGENCE', {\n        id: null,\n        name: \"\",\n        pays: \"\"\n      });\n\n      // Récupérer et afficher la liste des agences après l'ajout\n      await dispatch('fetchAgences');\n    } catch (error) {\n      console.error(error);\n    }\n  },\n  async updateAgence({\n    commit,\n    dispatch\n  }, agence) {\n    try {\n      const response = await getWithCache(`/agences/${agence.id}`, {\n        method: 'PUT',\n        data: agence,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      const updatedAgence = response.data; // Assurez-vous que la réponse contient les données de l'agence mise à jour\n      commit('UPDATE_AGENCE', updatedAgence);\n      commit('SET_SHOW_EDIT_MODAL', false);\n      commit('SET_CURRENT_AGENCE', {\n        id: null,\n        name: \"\",\n        pays: \"\"\n      });\n\n      // Récupérer et afficher la liste des agences après la mise à jour\n      await dispatch('fetchAgences');\n    } catch (error) {\n      console.error(error);\n    }\n  },\n  async deleteAgence({\n    commit,\n    dispatch\n  }, id) {\n    if (confirm(\"Êtes-vous sûr de vouloir supprimer cette agence ?\")) {\n      try {\n        await getWithCache(`/agences/${id}`, {\n          method: 'DELETE',\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        commit('DELETE_AGENCE', id);\n\n        // Récupérer et afficher la liste des agences après la suppression\n        await dispatch('fetchAgences');\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};","map":{"version":3,"names":["getWithCache","state","agences","searchName","searchPays","showAddModal","showEditModal","currentAgence","id","name","pays","currentPage","itemsPerPage","getters","filteredAgences","Array","isArray","filter","agence","toLowerCase","includes","uniquePays","map","Set","totalPages","Math","ceil","length","mutations","SET_AGENCES","SET_SEARCH_NAME","query","SET_SEARCH_PAYS","SET_SHOW_ADD_MODAL","value","SET_SHOW_EDIT_MODAL","SET_CURRENT_AGENCE","SET_CURRENT_PAGE","page","ADD_AGENCE","push","UPDATE_AGENCE","index","findIndex","a","splice","DELETE_AGENCE","actions","fetchAgences","commit","response","headers","Authorization","localStorage","getItem","data","error","console","addAgence","dispatch","method","newAgence","updateAgence","updatedAgence","deleteAgence","confirm","namespaced"],"sources":["C:/Users/gongue/Desktop/frontsbs/src/store/modules/agences.js"],"sourcesContent":["import { getWithCache } from '../../api';\r\n\r\nconst state = {\r\n    agences: [],\r\n    searchName: \"\",\r\n    searchPays: \"\",\r\n    showAddModal: false,\r\n    showEditModal: false,\r\n    currentAgence: { id: null, name: \"\", pays: \"\" },\r\n    currentPage: 1,\r\n    itemsPerPage: 10,\r\n};\r\n\r\nconst getters = {\r\n    filteredAgences: (state) => {\r\n        if (!Array.isArray(state.agences)) {\r\n            return [];\r\n        }\r\n        return state.agences.filter((agence) =>\r\n            agence.name.toLowerCase().includes(state.searchName.toLowerCase()) &&\r\n            agence.pays.toLowerCase().includes(state.searchPays.toLowerCase())\r\n        );\r\n    },\r\n    uniquePays: (state) => {\r\n        const pays = state.agences.map(agence => agence.pays);\r\n        return [...new Set(pays)];\r\n    },\r\n\r\n    totalPages: (state, getters) => {\r\n        return Math.ceil(getters.filteredAgences.length / state.itemsPerPage);\r\n    },\r\n};\r\n\r\nconst mutations = {\r\n    SET_AGENCES(state, agences) {\r\n        state.agences = agences;\r\n    },\r\n    SET_SEARCH_NAME(state, query) {\r\n        state.searchName = query;\r\n    },\r\n    SET_SEARCH_PAYS(state, query) {\r\n        state.searchPays = query;\r\n    },\r\n    SET_SHOW_ADD_MODAL(state, value) {\r\n        state.showAddModal = value;\r\n    },\r\n    SET_SHOW_EDIT_MODAL(state, value) {\r\n        state.showEditModal = value;\r\n    },\r\n    SET_CURRENT_AGENCE(state, agence) {\r\n        state.currentAgence = agence;\r\n    },\r\n    SET_CURRENT_PAGE(state, page) {\r\n        state.currentPage = page;\r\n    },\r\n    ADD_AGENCE(state, agence) {\r\n        state.agences.push(agence);\r\n    },\r\n    UPDATE_AGENCE(state, agence) {\r\n        const index = state.agences.findIndex(a => a.id === agence.id);\r\n        if (index !== -1) {\r\n            state.agences.splice(index, 1, agence);\r\n        }\r\n    },\r\n    DELETE_AGENCE(state, id) {\r\n        state.agences = state.agences.filter(agence => agence.id !== id);\r\n    },\r\n};\r\n\r\nconst actions = {\r\n    async fetchAgences({ commit }) {\r\n        try {\r\n            const response = await getWithCache('/agences', {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            });\r\n            commit('SET_AGENCES', response.data.agences);\r\n        } catch (error) {\r\n            console.error(\"Error fetching agences:\", error);\r\n        }\r\n    },\r\n    async addAgence({ commit, dispatch }, agence) {\r\n        try {\r\n            const response = await getWithCache(\"/agences\", {\r\n                method: 'POST',\r\n                data: agence,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            });\r\n            const newAgence = response.data; // Assurez-vous que la réponse contient les données de la nouvelle agence\r\n\r\n            commit('ADD_AGENCE', newAgence);\r\n            commit('SET_SHOW_ADD_MODAL', false);\r\n            commit('SET_CURRENT_AGENCE', { id: null, name: \"\", pays: \"\" });\r\n\r\n            // Récupérer et afficher la liste des agences après l'ajout\r\n            await dispatch('fetchAgences');\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    },\r\n    async updateAgence({ commit, dispatch }, agence) {\r\n        try {\r\n            const response = await getWithCache(`/agences/${agence.id}`, {\r\n                method: 'PUT',\r\n                data: agence,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            });\r\n            const updatedAgence = response.data; // Assurez-vous que la réponse contient les données de l'agence mise à jour\r\n            commit('UPDATE_AGENCE', updatedAgence);\r\n            commit('SET_SHOW_EDIT_MODAL', false);\r\n            commit('SET_CURRENT_AGENCE', { id: null, name: \"\", pays: \"\" });\r\n\r\n            // Récupérer et afficher la liste des agences après la mise à jour\r\n            await dispatch('fetchAgences');\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    },\r\n    async deleteAgence({ commit, dispatch }, id) {\r\n        if (confirm(\"Êtes-vous sûr de vouloir supprimer cette agence ?\")) {\r\n            try {\r\n                await getWithCache(`/agences/${id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                    },\r\n                });\r\n                commit('DELETE_AGENCE', id);\r\n\r\n                // Récupérer et afficher la liste des agences après la suppression\r\n                await dispatch('fetchAgences');\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n    },\r\n};\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state,\r\n    getters,\r\n    mutations,\r\n    actions,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}