{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelSelect as _vModelSelect, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container p-4 mx-auto\"\n};\nconst _hoisted_2 = {\n  class: \"flex items-center justify-between mb-2\"\n};\nconst _hoisted_3 = {\n  class: \"mb-4\"\n};\nconst _hoisted_4 = {\n  class: \"flex items-center p-4 space-x-6 rounded-lg shadow-md bg-gray-50\"\n};\nconst _hoisted_5 = {\n  class: \"flex items-center space-x-2\"\n};\nconst _hoisted_6 = {\n  class: \"flex items-center space-x-2\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"fixed inset-0 z-[70] flex items-center justify-center bg-black bg-opacity-50\"\n};\nconst _hoisted_8 = {\n  class: \"w-full max-w-md p-6 bg-white rounded-lg\"\n};\nconst _hoisted_9 = {\n  class: \"overflow-y-auto max-h-60\"\n};\nconst _hoisted_10 = {\n  class: \"w-full\"\n};\nconst _hoisted_11 = {\n  class: \"px-4 py-2\"\n};\nconst _hoisted_12 = {\n  class: \"px-4 py-2 text-right\"\n};\nconst _hoisted_13 = {\n  class: \"mb-4\"\n};\nconst _hoisted_14 = {\n  class: \"flex items-center p-4 space-x-6 rounded-lg shadow-md bg-gray-50\"\n};\nconst _hoisted_15 = {\n  class: \"flex items-center space-x-2\"\n};\nconst _hoisted_16 = {\n  class: \"flex items-center space-x-2\"\n};\nconst _hoisted_17 = {\n  class: \"flex justify-center p-2 space-x-4\"\n};\nconst _hoisted_18 = {\n  key: 0,\n  class: \"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-[70]\"\n};\nconst _hoisted_19 = {\n  class: \"w-full max-w-md p-6 bg-white rounded-lg shadow-lg\"\n};\nconst _hoisted_20 = {\n  class: \"mb-4\"\n};\nconst _hoisted_21 = {\n  class: \"mb-4\"\n};\nconst _hoisted_22 = {\n  class: \"flex justify-between gap-2\"\n};\nconst _hoisted_23 = {\n  class: \"pt-2\"\n};\nconst _hoisted_24 = {\n  class: \"flex flex-wrap gap-2\"\n};\nconst _hoisted_25 = {\n  class: \"text-[8px] text-white\"\n};\nconst _hoisted_26 = {\n  class: \"text-[8px]\"\n};\nconst _hoisted_27 = {\n  class: \"text-[8px]\"\n};\nconst _hoisted_28 = {\n  class: \"flex justify-between p-3 mt-1 bg-blue-500 rounded-t-md\"\n};\nconst _hoisted_29 = {\n  class: \"flex items-center justify-\"\n};\nconst _hoisted_30 = {\n  class: \"text-2xl font-bold text-white\"\n};\nconst _hoisted_31 = {\n  class: \"flex\"\n};\nconst _hoisted_32 = [\"value\"];\nconst _hoisted_33 = {\n  key: 0,\n  class: \"overflow-x-auto overflow-y-scroll md:h-[400px]\"\n};\nconst _hoisted_34 = {\n  class: \"min-w-full border border-gray-300 table-auto\"\n};\nconst _hoisted_35 = {\n  class: \"sticky z-50 text-white bg-blue-500\"\n};\nconst _hoisted_36 = {\n  class: \"sticky z-50 bg-blue-500\"\n};\nconst _hoisted_37 = {\n  class: \"sticky left-0 p-1 bg-white text-[10px] z-50\"\n};\nconst _hoisted_38 = [\"onClick\"];\nconst _hoisted_39 = {\n  key: 0,\n  class: \"text-xs font-bold text-white\"\n};\nconst _hoisted_40 = {\n  class: \"w-[50px] h-6 p-1 text-[6px] text-white bg-red-400 rounded\"\n};\nconst _hoisted_41 = {\n  class: \"w-full h-full p-1 text-[9px] text-black bg-gray-300 rounded\"\n};\nconst _hoisted_42 = [\"onMouseover\"];\nconst _hoisted_43 = {\n  key: 1,\n  class: \"text-[9px]\"\n};\nconst _hoisted_44 = [\"onMouseover\"];\nconst _hoisted_45 = {\n  key: 0,\n  class: \"absolute z-10 p-2 text-sm text-white whitespace-normal bg-gray-800 rounded shadow-lg\",\n  style: {\n    \"width\": \"200px\",\n    \"bottom\": \"100%\",\n    \"left\": \"50%\",\n    \"transform\": \"translateX(-50%)\"\n  }\n};\nconst _hoisted_46 = {\n  class: \"overflow-x-auto overflow-y-scroll md:h-[400px]\"\n};\nconst _hoisted_47 = {\n  class: \"relative overflow-x-auto\"\n};\nconst _hoisted_48 = {\n  class: \"min-w-full border border-gray-900 table-auto\"\n};\nconst _hoisted_49 = {\n  class: \"sticky top-0 z-10 text-white bg-blue-500\"\n};\nconst _hoisted_50 = {\n  class: \"flex row-auto gap-1\"\n};\nconst _hoisted_51 = {\n  class: \"overflow-x-auto\"\n};\nconst _hoisted_52 = {\n  class: \"\"\n};\nconst _hoisted_53 = {\n  class: \"flex gap-[2px]\"\n};\nconst _hoisted_54 = {\n  key: 0\n};\nconst _hoisted_55 = {\n  class: \"w-[50px] h-6 p-1 text-[1px] text-white bg-transparent rounded\"\n};\nconst _hoisted_56 = {\n  key: 1\n};\nconst _hoisted_57 = {\n  key: 2\n};\nconst _hoisted_58 = {\n  key: 0,\n  class: \"w-[50px] h-6 p-1 text-[9px] text-white bg-cyan-400 rounded cursor-pointer hover:bg-green-600\"\n};\nconst _hoisted_59 = {\n  class: \"sticky left-0 p-1 bg-white border text-[9px]\"\n};\nconst _hoisted_60 = {\n  class: \"flex gap-1\"\n};\nconst _hoisted_61 = [\"onClick\"];\nconst _hoisted_62 = {\n  key: 0\n};\nconst _hoisted_63 = {\n  class: \"w-[50px] h-6 p-1 text-[6px] text-white bg-red-400 rounded\"\n};\nconst _hoisted_64 = {\n  key: 1\n};\nconst _hoisted_65 = {\n  class: \"w-[50px] h-6 p-1 text-[9px] text-center bg-gray-300 rounded\"\n};\nconst _hoisted_66 = [\"onMouseover\"];\nconst _hoisted_67 = {\n  key: 0,\n  class: \"absolute z-10 p-1 text-[9px] text-white whitespace-normal bg-gray-800 rounded shadow-lg\",\n  style: {\n    \"width\": \"200px\",\n    \"bottom\": \"100%\",\n    \"left\": \"50%\",\n    \"transform\": \"translateX(-50%)\"\n  }\n};\nconst _hoisted_68 = {\n  key: 2\n};\nconst _hoisted_69 = [\"onMouseover\"];\nconst _hoisted_70 = {\n  key: 0,\n  class: \"absolute z-10 w-[50px] h-6 p-1 text-[9px] text-white whitespace-normal bg-gray-800 rounded shadow-lg\",\n  style: {\n    \"width\": \"200px\",\n    \"bottom\": \"100%\",\n    \"left\": \"50%\",\n    \"transform\": \"translateX(-50%)\"\n  }\n};\nconst _hoisted_71 = {\n  class: \"w-full max-w-2xl p-6 transition-transform duration-300 ease-in-out transform scale-75 bg-white rounded-lg shadow-lg\"\n};\nconst _hoisted_72 = {\n  class: \"mb-4 text-lg font-semibold text-gray-800\"\n};\nconst _hoisted_73 = {\n  class: \"mt-4\"\n};\nconst _hoisted_74 = [\"value\"];\nconst _hoisted_75 = {\n  class: \"mt-4\"\n};\nconst _hoisted_76 = {\n  class: \"flex justify-between mt-4\"\n};\nconst _hoisted_77 = {\n  class: \"w-full pr-2\"\n};\nconst _hoisted_78 = {\n  class: \"w-full pl-2\"\n};\nconst _hoisted_79 = {\n  class: \"flex space-x-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Conteneur principal pour le calcul du bench et la recherche \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Formulaire pour le calcul du BANGE \"), _createElementVNode(\"div\", _hoisted_3, [_cache[37] || (_cache[37] = _createElementVNode(\"h3\", {\n    class: \"mb-0 text-lg font-semibold text-gray-800 text-[10px]\"\n  }, \" Calcul du Bench \", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[35] || (_cache[35] = _createElementVNode(\"label\", {\n    for: \"bange-start-date\",\n    class: \"text-sm font-medium text-gray-700 text-[10px]\"\n  }, \"Date de début:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"bange-start-date\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.bangeStartDate = $event),\n    type: \"date\",\n    class: \"p-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.bangeStartDate]])]), _createElementVNode(\"div\", _hoisted_6, [_cache[36] || (_cache[36] = _createElementVNode(\"label\", {\n    for: \"bange-end-date\",\n    class: \"text-sm font-medium text-gray-700 text-[10px]\"\n  }, \"Date de fin:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"bange-end-date\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.bangeEndDate = $event),\n    type: \"date\",\n    class: \"p-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.bangeEndDate]])]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.calculateAndDisplayBANGE && $options.calculateAndDisplayBANGE(...args)),\n    class: \"px-4 py-2 text-[10px] text-white bg-blue-500 rounded shadow-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\n  }, \" Calculer le Bench \")])]), _createCommentVNode(\" Modal pour afficher les résultats du BANGE \"), $data.isBANGEModalOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_cache[39] || (_cache[39] = _createElementVNode(\"h2\", {\n    class: \"mb-4 text-xl font-bold\"\n  }, \"Résultats du Bench\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"table\", _hoisted_10, [_cache[38] || (_cache[38] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    class: \"px-4 py-2 font-semibold text-left bg-gray-100\"\n  }, \"Periode\"), _createElementVNode(\"th\", {\n    class: \"px-4 py-2 font-semibold text-right bg-gray-100\"\n  }, \"Etp\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.bangeResults, result => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: result.date,\n      class: \"border-b\"\n    }, [_createElementVNode(\"td\", _hoisted_11, _toDisplayString(result.date), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_12, _toDisplayString(result.bange), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.closeBANGEModal && $options.closeBANGEModal(...args)),\n    class: \"px-4 py-2 mt-4 text-white bg-blue-500 rounded hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\n  }, \" Fermer \")])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Formulaire de recherche \"), _createElementVNode(\"div\", _hoisted_13, [_cache[42] || (_cache[42] = _createElementVNode(\"h3\", {\n    class: \"mb-0 text-lg font-semibold text-gray-800 text-[10px]\"\n  }, \"Recherche TNF\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_cache[40] || (_cache[40] = _createElementVNode(\"label\", {\n    for: \"start-search\",\n    class: \"text-sm font-medium text-gray-700 text-[10px]\"\n  }, \"Date de début:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"start-search\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.searchStartDate = $event),\n    type: \"date\",\n    class: \"p-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchStartDate]])]), _createElementVNode(\"div\", _hoisted_16, [_cache[41] || (_cache[41] = _createElementVNode(\"label\", {\n    for: \"end-search\",\n    class: \"text-sm font-medium text-gray-700 text-[10px]\"\n  }, \"Date de fin:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"end-search\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.searchEndDate = $event),\n    type: \"date\",\n    class: \"p-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchEndDate]])]), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.clearDateFilters && $options.clearDateFilters(...args)),\n    class: \"px-4 py-2 text-[10px] text-white bg-red-500 rounded shadow-lg hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50\"\n  }, \" Effacer les filtres \")])])]), _createElementVNode(\"div\", _hoisted_17, [_createCommentVNode(\" Modal pour sélectionner la période et le format d'exportation \"), $data.isExportModalOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_cache[45] || (_cache[45] = _createElementVNode(\"h2\", {\n    class: \"mb-4 text-xl font-bold\"\n  }, \"Exporter les données\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_20, [_cache[43] || (_cache[43] = _createElementVNode(\"label\", {\n    for: \"start-date\",\n    class: \"block text-sm font-medium text-gray-700\"\n  }, \"Date de début :\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.startDate = $event),\n    id: \"start-date\",\n    class: \"p-2 mt-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.startDate]])]), _createElementVNode(\"div\", _hoisted_21, [_cache[44] || (_cache[44] = _createElementVNode(\"label\", {\n    for: \"end-date\",\n    class: \"block text-sm font-medium text-gray-700\"\n  }, \"Date de fin :\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.endDate = $event),\n    id: \"end-date\",\n    class: \"p-2 mt-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.endDate]])]), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => $options.exportToXLSX && $options.exportToXLSX(...args)),\n    class: \"px-4 py-2 text-xs text-white bg-green-500 rounded\"\n  }, \"Exporter en XLSX\"), _createElementVNode(\"button\", {\n    onClick: _cache[10] || (_cache[10] = (...args) => $options.exportToPDF && $options.exportToPDF(...args)),\n    class: \"px-4 py-2 text-xs text-white bg-blue-500 rounded\"\n  }, \"Exporter en PDF\"), _createElementVNode(\"button\", {\n    onClick: _cache[11] || (_cache[11] = (...args) => $options.closeExportModal && $options.closeExportModal(...args)),\n    class: \"px-4 py-2 text-xs text-white bg-red-500 rounded\"\n  }, \"Fermer\")])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Legend Container \"), _createElementVNode(\"div\", _hoisted_23, [_cache[46] || (_cache[46] = _createElementVNode(\"h4\", {\n    class: \"mb-2 font-bold\"\n  }, \"Statistiques par Couleur\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_24, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.statisticsByColor, (stat, color) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: color,\n      class: \"flex items-center p-2 space-x-2 bg-white rounded shadow-md\"\n    }, [_createElementVNode(\"div\", {\n      class: _normalizeClass([\"flex items-center justify-center h-4 p-1\", stat.class])\n    }, [_createElementVNode(\"small\", _hoisted_25, _toDisplayString(stat.count) + \" j\", 1 /* TEXT */)], 2 /* CLASS */), _createElementVNode(\"span\", _hoisted_26, _toDisplayString(stat.name), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_27, _toDisplayString(stat.color), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[12] || (_cache[12] = (...args) => $options.prevPeriod && $options.prevPeriod(...args)),\n    class: \"px-4 py-2 text-white bg-blue-500 rounded shadow-lg text-[10px]\"\n  }, \" Précédent \"), _createElementVNode(\"button\", {\n    onClick: _cache[13] || (_cache[13] = (...args) => $options.resetToToday && $options.resetToToday(...args)),\n    class: \"px-4 py-2 ml-4 text-white bg-green-500 rounded shadow-lg text-[10px]\"\n  }, \" Mois en cours \"), _createElementVNode(\"button\", {\n    onClick: _cache[14] || (_cache[14] = (...args) => $options.nextPeriod && $options.nextPeriod(...args)),\n    class: \"px-4 py-2 ml-4 text-white bg-blue-500 rounded shadow-lg text-[10px]\"\n  }, \" Suivant \"), _withDirectives(_createElementVNode(\"input\", {\n    id: \"client-search\",\n    \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $data.clientSearch = $event),\n    type: \"text\",\n    class: \"px-4 py-2 ml-4 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\",\n    placeholder: \"Search with client name's\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.clientSearch]])])]), _createElementVNode(\"div\", null, [_createElementVNode(\"h2\", _hoisted_30, _toDisplayString($options.displayPeriod), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"button\", {\n    onClick: _cache[16] || (_cache[16] = $event => $data.viewMode = 'month'),\n    class: _normalizeClass([{\n      'bg-white text-black': $data.viewMode === 'month'\n    }, \"px-4 py-2 transition-colors duration-200 rounded shadow-lg text-[10px]\"])\n  }, \" Mois \", 2 /* CLASS */), _createElementVNode(\"button\", {\n    onClick: _cache[17] || (_cache[17] = $event => $data.viewMode = 'year'),\n    class: _normalizeClass([{\n      'bg-white text-black': $data.viewMode === 'year'\n    }, \"px-4 py-2 ml-2 transition-colors duration-200 rounded shadow-lg text-[10px]\"])\n  }, \" Année \", 2 /* CLASS */), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => $data.selectedPays = $event),\n    class: \"px-4 py-2 ml-2 transition-colors duration-200 rounded shadow-lg text-[10px]\"\n  }, [_cache[47] || (_cache[47] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"Tous les pays\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.agences, agence => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: agence.id,\n      value: agence.pays\n    }, _toDisplayString(agence.pays), 9 /* TEXT, PROPS */, _hoisted_32);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedPays]]), _createElementVNode(\"button\", {\n    onClick: _cache[19] || (_cache[19] = (...args) => $options.openExportModal && $options.openExportModal(...args)),\n    class: \"px-4 py-2 ml-2 text-xs text-black rounded bg-gray-50\"\n  }, \"Exporter\")])]), _createCommentVNode(\" Vue Mensuelle \"), $data.viewMode === 'month' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, [_createElementVNode(\"table\", _hoisted_34, [_createElementVNode(\"thead\", _hoisted_35, [_createElementVNode(\"tr\", _hoisted_36, [_cache[48] || (_cache[48] = _createElementVNode(\"th\", {\n    class: \"sticky left-0 w-1/4 p-2 text-[9px] z-[70] bg-blue-500 rounded-l-lg\"\n  }, \" Ressources \", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.periodDays, (day, index) => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: index,\n      class: \"sticky top-0 p-2 border-b bg-blue-500 z-50 border-gray-300 w-[50px] text-[9px]\"\n    }, _toDisplayString($options.getDayLabel(index, day)), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"tbody\", null, [_createCommentVNode(\" Resource rows \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredResources, resource => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: resource.name\n    }, [_createElementVNode(\"td\", _hoisted_37, _toDisplayString(resource.name), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.periodDays, (day, index) => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: index,\n        class: _normalizeClass([\"p-1 border-b border-gray-300 w-[50px] text-[9px]\", {\n          'bg-red-400': $options.isJourFerie(day),\n          'bg-gray-300': $options.isWeekend(day).isWeekend\n        }]),\n        onClick: $event => $options.openEventModal(day, resource.name)\n      }, [_createCommentVNode(\" Holiday Display \"), $options.isJourFerie(day) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_39, [_createElementVNode(\"div\", _hoisted_40, _toDisplayString($options.getJourFerieName(day, _ctx.monthIndex)), 1 /* TEXT */)])) : $options.isWeekend(day).isWeekend ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 1\n      }, [_createCommentVNode(\" Weekend Display \"), _createElementVNode(\"div\", _hoisted_41, [$options.filteredEventsByDay[resource.name][day].length ? (_openBlock(true), _createElementBlock(_Fragment, {\n        key: 0\n      }, _renderList($options.filteredEventsByDay[resource.name][day], event => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: event.id,\n          class: _normalizeClass([\"relative w-[50px] h-6 p-1 text-[9px] text-center rounded cursor-pointer\", $options.getClientColor(event.color)]),\n          onMouseover: $event => $options.showComment(event, day),\n          onMouseleave: _cache[20] || (_cache[20] = (...args) => $options.hideComment && $options.hideComment(...args))\n        }, _toDisplayString(event.clientAbbreviation), 43 /* TEXT, CLASS, PROPS, NEED_HYDRATION */, _hoisted_42);\n      }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"p\", _hoisted_43, \"weekend\"))])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n        key: 2\n      }, [_createCommentVNode(\" Normal Day Display (not holiday, not weekend) \"), _createElementVNode(\"div\", null, [$options.filteredEventsByDay[resource.name][day].length ? (_openBlock(true), _createElementBlock(_Fragment, {\n        key: 0\n      }, _renderList($options.filteredEventsByDay[resource.name][day], event => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: event.id,\n          class: _normalizeClass([\"relative w-[50px] h-6 p-1 text-[9px] text-center rounded cursor-pointer\", $options.getClientColor(event.color)]),\n          onMouseover: $event => $options.showComment(event, day),\n          onMouseleave: _cache[21] || (_cache[21] = (...args) => $options.hideComment && $options.hideComment(...args))\n        }, [_createTextVNode(_toDisplayString(event.clientAbbreviation) + \" \", 1 /* TEXT */), $data.hoveredEvent === event && $data.hoveredDay === day ? (_openBlock(), _createElementBlock(\"div\", _hoisted_45, _toDisplayString(event.name), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_44);\n      }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n        key: 1\n      }, [_createCommentVNode(\" TNF for normal days without events \"), !$options.isJourFerie(day) ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: _normalizeClass([\"h-6 p-1 text-[9px] text-white bg-green-400 rounded cursor-pointer hover:bg-green-600\", {\n          'border-2 border-blue-600': $options.isHighlightedTNF(resource.name, day)\n        }])\n      }, \" TNF \", 2 /* CLASS */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */))])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))], 10 /* CLASS, PROPS */, _hoisted_38);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : $data.viewMode === 'year' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Vue Annuelle \"), _createElementVNode(\"div\", _hoisted_46, [_createElementVNode(\"div\", _hoisted_47, [_createElementVNode(\"table\", _hoisted_48, [_createElementVNode(\"thead\", _hoisted_49, [_createElementVNode(\"tr\", null, [_cache[49] || (_cache[49] = _createElementVNode(\"th\", {\n    class: \"sticky left-0 z-50 w-1/4 p-1 bg-blue-500 rounded-l-lg\"\n  }, \"Ressources\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.monthsOfYear, month => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: month,\n      class: \"p-1 border border-gray-300\"\n    }, [_createElementVNode(\"div\", null, _toDisplayString(month), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_50, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getDaysInMonth($data.monthsOfYear.indexOf(month)), day => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: `${month}-${day}`,\n        class: \"text-[9px] p-1 w-[50px] mr-[8px]\"\n      }, _toDisplayString($options.getDayAbbreviation(new Date($data.currentYear, $data.monthsOfYear.indexOf(month), day))) + \" \" + _toDisplayString(String(day).padStart(2, \"0\")), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"tbody\", _hoisted_51, [_createCommentVNode(\" Bench Row pour la vue annuelle \"), _createElementVNode(\"tr\", _hoisted_52, [_cache[51] || (_cache[51] = _createElementVNode(\"td\", {\n    class: \"sticky left-0 p-2 bg-white text-[9px] font-bold gap-2\"\n  }, \"Bench\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getDaysInYear(), (month, monthIndex) => {\n    return _openBlock(), _createElementBlock(\"td\", {\n      key: monthIndex,\n      class: \"p-1 border border-gray-300 text-[9px]\"\n    }, [_createElementVNode(\"div\", _hoisted_53, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(month.days, day => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: day,\n        class: \"mx-[5px] text-[9px] text-center bg-transparent w-[50px] h-6 gap-3 rounded-sm\"\n      }, [_createCommentVNode(\" Ajout de la condition pour les jours fériés \"), $options.isJourFerie(day, monthIndex) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_54, [_createElementVNode(\"div\", _hoisted_55, _toDisplayString($options.getJourFerieName(day, monthIndex)), 1 /* TEXT */)])) : $options.isWeekend(day, monthIndex).isWeekend ? (_openBlock(), _createElementBlock(\"div\", _hoisted_56, [...(_cache[50] || (_cache[50] = [_createElementVNode(\"div\", {\n        class: \"w-[50px] h-6 p-1 text-[1px] text-center text-white bg-transparent rounded\"\n      }, \" weekend \", -1 /* HOISTED */)]))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_57, [_createCommentVNode(\" Afficher le BANGE pour chaque mercredi en vérifiant directement le jour \"), new Date($data.currentYear, monthIndex, day).getDay() === 3 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_58, _toDisplayString($options.getWeeklyBANGE(day, monthIndex).bange), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]))]);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredResources, resource => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: resource.name\n    }, [_createElementVNode(\"td\", _hoisted_59, _toDisplayString(resource.name), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getDaysInYear(), (month, monthIndex) => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: monthIndex,\n        class: \"p-1 border border-gray-300 text-[9px]\"\n      }, [_createElementVNode(\"div\", _hoisted_60, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(month.days, day => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: day,\n          class: \"p-1 text-[9px] text-center rounded-lg\",\n          onClick: $event => $options.openEventModal(day, resource.name, monthIndex)\n        }, [_createCommentVNode(\" Ajout de la condition pour les jours fériés \"), $options.isJourFerie(day, monthIndex) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_62, [_createElementVNode(\"div\", _hoisted_63, _toDisplayString($options.getJourFerieName(day, monthIndex)), 1 /* TEXT */)])) : $options.isWeekend(day, monthIndex).isWeekend ? (_openBlock(), _createElementBlock(\"div\", _hoisted_64, [_createElementVNode(\"div\", _hoisted_65, [$options.getEventsForMonth(resource.name, monthIndex, day).length ? (_openBlock(true), _createElementBlock(_Fragment, {\n          key: 0\n        }, _renderList($options.getEventsForMonth(resource.name, monthIndex, day), event => {\n          return _openBlock(), _createElementBlock(\"div\", {\n            key: event.id,\n            class: _normalizeClass([\"relative text-center rounded cursor-pointer w-[50px] h-6 p-1 text-[9px]\", $options.getClientColor(event.color)]),\n            onMouseover: $event => $options.showComment(event, day),\n            onMouseleave: _cache[22] || (_cache[22] = (...args) => $options.hideComment && $options.hideComment(...args))\n          }, [_createTextVNode(_toDisplayString(event.clientAbbreviation) + \" \", 1 /* TEXT */), $data.hoveredEvent === event && $data.hoveredDay === day ? (_openBlock(), _createElementBlock(\"div\", _hoisted_67, _toDisplayString(event.name), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_66);\n        }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n          key: 1\n        }, [_createTextVNode(\"weekend\")], 64 /* STABLE_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_68, [$options.getEventsForMonth(resource.name, monthIndex, day).length ? (_openBlock(true), _createElementBlock(_Fragment, {\n          key: 0\n        }, _renderList($options.getEventsForMonth(resource.name, monthIndex, day), event => {\n          return _openBlock(), _createElementBlock(\"div\", {\n            key: event.id,\n            class: _normalizeClass([\"relative w-[50px] h-6 p-1 text-[9px] text-center rounded cursor-pointer\", $options.getClientColor(event.color)]),\n            onMouseover: $event => $options.showComment(event, day),\n            onMouseleave: _cache[23] || (_cache[23] = (...args) => $options.hideComment && $options.hideComment(...args))\n          }, [_createTextVNode(_toDisplayString(event.clientAbbreviation) + \" \", 1 /* TEXT */), $data.hoveredEvent === event && $data.hoveredDay === day ? (_openBlock(), _createElementBlock(\"div\", _hoisted_70, _toDisplayString(event.name), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_69);\n        }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n          key: 1\n        }, [!$options.isJourFerie(day, monthIndex) ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: _normalizeClass([\"w-[50px] h-6 p-1 text-[9px] text-white bg-green-400 rounded cursor-pointer hover:bg-green-600\", {\n            'border-2 border-blue-600': $options.isHighlightedTNF(resource.name, day, monthIndex)\n          }])\n        }, \" TNF \", 2 /* CLASS */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */))]))], 8 /* PROPS */, _hoisted_61);\n      }), 128 /* KEYED_FRAGMENT */))])]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Modal pour ajouter/modifier un événement \"), $data.isEventModalOpen ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 2,\n    class: \"fixed inset-0 z-50 flex items-center justify-center p-6 bg-black bg-opacity-50 backdrop-blur-sm\",\n    onClick: _cache[34] || (_cache[34] = _withModifiers((...args) => $options.closeEventModal && $options.closeEventModal(...args), [\"self\"]))\n  }, [_createElementVNode(\"div\", _hoisted_71, [_createElementVNode(\"h3\", _hoisted_72, \" Ressource : \" + _toDisplayString($data.selectedEvent.resourceName), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_73, [_cache[53] || (_cache[53] = _createElementVNode(\"label\", {\n    for: \"client\",\n    class: \"block text-sm font-medium text-gray-700\"\n  }, \"Client:\", -1 /* HOISTED */)), _createElementVNode(\"div\", null, [_createCommentVNode(\" Barre de recherche pour filtrer les clients \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[24] || (_cache[24] = $event => $data.clientSearch = $event),\n    placeholder: \"Rechercher un client\",\n    class: \"w-full p-2 mb-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.clientSearch]]), _createCommentVNode(\" Sélecteur de clients \"), _withDirectives(_createElementVNode(\"select\", {\n    id: \"client\",\n    \"onUpdate:modelValue\": _cache[25] || (_cache[25] = $event => $data.selectedClientId = $event),\n    onChange: _cache[26] || (_cache[26] = (...args) => $options.updateSelectedClient && $options.updateSelectedClient(...args)),\n    class: \"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\"\n  }, [_cache[52] || (_cache[52] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"Sélectionnez un client\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredClients, client => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: client.id,\n      value: client.id\n    }, _toDisplayString(client.nom), 9 /* TEXT, PROPS */, _hoisted_74);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.selectedClientId]])])]), _createElementVNode(\"div\", _hoisted_75, [_cache[54] || (_cache[54] = _createElementVNode(\"label\", {\n    for: \"comment\",\n    class: \"block text-sm font-medium text-gray-700\"\n  }, \"Commentaire:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"comment\",\n    \"onUpdate:modelValue\": _cache[27] || (_cache[27] = $event => $data.comment = $event),\n    class: \"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\",\n    placeholder: \"Entrez un commentaire\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.comment]])]), _createElementVNode(\"div\", _hoisted_76, [_createElementVNode(\"div\", _hoisted_77, [_cache[55] || (_cache[55] = _createElementVNode(\"label\", {\n    for: \"start-date\",\n    class: \"block text-sm font-medium text-gray-700\"\n  }, \"Date de début:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"start-date\",\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[28] || (_cache[28] = $event => $data.startDate = $event),\n    class: \"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.startDate]])]), _createElementVNode(\"div\", _hoisted_78, [_cache[56] || (_cache[56] = _createElementVNode(\"label\", {\n    for: \"end-date\",\n    class: \"block text-sm font-medium text-gray-700\"\n  }, \"Date de fin:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"end-date\",\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[29] || (_cache[29] = $event => $data.endDate = $event),\n    class: \"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.endDate]])])]), _createElementVNode(\"div\", _hoisted_79, [$data.selectedEvent.id ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[30] || (_cache[30] = (...args) => $options.updateEvent && $options.updateEvent(...args)),\n    class: \"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-green-500 rounded-md hover:bg-green-600 focus:outline-none focus:ring focus:ring-green-300\"\n  }, \" Mettre à jour l'intervention \")) : (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[31] || (_cache[31] = (...args) => $options.saveEvent && $options.saveEvent(...args)),\n    class: \"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-blue-500 rounded-md hover:bg-blue-600 focus:outline-none focus:ring focus:ring-blue-300\"\n  }, \" Enregistrer l'intervention \")), _createCommentVNode(\" Button to delete the event \"), $data.selectedEvent.id ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    onClick: _cache[32] || (_cache[32] = (...args) => $options.deleteEvent && $options.deleteEvent(...args)),\n    class: \"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-red-500 rounded-md hover:bg-red-600 focus:outline-none focus:ring focus:ring-red-300\"\n  }, \" Supprimer l'intervention \")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[33] || (_cache[33] = (...args) => $options.closeEventModal && $options.closeEventModal(...args)),\n    class: \"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-gray-500 rounded-md hover:bg-gray-600 focus:outline-none focus:ring focus:ring-gray-300\"\n  }, \" Fermer \")])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","style","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","for","id","_cache","$event","$data","bangeStartDate","type","_hoisted_6","bangeEndDate","onClick","args","$options","calculateAndDisplayBANGE","isBANGEModalOpen","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_Fragment","_renderList","bangeResults","result","date","_hoisted_11","_toDisplayString","_hoisted_12","bange","closeBANGEModal","_hoisted_13","_hoisted_14","_hoisted_15","searchStartDate","_hoisted_16","searchEndDate","clearDateFilters","_hoisted_17","isExportModalOpen","_hoisted_18","_hoisted_19","_hoisted_20","startDate","_hoisted_21","endDate","_hoisted_22","exportToXLSX","exportToPDF","closeExportModal","_hoisted_23","_hoisted_24","statisticsByColor","stat","color","_normalizeClass","_hoisted_25","count","_hoisted_26","name","_hoisted_27","_hoisted_28","_hoisted_29","prevPeriod","resetToToday","nextPeriod","clientSearch","placeholder","_hoisted_30","displayPeriod","_hoisted_31","viewMode","selectedPays","value","agences","agence","pays","_hoisted_32","openExportModal","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","periodDays","day","index","getDayLabel","filteredResources","resource","_hoisted_37","isJourFerie","isWeekend","openEventModal","_hoisted_39","_hoisted_40","getJourFerieName","_ctx","monthIndex","_hoisted_41","filteredEventsByDay","length","event","getClientColor","onMouseover","showComment","onMouseleave","hideComment","clientAbbreviation","_hoisted_42","_hoisted_43","_createTextVNode","hoveredEvent","hoveredDay","_hoisted_45","_hoisted_44","isHighlightedTNF","_hoisted_38","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","monthsOfYear","month","_hoisted_50","getDaysInMonth","indexOf","getDayAbbreviation","Date","currentYear","String","padStart","_hoisted_51","_hoisted_52","getDaysInYear","_hoisted_53","days","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","getDay","_hoisted_58","getWeeklyBANGE","_hoisted_59","_hoisted_60","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","getEventsForMonth","_hoisted_67","_hoisted_66","_hoisted_68","_hoisted_70","_hoisted_69","_hoisted_61","isEventModalOpen","_withModifiers","closeEventModal","_hoisted_71","_hoisted_72","selectedEvent","resourceName","_hoisted_73","selectedClientId","onChange","updateSelectedClient","filteredClients","client","nom","_hoisted_74","_hoisted_75","comment","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","updateEvent","saveEvent","deleteEvent"],"sources":["C:\\Users\\gongue\\Desktop\\frontsbs\\src\\views\\StaffingView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container p-4 mx-auto\">\r\n    <!-- Conteneur principal pour le calcul du bench et la recherche -->\r\n    <div class=\"flex items-center justify-between mb-2 \">\r\n      <!-- Formulaire pour le calcul du BANGE -->\r\n      <div class=\"mb-4\">\r\n        <h3 class=\"mb-0 text-lg font-semibold text-gray-800 text-[10px]\">\r\n          Calcul du Bench\r\n        </h3>\r\n        <div class=\"flex items-center p-4 space-x-6 rounded-lg shadow-md bg-gray-50\">\r\n          <div class=\"flex items-center space-x-2\">\r\n            <label\r\n              for=\"bange-start-date\"\r\n              class=\"text-sm font-medium text-gray-700 text-[10px]\"\r\n              >Date de début:</label\r\n            >\r\n            <input\r\n              id=\"bange-start-date\"\r\n              v-model=\"bangeStartDate\"\r\n              type=\"date\"\r\n              class=\"p-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\"\r\n            />\r\n          </div>\r\n          <div class=\"flex items-center space-x-2\">\r\n            <label\r\n              for=\"bange-end-date\"\r\n              class=\"text-sm font-medium text-gray-700 text-[10px]\"\r\n              >Date de fin:</label\r\n            >\r\n            <input\r\n              id=\"bange-end-date\"\r\n              v-model=\"bangeEndDate\"\r\n              type=\"date\"\r\n              class=\"p-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\"\r\n            />\r\n          </div>\r\n          <button\r\n            @click=\"calculateAndDisplayBANGE\"\r\n            class=\"px-4 py-2 text-[10px] text-white bg-blue-500 rounded shadow-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\r\n          >\r\n            Calculer le Bench\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Modal pour afficher les résultats du BANGE -->\r\n      <div\r\n        v-if=\"isBANGEModalOpen\"\r\n        class=\"fixed inset-0 z-[70] flex items-center justify-center bg-black bg-opacity-50\"\r\n      >\r\n        <div class=\"w-full max-w-md p-6 bg-white rounded-lg\">\r\n          <h2 class=\"mb-4 text-xl font-bold\">Résultats du Bench</h2>\r\n          <div class=\"overflow-y-auto max-h-60\">\r\n            <table class=\"w-full\">\r\n              <thead>\r\n                <tr>\r\n                  <th class=\"px-4 py-2 font-semibold text-left bg-gray-100\">Periode</th>\r\n                  <th class=\"px-4 py-2 font-semibold text-right bg-gray-100\">Etp</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"result in bangeResults\" :key=\"result.date\" class=\"border-b\">\r\n                  <td class=\"px-4 py-2\">{{ result.date }}</td>\r\n                  <td class=\"px-4 py-2 text-right\">{{ result.bange }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <button\r\n            @click=\"closeBANGEModal\"\r\n            class=\"px-4 py-2 mt-4 text-white bg-blue-500 rounded hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\r\n          >\r\n            Fermer\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Formulaire de recherche -->\r\n      <div class=\"mb-4\">\r\n        <h3 class=\"mb-0 text-lg font-semibold text-gray-800 text-[10px]\">Recherche TNF</h3>\r\n        <div class=\"flex items-center p-4 space-x-6 rounded-lg shadow-md bg-gray-50\">\r\n          <div class=\"flex items-center space-x-2\">\r\n            <label for=\"start-search\" class=\"text-sm font-medium text-gray-700 text-[10px]\"\r\n              >Date de début:</label\r\n            >\r\n            <input\r\n              id=\"start-search\"\r\n              v-model=\"searchStartDate\"\r\n              type=\"date\"\r\n              class=\"p-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\"\r\n            />\r\n          </div>\r\n          <div class=\"flex items-center space-x-2\">\r\n            <label for=\"end-search\" class=\"text-sm font-medium text-gray-700 text-[10px]\"\r\n              >Date de fin:</label\r\n            >\r\n            <input\r\n              id=\"end-search\"\r\n              v-model=\"searchEndDate\"\r\n              type=\"date\"\r\n              class=\"p-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\"\r\n            />\r\n          </div>\r\n          <button\r\n            @click=\"clearDateFilters\"\r\n            class=\"px-4 py-2 text-[10px] text-white bg-red-500 rounded shadow-lg hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50\"\r\n          >\r\n            Effacer les filtres\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex justify-center p-2 space-x-4 \">\r\n     \r\n<!-- Modal pour sélectionner la période et le format d'exportation -->\r\n    <div v-if=\"isExportModalOpen\" class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-[70]\">\r\n      <div class=\"w-full max-w-md p-6 bg-white rounded-lg shadow-lg\">\r\n        <h2 class=\"mb-4 text-xl font-bold\">Exporter les données</h2>\r\n        <div class=\"mb-4\">\r\n          <label for=\"start-date\" class=\"block text-sm font-medium text-gray-700\">Date de début :</label>\r\n          <input type=\"date\" v-model=\"startDate\" id=\"start-date\" class=\"p-2 mt-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300\" />\r\n        </div>\r\n        <div class=\"mb-4\">\r\n          <label for=\"end-date\" class=\"block text-sm font-medium text-gray-700\">Date de fin :</label>\r\n          <input type=\"date\" v-model=\"endDate\" id=\"end-date\" class=\"p-2 mt-1 border border-gray-300 rounded-md focus:ring focus:ring-blue-300\" />\r\n        </div>\r\n        <div class=\"flex justify-between gap-2\">\r\n          <button @click=\"exportToXLSX\" class=\"px-4 py-2 text-xs text-white bg-green-500 rounded\">Exporter en XLSX</button>\r\n          <button @click=\"exportToPDF\" class=\"px-4 py-2 text-xs text-white bg-blue-500 rounded\">Exporter en PDF</button>\r\n          <button @click=\"closeExportModal\" class=\"px-4 py-2 text-xs text-white bg-red-500 rounded\">Fermer</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Legend Container -->\r\n    <div class=\"pt-2\">\r\n      <h4 class=\"mb-2 font-bold\">Statistiques par Couleur</h4>\r\n      <div class=\"flex flex-wrap gap-2\">\r\n        <div v-for=\"(stat, color) in statisticsByColor\" :key=\"color\" class=\"flex items-center p-2 space-x-2 bg-white rounded shadow-md\">\r\n          <div class=\"flex items-center justify-center h-4 p-1\" :class=\"stat.class\">\r\n            <small class=\"text-[8px] text-white\">{{ stat.count }} j</small>\r\n          </div>\r\n          <span class=\"text-[8px]\">{{ stat.name }}</span>\r\n          <span class=\"text-[8px]\">{{ stat.color }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    </div>\r\n    <div class=\"flex justify-between p-3 mt-1 bg-blue-500 rounded-t-md\">\r\n      <div class=\"flex items-center justify-\">\r\n        <div>\r\n          <button\r\n            @click=\"prevPeriod\"\r\n            class=\"px-4 py-2 text-white bg-blue-500 rounded shadow-lg text-[10px]\"\r\n          >\r\n            Précédent\r\n          </button>\r\n          <button\r\n            @click=\"resetToToday\"\r\n            class=\"px-4 py-2 ml-4 text-white bg-green-500 rounded shadow-lg text-[10px]\"\r\n          >\r\n            Mois en cours\r\n          </button>\r\n          <button\r\n            @click=\"nextPeriod\"\r\n            class=\"px-4 py-2 ml-4 text-white bg-blue-500 rounded shadow-lg text-[10px]\"\r\n          >\r\n            Suivant\r\n          </button>\r\n          <input\r\n            id=\"client-search\"\r\n            v-model=\"clientSearch\"\r\n            type=\"text\"\r\n            class=\"px-4 py-2 ml-4 border border-gray-300 rounded-md focus:ring focus:ring-blue-300 text-[10px]\"\r\n            placeholder=\"Search with client name's\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h2 class=\"text-2xl font-bold text-white\">{{ displayPeriod }}</h2>\r\n      </div>\r\n      <div class=\"flex\">\r\n        <button\r\n          @click=\"viewMode = 'month'\"\r\n          :class=\"{ 'bg-white text-black': viewMode === 'month' }\"\r\n          class=\"px-4 py-2 transition-colors duration-200 rounded shadow-lg text-[10px]\"\r\n        >\r\n          Mois\r\n        </button>\r\n        <button\r\n          @click=\"viewMode = 'year'\"\r\n          :class=\"{ 'bg-white text-black': viewMode === 'year' }\"\r\n          class=\"px-4 py-2 ml-2 transition-colors duration-200 rounded shadow-lg text-[10px]\"\r\n        >\r\n          Année\r\n        </button>\r\n        \r\n        <select\r\n          v-model=\"selectedPays\"\r\n          class=\"px-4 py-2 ml-2 transition-colors duration-200 rounded shadow-lg text-[10px]\"\r\n        >\r\n          <option value=\"\">Tous les pays</option>\r\n          <option v-for=\"agence in agences\" :key=\"agence.id\" :value=\"agence.pays\">\r\n            {{ agence.pays }}\r\n          </option>\r\n        </select>\r\n         <button @click=\"openExportModal\" class=\"px-4 py-2 ml-2 text-xs text-black rounded bg-gray-50\">Exporter</button>\r\n      </div>\r\n    </div>\r\n    <!-- Vue Mensuelle -->\r\n    <div v-if=\"viewMode === 'month'\" class=\"overflow-x-auto overflow-y-scroll md:h-[400px]\">\r\n      <table class=\"min-w-full border border-gray-300 table-auto\">\r\n        <thead class=\"sticky z-50 text-white bg-blue-500\">\r\n          <tr class=\"sticky z-50 bg-blue-500\">\r\n            <th class=\"sticky left-0 w-1/4 p-2 text-[9px] z-[70] bg-blue-500 rounded-l-lg\">\r\n              Ressources\r\n            </th>\r\n            <th\r\n              v-for=\"(day, index) in periodDays\"\r\n              :key=\"index\"\r\n              class=\"sticky top-0 p-2 border-b bg-blue-500 z-50 border-gray-300 w-[50px] text-[9px]\"\r\n            >\r\n              {{ getDayLabel(index, day) }}\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <!-- Resource rows -->\r\n          <tr v-for=\"resource in filteredResources\" :key=\"resource.name\">\r\n            <td class=\"sticky left-0 p-1 bg-white text-[10px] z-50\">\r\n              {{ resource.name }}\r\n            </td>\r\n            <td\r\n              v-for=\"(day, index) in periodDays\"\r\n              :key=\"index\"\r\n              class=\"p-1 border-b border-gray-300 w-[50px] text-[9px]\"\r\n              :class=\"{\r\n                'bg-red-400': isJourFerie(day),\r\n                'bg-gray-300': isWeekend(day).isWeekend,\r\n              }\"\r\n              @click=\"openEventModal(day, resource.name)\"\r\n            >\r\n              <!-- Holiday Display -->\r\n              <div v-if=\"isJourFerie(day)\" class=\"text-xs font-bold text-white\">\r\n                <div class=\"w-[50px] h-6 p-1 text-[6px] text-white bg-red-400 rounded\">\r\n                  {{ getJourFerieName(day, monthIndex) }}\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Weekend Display -->\r\n              <div\r\n                v-else-if=\"isWeekend(day).isWeekend\"\r\n                class=\"w-full h-full p-1 text-[9px] text-black bg-gray-300 rounded\"\r\n              >\r\n                <template v-if=\"filteredEventsByDay[resource.name][day].length\">\r\n                  <div\r\n                    v-for=\"event in filteredEventsByDay[resource.name][day]\"\r\n                    :key=\"event.id\"\r\n                    class=\"relative w-[50px] h-6 p-1 text-[9px] text-center rounded cursor-pointer\"\r\n                    :class=\"getClientColor(event.color)\"\r\n                    @mouseover=\"showComment(event, day)\"\r\n                    @mouseleave=\"hideComment\"\r\n                  >\r\n                    {{ event.clientAbbreviation }}\r\n                  </div>\r\n                </template>\r\n                <template v-else><p class=\"text-[9px]\">weekend</p></template>\r\n              </div>\r\n\r\n              <!-- Normal Day Display (not holiday, not weekend) -->\r\n              <div v-else>\r\n                <template v-if=\"filteredEventsByDay[resource.name][day].length\">\r\n                  <div\r\n                    v-for=\"event in filteredEventsByDay[resource.name][day]\"\r\n                    :key=\"event.id\"\r\n                    class=\"relative w-[50px] h-6 p-1 text-[9px] text-center rounded cursor-pointer\"\r\n                    :class=\"getClientColor(event.color)\"\r\n                    @mouseover=\"showComment(event, day)\"\r\n                    @mouseleave=\"hideComment\"\r\n                  >\r\n                    {{ event.clientAbbreviation }}\r\n                    <div\r\n                      v-if=\"hoveredEvent === event && hoveredDay === day\"\r\n                      class=\"absolute z-10 p-2 text-sm text-white whitespace-normal bg-gray-800 rounded shadow-lg\"\r\n                      style=\"\r\n                        width: 200px;\r\n                        bottom: 100%;\r\n                        left: 50%;\r\n                        transform: translateX(-50%);\r\n                      \"\r\n                    >\r\n                      {{ event.name }}\r\n                    </div>\r\n                  </div>\r\n                </template>\r\n                <!-- TNF for normal days without events -->\r\n                <template v-else>\r\n                  <div\r\n                    v-if=\"!isJourFerie(day)\"\r\n                    class=\"h-6 p-1 text-[9px] text-white bg-green-400 rounded cursor-pointer hover:bg-green-600\"\r\n                    :class=\"{\r\n                      'border-2 border-blue-600': isHighlightedTNF(resource.name, day),\r\n                    }\"\r\n                  >\r\n                    TNF\r\n                  </div>\r\n                </template>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- Vue Annuelle -->\r\n<div v-else-if=\"viewMode === 'year'\" class=\"overflow-x-auto overflow-y-scroll md:h-[400px]\">\r\n  <div class=\"relative overflow-x-auto\">\r\n    <table class=\"min-w-full border border-gray-900 table-auto\">\r\n      <thead class=\"sticky top-0 z-10 text-white bg-blue-500\">\r\n        <tr>\r\n          <th class=\"sticky left-0 z-50 w-1/4 p-1 bg-blue-500 rounded-l-lg\">Ressources</th>\r\n          <th\r\n            v-for=\"month in monthsOfYear\"\r\n            :key=\"month\"\r\n            class=\"p-1 border border-gray-300\"\r\n          >\r\n            <div>{{ month }}</div>\r\n            <div class=\"flex row-auto gap-1\">\r\n              <div\r\n                v-for=\"day in getDaysInMonth(monthsOfYear.indexOf(month))\"\r\n                :key=\"`${month}-${day}`\"\r\n                class=\"text-[9px] p-1 w-[50px] mr-[8px]\"\r\n              >\r\n                {{\r\n                  getDayAbbreviation(\r\n                    new Date(currentYear, monthsOfYear.indexOf(month), day)\r\n                  )\r\n                }}\r\n                {{ String(day).padStart(2, \"0\") }}\r\n              </div>\r\n            </div>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody class=\"overflow-x-auto\">\r\n        <!-- Bench Row pour la vue annuelle -->\r\n        <tr class=\"\">\r\n          <td class=\"sticky left-0 p-2 bg-white text-[9px] font-bold gap-2 \">Bench</td>\r\n          <td\r\n            v-for=\"(month, monthIndex) in getDaysInYear()\"\r\n            :key=\"monthIndex\"\r\n            class=\"p-1 border border-gray-300 text-[9px]\"\r\n          >\r\n            <div class=\"flex gap-[2px]\">\r\n              <div\r\n                v-for=\"day in month.days\"\r\n                :key=\"day\"\r\n                class=\"mx-[5px] text-[9px] text-center bg-transparent w-[50px] h-6 gap-3 rounded-sm\"\r\n              >\r\n                <!-- Ajout de la condition pour les jours fériés -->\r\n                <div v-if=\"isJourFerie(day, monthIndex)\">\r\n                  <div\r\n                    class=\"w-[50px] h-6 p-1 text-[1px] text-white bg-transparent rounded\"\r\n                  >\r\n                    {{ getJourFerieName(day, monthIndex) }}\r\n                  </div>\r\n                </div>\r\n                <div v-else-if=\"isWeekend(day, monthIndex).isWeekend\">\r\n                  <div\r\n                    class=\"w-[50px] h-6 p-1 text-[1px] text-center text-white bg-transparent rounded\"\r\n                  >\r\n                    weekend\r\n                  </div>\r\n                </div>\r\n                <div v-else>\r\n                  <!-- Afficher le BANGE pour chaque mercredi en vérifiant directement le jour -->\r\n                  <div\r\n                    v-if=\"new Date(currentYear, monthIndex, day).getDay() === 3\"\r\n                    class=\"w-[50px] h-6 p-1 text-[9px] text-white bg-cyan-400 rounded cursor-pointer hover:bg-green-600\"\r\n                  >\r\n                    {{ getWeeklyBANGE(day, monthIndex).bange }}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr v-for=\"resource in filteredResources\" :key=\"resource.name\">\r\n          <td class=\"sticky left-0  p-1 bg-white border text-[9px]\">\r\n            {{ resource.name }}\r\n          </td>\r\n          <td\r\n            v-for=\"(month, monthIndex) in getDaysInYear()\"\r\n            :key=\"monthIndex\"\r\n            class=\"p-1 border border-gray-300 text-[9px]\"\r\n          >\r\n            <div class=\"flex gap-1\">\r\n              <div\r\n                v-for=\"day in month.days\"\r\n                :key=\"day\"\r\n                class=\"p-1 text-[9px] text-center rounded-lg\"\r\n                @click=\"openEventModal(day, resource.name, monthIndex)\"\r\n              >\r\n                <!-- Ajout de la condition pour les jours fériés -->\r\n                <div v-if=\"isJourFerie(day, monthIndex)\">\r\n                  <div class=\"w-[50px] h-6 p-1 text-[6px] text-white bg-red-400 rounded\">\r\n                    {{ getJourFerieName(day, monthIndex) }}\r\n                  </div>\r\n                </div>\r\n                <div v-else-if=\"isWeekend(day, monthIndex).isWeekend\">\r\n                  <div\r\n                    class=\"w-[50px] h-6 p-1 text-[9px] text-center bg-gray-300 rounded\"\r\n                  >\r\n                    <template\r\n                      v-if=\"getEventsForMonth(resource.name, monthIndex, day).length\"\r\n                    >\r\n                      <div\r\n                        v-for=\"event in getEventsForMonth(resource.name, monthIndex, day)\"\r\n                        :key=\"event.id\"\r\n                        class=\"relative text-center rounded cursor-pointer w-[50px] h-6 p-1 text-[9px]\"\r\n                        :class=\"getClientColor(event.color)\"\r\n                        @mouseover=\"showComment(event, day)\"\r\n                        @mouseleave=\"hideComment\"\r\n                      >\r\n                        {{ event.clientAbbreviation }}\r\n                        <div\r\n                          v-if=\"hoveredEvent === event && hoveredDay === day\"\r\n                          class=\"absolute z-10 p-1 text-[9px] text-white whitespace-normal bg-gray-800 rounded shadow-lg\"\r\n                          style=\"\r\n                            width: 200px;\r\n                            bottom: 100%;\r\n                            left: 50%;\r\n                            transform: translateX(-50%);\r\n                          \"\r\n                        >\r\n                          {{ event.name }}\r\n                        </div>\r\n                      </div>\r\n                    </template>\r\n                    <template v-else>weekend</template>\r\n                  </div>\r\n                </div>\r\n                <div v-else>\r\n                  <template\r\n                    v-if=\"getEventsForMonth(resource.name, monthIndex, day).length\"\r\n                  >\r\n                    <div\r\n                      v-for=\"event in getEventsForMonth(resource.name, monthIndex, day)\"\r\n                      :key=\"event.id\"\r\n                      class=\"relative w-[50px] h-6 p-1 text-[9px] text-center rounded cursor-pointer\"\r\n                      :class=\"getClientColor(event.color)\"\r\n                      @mouseover=\"showComment(event, day)\"\r\n                      @mouseleave=\"hideComment\"\r\n                    >\r\n                      {{ event.clientAbbreviation }}\r\n                      <div\r\n                        v-if=\"hoveredEvent === event && hoveredDay === day\"\r\n                        class=\"absolute z-10 w-[50px] h-6 p-1 text-[9px] text-white whitespace-normal bg-gray-800 rounded shadow-lg\"\r\n                        style=\"\r\n                          width: 200px;\r\n                          bottom: 100%;\r\n                          left: 50%;\r\n                          transform: translateX(-50%);\r\n                        \"\r\n                      >\r\n                        {{ event.name }}\r\n                      </div>\r\n                    </div>\r\n                  </template>\r\n                  <template v-else>\r\n                    <div\r\n                      v-if=\"!isJourFerie(day, monthIndex)\"\r\n                      class=\"w-[50px] h-6 p-1 text-[9px] text-white bg-green-400 rounded cursor-pointer hover:bg-green-600\"\r\n                      :class=\"{\r\n                        'border-2 border-blue-600': isHighlightedTNF(\r\n                          resource.name,\r\n                          day,\r\n                          monthIndex\r\n                        ),\r\n                      }\"\r\n                    >\r\n                      TNF\r\n                    </div>\r\n                  </template>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n\r\n    <!-- Modal pour ajouter/modifier un événement -->\r\n    <div\r\n      v-if=\"isEventModalOpen\"\r\n      class=\"fixed inset-0 z-50 flex items-center justify-center p-6 bg-black bg-opacity-50 backdrop-blur-sm\"\r\n      @click.self=\"closeEventModal\"\r\n    >\r\n      <div\r\n        class=\"w-full max-w-2xl p-6 transition-transform duration-300 ease-in-out transform scale-75 bg-white rounded-lg shadow-lg\"\r\n      >\r\n        <h3 class=\"mb-4 text-lg font-semibold text-gray-800\">\r\n          Ressource : {{ selectedEvent.resourceName }}\r\n        </h3>\r\n\r\n        <div class=\"mt-4\">\r\n          <label for=\"client\" class=\"block text-sm font-medium text-gray-700\"\r\n            >Client:</label\r\n          >\r\n          <div>\r\n            <!-- Barre de recherche pour filtrer les clients -->\r\n            <input\r\n              type=\"text\"\r\n              v-model=\"clientSearch\"\r\n              placeholder=\"Rechercher un client\"\r\n              class=\"w-full p-2 mb-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\"\r\n            />\r\n\r\n            <!-- Sélecteur de clients -->\r\n            <select\r\n              id=\"client\"\r\n              v-model=\"selectedClientId\"\r\n              @change=\"updateSelectedClient\"\r\n              class=\"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\"\r\n            >\r\n              <option value=\"\">Sélectionnez un client</option>\r\n              <option v-for=\"client in filteredClients\" :key=\"client.id\" :value=\"client.id\">\r\n                {{ client.nom }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mt-4\">\r\n          <label for=\"comment\" class=\"block text-sm font-medium text-gray-700\"\r\n            >Commentaire:</label\r\n          >\r\n          <textarea\r\n            id=\"comment\"\r\n            v-model=\"comment\"\r\n            class=\"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\"\r\n            placeholder=\"Entrez un commentaire\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div class=\"flex justify-between mt-4\">\r\n          <div class=\"w-full pr-2\">\r\n            <label for=\"start-date\" class=\"block text-sm font-medium text-gray-700\"\r\n              >Date de début:</label\r\n            >\r\n            <input\r\n              id=\"start-date\"\r\n              type=\"date\"\r\n              v-model=\"startDate\"\r\n              class=\"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\"\r\n            />\r\n          </div>\r\n          <div class=\"w-full pl-2\">\r\n            <label for=\"end-date\" class=\"block text-sm font-medium text-gray-700\"\r\n              >Date de fin:</label\r\n            >\r\n            <input\r\n              id=\"end-date\"\r\n              type=\"date\"\r\n              v-model=\"endDate\"\r\n              class=\"w-full p-3 transition duration-150 ease-in-out border border-gray-300 rounded-md focus:ring focus:ring-blue-500 focus:border-blue-500\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex space-x-4\">\r\n          <button\r\n            v-if=\"selectedEvent.id\"\r\n            @click=\"updateEvent\"\r\n            class=\"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-green-500 rounded-md hover:bg-green-600 focus:outline-none focus:ring focus:ring-green-300\"\r\n          >\r\n            Mettre à jour l'intervention\r\n          </button>\r\n\r\n          <button\r\n            v-else\r\n            @click=\"saveEvent\"\r\n            class=\"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-blue-500 rounded-md hover:bg-blue-600 focus:outline-none focus:ring focus:ring-blue-300\"\r\n          >\r\n            Enregistrer l'intervention\r\n          </button>\r\n\r\n          <!-- Button to delete the event -->\r\n          <button\r\n            v-if=\"selectedEvent.id\"\r\n            @click=\"deleteEvent\"\r\n            class=\"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-red-500 rounded-md hover:bg-red-600 focus:outline-none focus:ring focus:ring-red-300\"\r\n          >\r\n            Supprimer l'intervention\r\n          </button>\r\n\r\n          <button\r\n            @click=\"closeEventModal\"\r\n            class=\"w-full px-4 py-3 mt-6 text-white transition duration-150 ease-in-out bg-gray-500 rounded-md hover:bg-gray-600 focus:outline-none focus:ring focus:ring-gray-300\"\r\n          >\r\n            Fermer\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { format } from \"date-fns\";\r\nimport axios from \"axios\";\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport ExcelJS from 'exceljs';\r\nimport { API_URL } from '@/config'; // Importer API_URL\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      colorMapping: {\r\n      1: { name: 'Mission confirmée', class: 'bg-orange-400' },\r\n      2: { name: 'Prévision de Mission', class: 'bg-yellow-400' },\r\n      3: { name: 'Voyage', class: 'bg-sky-400' },\r\n      4: { name: 'Férié/Congé', class: 'bg-blue-300' },\r\n      5: { name: 'Formation', class: 'bg-blue-500' },\r\n      6: { name: 'Récupération', class: 'bg-red-200' },\r\n      7: { name: 'Congé maladie', class: 'bg-purple-600' },\r\n      8: { name: 'Université', class: 'bg-sky-600' },\r\n      9: { name: 'Avant Vente', class: 'bg-teal-300' },\r\n      10: { name: 'Prévision de Congé', class: 'bg-orange-600' }, // Nouvelle couleur pour Prévision de Mission\r\n      11: { name: 'Prévision de Récupération', class: 'bg-indigo-400' }, // Nouvelle couleur pour Prévision de Récupération\r\n      12: { name: 'Prévision de Formation', class: 'bg-pink-400' }, // Nouvelle couleur pour Prévision de Formation\r\n      default: { name: 'Inconnu', class: 'bg-blue-400' }\r\n    },\r\n      isExportModalOpen: false,\r\n      currentYear: new Date().getFullYear(),\r\n      currentMonth: new Date().getMonth(),\r\n      monthsOfYear: [\r\n        \"Janvier\",\r\n        \"Février\",\r\n        \"Mars\",\r\n        \"Avril\",\r\n        \"Mai\",\r\n        \"Juin\",\r\n        \"Juillet\",\r\n        \"Août\",\r\n        \"Septembre\",\r\n        \"Octobre\",\r\n        \"Novembre\",\r\n        \"Décembre\",\r\n      ],\r\n      currentDay: new Date().getDate(),\r\n      viewMode: \"year\", //  month or year\r\n      resources: [],\r\n      events: [],\r\n      selectedClientId: \"\",\r\n      clientSearch: \"\", // Barre de recherche pour le filtre\r\n      clients: [], // Assurez-vous que `clients` contient les données de vos clients\r\n      joursFeries: [],\r\n      agences: [],\r\n      bangeResults: [],\r\n      isBANGEModalOpen: false,\r\n      bangeStartDate: \"\",\r\n      bangeEndDate: \"\",\r\n      searchStartDate: \"\",\r\n      searchEndDate: \"\",\r\n      tnfSearchResults: [],\r\n      isEventModalOpen: false,\r\n      selectedEvent: {},\r\n      hoveredEvent: null,\r\n      hoveredDay: null,\r\n      selectedClientColor: \"\",\r\n      comment: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      user_id: null,\r\n      selectedPays: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    filteredClients() {\r\n      return this.clients.filter((client) =>\r\n        client.nom.toLowerCase().includes(this.clientSearch.toLowerCase())\r\n      );\r\n    },\r\n    displayPeriod() {\r\n      if (this.viewMode === \"month\") {\r\n        const firstDayOfMonth = new Date(this.currentYear, this.currentMonth, 1);\r\n        return format(firstDayOfMonth, \"MMMM yyyy\");\r\n      } else if (this.viewMode === \"year\") {\r\n        const firstDayOfYear = new Date(this.currentYear, 0, 1);\r\n        return format(firstDayOfYear, \"yyyy\");\r\n      } else {\r\n        return `${this.currentYear}`;\r\n      }\r\n    },\r\n    formattedJoursFeries() {\r\n      // Format the public holidays to only include the date in 'yyyy-MM-dd' format\r\n      return this.joursFeries.map((jourFerie) => ({\r\n        date: format(new Date(jourFerie.date_ferie), \"yyyy-MM-dd\"), // Keep the date format\r\n        name: jourFerie.nom_ferie,\r\n      }));\r\n    },\r\n    periodDays() {\r\n      return this.viewMode === \"month\" ? this.getDaysInMonth() : this.getDaysInYear();\r\n    },\r\n    filteredResources() {\r\n      let filtered = this.resources;\r\n\r\n      // Filter by client name\r\n      if (this.clientSearch) {\r\n        // Find resource IDs that have interventions matching the client name\r\n        const matchingResourceIds = new Set(\r\n          this.events\r\n            .filter((event) =>\r\n              event.clientName.toLowerCase().includes(this.clientSearch.toLowerCase())\r\n            )\r\n            .map((event) => event.resourceId)\r\n        );\r\n\r\n        // Filter resources based on matching IDs\r\n        filtered = this.resources.filter((resource) =>\r\n          matchingResourceIds.has(resource.id)\r\n        );\r\n      }\r\n\r\n      // Filter by date range\r\n      if (this.searchStartDate && this.searchEndDate) {\r\n        const startDate = new Date(this.searchStartDate);\r\n        const endDate = new Date(this.searchEndDate);\r\n        filtered = filtered.filter((resource) => {\r\n          const tnfDays = this.getTNFDaysInPeriod(resource, startDate, endDate);\r\n          return tnfDays.length > 0;\r\n        });\r\n      }\r\n\r\n      // Filter by selected agency\r\n      if (this.selectedPays) {\r\n        filtered = filtered.filter(\r\n          (resource) => resource.agence && resource.agence.pays === this.selectedPays\r\n        );\r\n      }\r\n\r\n      return filtered;\r\n    },\r\n    // Nouvelle propriété calculée pour récupérer les événements par jour et ressource\r\n    filteredEventsByDay() {\r\n      const filteredEvents = {};\r\n\r\n      this.filteredResources.forEach((resource) => {\r\n        filteredEvents[resource.name] = {};\r\n\r\n        const days =\r\n          this.viewMode === \"month\"\r\n            ? this.getDaysInMonth()\r\n            : this.getDaysInYear().flatMap((month) => month.days);\r\n\r\n        days.forEach((day) => {\r\n          const dayDate = new Date(\r\n            this.currentYear,\r\n            this.viewMode === \"month\" ? this.currentMonth : 0,\r\n            typeof day === \"number\" ? day : day.day\r\n          );\r\n\r\n          filteredEvents[resource.name][day] = this.events.filter(\r\n            (event) =>\r\n              event.resource === resource.name && this.isEventOnDay(event, dayDate)\r\n          );\r\n        });\r\n      });\r\n\r\n      return filteredEvents;\r\n    },\r\n   statisticsByColor() {\r\n      return this.calculateStatisticsByColor();\r\n    },\r\n  },\r\n  watch: {\r\n    searchStartDate() {\r\n      this.updateView();\r\n    },\r\n    searchEndDate() {\r\n      this.updateView();\r\n    },\r\n    clientSearch() {\r\n      this.updateView();\r\n    },\r\n    selectedPays() {\r\n      this.fetchJoursFeries();\r\n      this.fetchResourcesAndEvents();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchResourcesAndEvents();\r\n    this.fetchClients();\r\n    this.fetchJoursFeries();\r\n    this.fetchAgences();\r\n  },\r\n  methods: {\r\n    \r\n    openExportModal() {\r\n      this.isExportModalOpen = true;\r\n    },\r\n    closeExportModal() {\r\n      this.isExportModalOpen = false;\r\n      this.endDate = \"\";\r\n      this.startDate = \"\";\r\n    },\r\n    exportToXLSX() {\r\n      const workbook = new ExcelJS.Workbook();\r\n      const worksheet = workbook.addWorksheet('Interventions');\r\n\r\n      // Définir les colonnes\r\n      worksheet.columns = [\r\n        { header: 'Numero', key: 'Numero', width: 10 },\r\n        { header: 'Ressource', key: 'Ressource', width: 20 },\r\n        { header: 'Date de debut', key: 'Date_de_debut', width: 20 },\r\n        { header: 'Date de fin', key: 'Date_de_fin', width: 20 },\r\n        { header: 'Client', key: 'Client', width: 20 },\r\n        { header: 'Commentaire', key: 'Commentaire', width: 30 },\r\n        { header: 'Abbreviation', key: 'Abbreviation', width: 15 }\r\n      ];\r\n\r\n      // Vérifier si les dates sont sélectionnées\r\n      let filteredEvents = this.events;\r\n      if (this.startDate && this.endDate) {\r\n        filteredEvents = this.events.filter(event => {\r\n          const eventStartDate = new Date(event.startDate);\r\n          const eventEndDate = new Date(event.endDate);\r\n          const start = new Date(this.startDate);\r\n          const end = new Date(this.endDate);\r\n          return eventStartDate >= start && eventEndDate <= end;\r\n        });\r\n      }\r\n\r\n      // Ajouter les données\r\n      filteredEvents.forEach((event, index) => {\r\n        worksheet.addRow({\r\n          Numero: index + 1,\r\n          Ressource: event.resource,\r\n          Date_de_debut: event.startDate,\r\n          Date_de_fin: event.endDate,\r\n          Client: event.clientName,\r\n          Commentaire: event.name,\r\n          Abbreviation: event.clientAbbreviation\r\n        });\r\n      });\r\n\r\n      // Styliser l'entête avec un gradient violet et rose\r\n      const headerRow = worksheet.getRow(1);\r\n      headerRow.eachCell((cell) => {\r\n        cell.fill = {\r\n          type: 'gradient',\r\n          gradient: 'angle',\r\n          degree: 0,\r\n          stops: [\r\n            { position: 0, color: { argb: 'FF69B4' } }, // Rose\r\n            { position: 1, color: { argb: '800080' } } // Violet\r\n          ]\r\n        };\r\n        cell.font = { color: { argb: 'FFFFFF' }, bold: true };\r\n        cell.alignment = { horizontal: 'center', vertical: 'middle' };\r\n      });\r\n\r\n      // Obtenir la date actuelle\r\n      const currentDate = new Date().toLocaleDateString().replace(/\\//g, '-');\r\n\r\n      // Enregistrer le fichier avec la date d'exportation dans le nom\r\n      workbook.xlsx.writeBuffer().then((data) => {\r\n        const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n        const link = document.createElement('a');\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = `Staffings_${currentDate}.xlsx`;\r\n        link.click();\r\n        URL.revokeObjectURL(link.href);\r\n      });\r\n\r\n      // Fermer le modal après l'exportation\r\n      this.closeExportModal();\r\n    },\r\n    exportToPDF() {\r\n      // Définir le format A4\r\n      const doc = new jsPDF({\r\n        orientation: 'portrait',\r\n        unit: 'mm',\r\n        format: [210, 297]\r\n      });\r\n\r\n      // Définir les colonnes et les données\r\n      const columns = [\r\n        { header: 'Numero', dataKey: 'Numero' },\r\n        { header: 'Ressource', dataKey: 'Ressource' },\r\n        { header: 'Date de debut', dataKey: 'Date_de_debut' },\r\n        { header: 'Date de fin', dataKey: 'Date_de_fin' },\r\n        { header: 'Client', dataKey: 'Client' },\r\n        { header: 'Commentaire', dataKey: 'Commentaire' },\r\n        { header: 'Abbreviation', dataKey: 'Abbreviation' }\r\n      ];\r\n\r\n      // Vérifier si les dates sont sélectionnées\r\n      let filteredEvents = this.events;\r\n      if (this.startDate && this.endDate) {\r\n        filteredEvents = this.events.filter(event => {\r\n          const eventStartDate = new Date(event.startDate);\r\n          const eventEndDate = new Date(event.endDate);\r\n          const start = new Date(this.startDate);\r\n          const end = new Date(this.endDate);\r\n          return eventStartDate >= start && eventEndDate <= end;\r\n        });\r\n      }\r\n\r\n      const data = filteredEvents.map((event, index) => ({\r\n        Numero: index + 1,\r\n        Ressource: event.resource,\r\n        Date_de_debut: event.startDate,\r\n        Date_de_fin: event.endDate,\r\n        Client: event.clientName,\r\n        Commentaire: event.name,\r\n        Abbreviation: event.clientAbbreviation\r\n      }));\r\n\r\n      // Ajouter le tableau au PDF\r\n      doc.autoTable({\r\n        head: [columns.map(col => col.header)],\r\n        body: data.map(row => columns.map(col => row[col.dataKey])),\r\n        startY: 20,\r\n        styles: {\r\n          fillColor: [240, 240, 240], // Blanc légèrement gris\r\n          textColor: [0, 0, 0], // Noir\r\n          fontStyle: 'normal',\r\n          halign: 'center',\r\n          valign: 'middle',\r\n          cellPadding: 5\r\n        },\r\n        headStyles: {\r\n          fillColor: [128, 0, 128], // Violet\r\n          textColor: [255, 255, 255],\r\n          fontStyle: 'bold',\r\n          halign: 'center',\r\n          valign: 'middle',\r\n          cellPadding: 5\r\n        }\r\n      });\r\n\r\n      // Obtenir la date actuelle\r\n      const currentDate = new Date().toLocaleDateString().replace(/\\//g, '-');\r\n\r\n      // Enregistrer le PDF avec la date d'exportation dans le nom\r\n      doc.save(`Staffings_${currentDate}.pdf`);\r\n\r\n      // Fermer le modal après l'exportation\r\n      this.closeExportModal();\r\n    },\r\n    async fetchAgences() {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/agences`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        this.agences = response.data.agences;\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des agences:\", error);\r\n      }\r\n    },\r\n    filterInterventionsByClientName(clientName) {\r\n      const lowerCaseClientName = clientName.toLowerCase();\r\n      return this.events.filter((event) =>\r\n        event.clientName.toLowerCase().includes(lowerCaseClientName)\r\n      );\r\n    },\r\n    calculateBANGE(startDate, endDate) {\r\n      const start = new Date(startDate);\r\n      const end = new Date(endDate);\r\n      let totalBANGE = 0;\r\n      let currentWeekStart = new Date(start);\r\n\r\n      while (currentWeekStart <= end) {\r\n        const weekEnd = new Date(currentWeekStart);\r\n        weekEnd.setDate(currentWeekStart.getDate() + 6);\r\n\r\n        let totalTNF = 0;\r\n        let workingDays = 0;\r\n\r\n        for (\r\n          let d = new Date(currentWeekStart);\r\n          d <= weekEnd;\r\n          d.setDate(d.getDate() + 1)\r\n        ) {\r\n          const { isWeekend } = this.isWeekend(d.getDate(), d.getMonth());\r\n          const isHoliday = this.isJourFerie(d.getDate(), d.getMonth());\r\n\r\n          if (isHoliday) {\r\n            continue;\r\n          }\r\n\r\n          if (isWeekend) {\r\n            console.log(\"holiday\");\r\n          } else {\r\n            workingDays++;\r\n\r\n            this.resources.forEach((resource) => {\r\n              const events = this.getEventsForMonth(\r\n                resource.name,\r\n                d.getMonth(),\r\n                d.getDate()\r\n              );\r\n              if (!events || events.length === 0) {\r\n                totalTNF++;\r\n              }\r\n            });\r\n          }\r\n        }\r\n\r\n        const etp = workingDays > 0 ? Math.min(workingDays, 5) : 0; // Limite à 5 jours max\r\n        const weeklyBANGE = etp > 0 ? (totalTNF / etp).toFixed(1) : 0;\r\n        totalBANGE += parseFloat(weeklyBANGE);\r\n\r\n        currentWeekStart.setDate(currentWeekStart.getDate() + 7); // Passe à la semaine suivante\r\n      }\r\n\r\n      return totalBANGE.toFixed(1); // Retourne le total formaté\r\n    },\r\n    calculateAndDisplayBANGE() {\r\n      if (this.bangeStartDate && this.bangeEndDate) {\r\n        const bangeResult = this.calculateBANGE(this.bangeStartDate, this.bangeEndDate);\r\n        this.bangeResults.push({\r\n          date: `${this.bangeStartDate} - ${this.bangeEndDate}`,\r\n          bange: bangeResult,\r\n        });\r\n        this.isBANGEModalOpen = true;\r\n      } else {\r\n        alert(\"Veuillez sélectionner une date de début et une date de fin.\");\r\n      }\r\n    },\r\n    closeBANGEModal() {\r\n      this.isBANGEModalOpen = false;\r\n      this.bangeStartDate = \"\";\r\n      this.bangeEndDate = \"\";\r\n      this.bangeResults = [];\r\n    },\r\n    getDayAbbreviation(date) {\r\n      const days = [\"dim\", \"lun\", \"mar\", \"mer\", \"jeu\", \"ven\", \"sam\"];\r\n      return days[date.getDay()];\r\n    },\r\n    isWednesday(day, monthIndex) {\r\n      const date = new Date(this.currentYear, monthIndex, day);\r\n      return date.getDay() === 3; // 3 représente mercredi (0 = dimanche, 1 = lundi, etc.)\r\n    },\r\n    // Modifiez la méthode getWeeklyBANGE pour prendre en compte le monthIndex\r\n    getWeeklyBANGE(day, monthIndex = null) {\r\n      // Détermine la date de la semaine à partir du jour donné\r\n      const initialDate = new Date(\r\n        this.currentYear,\r\n        monthIndex !== null ? monthIndex : this.currentMonth,\r\n        day\r\n      );\r\n\r\n      // Ajuste le début de la semaine au lundi\r\n      const weekStart = new Date(initialDate);\r\n      const dayOfWeek = weekStart.getDay(); // 0 = Dimanche, 1 = Lundi, ..., 6 = Samedi\r\n      const offsetToMonday = dayOfWeek === 0 ? -6 : 1 - dayOfWeek; // Ajustement vers le lundi\r\n      weekStart.setDate(weekStart.getDate() + offsetToMonday);\r\n\r\n      // Fixe la fin de la semaine au vendredi (4 jours après lundi)\r\n      const weekEnd = new Date(weekStart);\r\n      weekEnd.setDate(weekStart.getDate() + 4);\r\n\r\n      let totalTNF = 0; // Compteur des jours sans événements\r\n      let workingDays = 0; // Compteur des jours ouvrables\r\n\r\n      // Parcourt chaque jour de la semaine (lundi à vendredi)\r\n      for (let d = new Date(weekStart); d <= weekEnd; d.setDate(d.getDate() + 1)) {\r\n        const isHoliday = this.isJourFerie(d.getDate(), d.getMonth()); // Vérifie si le jour est férié\r\n\r\n        if (isHoliday) {\r\n          // Ignore les jours fériés\r\n          continue;\r\n        }\r\n\r\n        // Tous les jours de lundi à vendredi sont considérés ouvrables ici\r\n        workingDays++; // Incrémente les jours ouvrables\r\n\r\n        // Vérifie les événements pour chaque ressource\r\n        this.resources.forEach((resource) => {\r\n          const events = this.getEventsForMonth(\r\n            resource.name,\r\n            d.getMonth(),\r\n            d.getDate()\r\n          );\r\n\r\n          if (!events || events.length === 0) {\r\n            // Si aucun événement trouvé, incrémente TNF\r\n            totalTNF++;\r\n          }\r\n        });\r\n      }\r\n\r\n      // Calcule l'ETP (équivalent temps plein), limité à un maximum de 5 jours par semaine\r\n      const etp = workingDays > 0 ? Math.min(workingDays, 5) : 0;\r\n\r\n      // Calcule le ratio BANGE pour la semaine\r\n      const bange = etp > 0 ? (totalTNF / etp).toFixed(1) : 0;\r\n\r\n      // Retourne le BANGE pour la semaine\r\n      return { bange };\r\n    },\r\n    // Nouvelle méthode pour calculer le BANGE mensuel\r\n    getMonthlyBANGE() {\r\n      const start = new Date(this.currentYear, this.currentMonth, 1);\r\n      const end = new Date(this.currentYear, this.currentMonth + 1, 0);\r\n      let totalBANGE = 0;\r\n      let currentWeekStart = new Date(start);\r\n\r\n      while (currentWeekStart <= end) {\r\n        const weekEnd = new Date(currentWeekStart);\r\n        weekEnd.setDate(currentWeekStart.getDate() + 6);\r\n\r\n        let totalTNF = 0;\r\n        let workingDays = 0;\r\n\r\n        for (\r\n          let d = new Date(currentWeekStart);\r\n          d <= weekEnd;\r\n          d.setDate(d.getDate() + 1)\r\n        ) {\r\n          const dayOfWeek = d.getDay();\r\n          if (\r\n            dayOfWeek !== 0 &&\r\n            dayOfWeek !== 6 &&\r\n            !this.isJourFerie(d.getDate(), d.getMonth())\r\n          ) {\r\n            workingDays++;\r\n            this.resources.forEach((resource) => {\r\n              const events = this.getEventsForMonth(\r\n                resource.name,\r\n                d.getMonth(),\r\n                d.getDate()\r\n              );\r\n              if (!events || events.length === 0) {\r\n                totalTNF++;\r\n              }\r\n            });\r\n          }\r\n        }\r\n\r\n        const etp = workingDays > 0 ? Math.min(workingDays, 5) : 0;\r\n        const weeklyBANGE = etp > 0 ? (totalTNF / etp).toFixed(1) : 0;\r\n        totalBANGE += parseFloat(weeklyBANGE);\r\n\r\n        currentWeekStart.setDate(currentWeekStart.getDate() + 7);\r\n      }\r\n\r\n      return totalBANGE.toFixed(1);\r\n    },\r\n    getJourFerieName(day, monthIndex = null) {\r\n      const date = new Date(\r\n        this.currentYear,\r\n        monthIndex !== null ? monthIndex : this.currentMonth,\r\n        typeof day === \"number\" ? day : new Date(day).getDate()\r\n      );\r\n      const formattedDate = format(date, \"yyyy-MM-dd\");\r\n      const jourFerie = this.formattedJoursFeries.find(\r\n        (jour) => jour.date === formattedDate\r\n      );\r\n      return jourFerie ? jourFerie.name : \"Férié\";\r\n    },\r\n    isJourFerie(day, monthIndex = null) {\r\n      const date = new Date(\r\n        this.currentYear,\r\n        monthIndex !== null ? monthIndex : this.currentMonth,\r\n        typeof day === \"number\" ? day : new Date(day).getDate()\r\n      );\r\n      const formattedDate = format(date, \"yyyy-MM-dd\");\r\n\r\n      const isHoliday = this.formattedJoursFeries.some(\r\n        (jour) => jour.date === formattedDate\r\n      );\r\n\r\n      return isHoliday;\r\n    },\r\n    calculateBusinessDays(startDate, endDate) {\r\n      let count = 0;\r\n      const currentDate = new Date(startDate);\r\n\r\n      while (currentDate <= endDate) {\r\n        const dayOfWeek = currentDate.getDay();\r\n        if (dayOfWeek !== 0 && dayOfWeek !== 6) {\r\n          count++;\r\n        }\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n      }\r\n\r\n      return count;\r\n    },\r\n    showComment(event, day) {\r\n      this.hoveredEvent = event;\r\n      this.hoveredDay = day;\r\n    },\r\n    hideComment() {\r\n      this.hoveredEvent = null;\r\n      this.hoveredDay = null;\r\n    },\r\n    // Remplacer la méthode searchTNF par updateView\r\n    updateView() {\r\n      if (this.searchStartDate && this.searchEndDate) {\r\n        const startDate = new Date(this.searchStartDate);\r\n        this.currentYear = startDate.getFullYear();\r\n        this.currentMonth = startDate.getMonth();\r\n      }\r\n    },\r\n    clearDateFilters() {\r\n      this.searchStartDate = \"\";\r\n      this.searchEndDate = \"\";\r\n      this.updateView();\r\n    },\r\n    getTNFDaysInPeriod(resource, startDate, endDate) {\r\n      const tnfDays = [];\r\n      const resourceEvents = this.events.filter(\r\n        (event) => event.resource === resource.name\r\n      );\r\n\r\n      for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\r\n        // Ignorer les week-ends et les jours fériés\r\n        if (\r\n          this.isWeekend(d.getDate(), d.getMonth()).isWeekend ||\r\n          this.isJourFerie(d.getDate(), d.getMonth())\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        const eventsOnDay = resourceEvents.filter((event) => this.isEventOnDay(event, d));\r\n        if (eventsOnDay.length === 0) {\r\n          tnfDays.push(new Date(d.getFullYear(), d.getMonth(), d.getDate()));\r\n        }\r\n      }\r\n\r\n      return tnfDays;\r\n    },\r\n    isHighlightedTNF(resourceName, day, monthIndex) {\r\n      if (!this.searchStartDate || !this.searchEndDate) return false;\r\n\r\n      const resource = this.resources.find((r) => r.name === resourceName);\r\n      if (!resource) return false;\r\n\r\n      const date = new Date(\r\n        this.currentYear,\r\n        monthIndex !== undefined ? monthIndex : this.currentMonth,\r\n        day\r\n      );\r\n      const startDate = new Date(this.searchStartDate);\r\n      const endDate = new Date(this.searchEndDate);\r\n\r\n      // Exclure le jour s'il est en dehors de la plage ou s'il est un jour férié\r\n      if (date < startDate || date > endDate || this.isJourFerie(day, monthIndex)) return false;\r\n\r\n      const tnfDays = this.getTNFDaysInPeriod(resource, startDate, endDate);\r\n\r\n      return tnfDays.some(\r\n        (tnfDay) =>\r\n          tnfDay.getDate() === date.getDate() &&\r\n          tnfDay.getMonth() === date.getMonth() &&\r\n          tnfDay.getFullYear() === date.getFullYear()\r\n      );\r\n    },\r\n    async fetchJoursFeries() {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/jours-feries`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        this.joursFeries = response.data.filter(\r\n          (jour) =>\r\n            this.selectedPays === \"\" ||\r\n            (jour.agence && jour.agence.pays === this.selectedPays)\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des jours fériés:\", error);\r\n      }\r\n    },\r\n    async fetchClients() {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/clients`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        this.clients = response.data;\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des clients:\", error);\r\n      }\r\n    },\r\n    updateSelectedClient() {\r\n      const selectedClient = this.clients.find(\r\n        (client) => client.id === this.selectedClientId\r\n      );\r\n      if (selectedClient) {\r\n        this.selectedClientColor = selectedClient.color;\r\n      }\r\n    },\r\n    async saveEvent() {\r\n      try {\r\n        await axios.post(\r\n          `${API_URL}/interventions`,\r\n          {\r\n            user_id: this.user_id,\r\n            client_id: this.selectedClientId, // Assurez-vous d'utiliser l'ID du client ici\r\n            commentaire: this.comment,\r\n            date_debut: this.startDate,\r\n            date_fin: this.endDate,\r\n            color: this.selectedClientColor,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        await this.fetchResourcesAndEvents();\r\n        this.closeEventModal();\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la sauvegarde de l'événement:\", error);\r\n        if (error.response) {\r\n          console.error(\"Détails de l'erreur:\", error.response.data);\r\n          // Affichez un message d'erreur utilisateur ici si nécessaire\r\n        }\r\n      }\r\n    },\r\n    async updateEvent() {\r\n      try {\r\n        await axios.post(\r\n          // Utilisez PUT pour les mises à jour\r\n          `${API_URL}/interventions/${this.selectedEvent.id}`,\r\n          {\r\n            user_id: this.user_id,\r\n            client_id: this.selectedClientId, // Assurez-vous d'utiliser l'ID du client ici\r\n            commentaire: this.comment,\r\n            date_debut: this.startDate,\r\n            date_fin: this.endDate,\r\n            color: this.selectedClientColor,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        await this.fetchResourcesAndEvents();\r\n        this.closeEventModal();\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la mise à jour de l'événement:\", error);\r\n        if (error.response) {\r\n          console.error(\"Détails de l'erreur:\", error.response.data);\r\n          // Affichez un message d'erreur utilisateur ici si nécessaire\r\n        }\r\n      }\r\n    },\r\n    selectClient(clientId) {\r\n      const client = this.clients.find((c) => c.id === clientId);\r\n      if (client) {\r\n        this.selectedClient = client.nom;\r\n        this.selectedClientId = client.id;\r\n        this.selectedClientColor = client.color; // Assurez-vous que cette ligne est présente\r\n      } else {\r\n        this.selectedClient = null;\r\n        this.selectedClientId = null;\r\n        this.selectedClientColor = \"\";\r\n      }\r\n    },\r\n    openEventModal(day, resourceName, monthIndex = null) {\r\n      let selectedDate;\r\n\r\n      if (monthIndex !== null) {\r\n        selectedDate = new Date(this.currentYear, monthIndex, day);\r\n      } else {\r\n        selectedDate = new Date(this.currentYear, this.currentMonth, day);\r\n      }\r\n\r\n      if (!isNaN(selectedDate.getTime())) {\r\n        const headerDate = format(selectedDate, \"yyyy-MM-dd\");\r\n        this.startDate = headerDate;\r\n\r\n        const resource = this.resources.find((r) => r.name === resourceName);\r\n\r\n        if (resource) {\r\n          this.selectedEvent = {\r\n            resourceName,\r\n            resourceId: resource.id,\r\n            day: this.startDate,\r\n          };\r\n          this.user_id = resource.id;\r\n\r\n          const events =\r\n            monthIndex !== null\r\n              ? this.getEventsForMonth(resourceName, monthIndex, day)\r\n              : this.filteredEventsByDay[resourceName][day];\r\n\r\n          const event = events && events[0];\r\n\r\n          if (event) {\r\n            const intervention = resource.interventions.find((i) => i.id === event.id);\r\n            if (intervention) {\r\n              this.selectedClientId = intervention.client_id; // L'ID du client\r\n              this.selectedClient = intervention.client_name; // Le nom du client\r\n              this.comment = intervention.commentaire;\r\n              this.startDate = format(new Date(intervention.date_debut), \"yyyy-MM-dd\");\r\n              this.endDate = format(new Date(intervention.date_fin), \"yyyy-MM-dd\");\r\n              (this.selectedClientColor = intervention.client_color),\r\n                (this.selectedEvent.id = intervention.id); // Marquer comme événement existant\r\n            }\r\n          } else {\r\n            // Réinitialiser pour un nouvel événement\r\n            this.selectedClient = null;\r\n            this.selectedClientId = null;\r\n            this.comment = \"\";\r\n            this.startDate = headerDate;\r\n            this.endDate = \"\";\r\n            this.selectedClientColor = \"\"; // Valeur par défaut\r\n            this.selectedEvent.id = null; // Marquer comme nouvel événement\r\n          }\r\n\r\n          this.isEventModalOpen = true; // Ouvrir le modal\r\n        }\r\n      }\r\n    },\r\n    async deleteEvent() {\r\n      try {\r\n        await axios.delete(`${API_URL}/interventions/${this.selectedEvent.id}`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n\r\n        await this.fetchResourcesAndEvents();\r\n        this.closeEventModal();\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la suppression de l'événement:\", error);\r\n        if (error.response) {\r\n          console.error(\"Détails de l'erreur:\", error.response.data);\r\n        }\r\n      }\r\n    },\r\n    closeEventModal() {\r\n      this.isEventModalOpen = false;\r\n      this.selectedEvent = {};\r\n      this.selectedClient = null;\r\n      this.comment = \"\";\r\n      this.startDate = \"\";\r\n      this.endDate = \"\";\r\n      this.selectedClientColor = \"\";\r\n    },\r\n    resetToToday() {\r\n      const today = new Date();\r\n      this.currentYear = today.getFullYear();\r\n      this.currentMonth = today.getMonth();\r\n      this.currentDay = today.getDate();\r\n    },\r\n    prevPeriod() {\r\n      if (this.viewMode === \"month\") {\r\n        this.currentMonth--;\r\n        if (this.currentMonth < 0) {\r\n          this.currentMonth = 11;\r\n          this.currentYear--;\r\n        }\r\n      } else {\r\n        this.currentYear--;\r\n      }\r\n      this.fetchJoursFeries(); // Ajoutez cette ligne\r\n    },\r\n    nextPeriod() {\r\n      if (this.viewMode === \"month\") {\r\n        this.currentMonth++;\r\n        if (this.currentMonth > 11) {\r\n          this.currentMonth = 0;\r\n          this.currentYear++;\r\n        }\r\n      } else {\r\n        this.currentYear++;\r\n      }\r\n      this.fetchJoursFeries(); // Ajoutez cette ligne\r\n    },\r\n    getDayLabel(index, day) {\r\n      const dayDate = new Date(this.currentYear, this.currentMonth, day);\r\n      return format(dayDate, \"EEE dd\");\r\n    },\r\n    getDaysInMonth(monthIndex = null) {\r\n      const month = monthIndex !== null ? monthIndex : this.currentMonth;\r\n      const daysInMonth = new Date(this.currentYear, month + 1, 0).getDate();\r\n      return Array.from({ length: daysInMonth }, (_, i) => i + 1);\r\n    },\r\n    getDaysInYear() {\r\n      const months = [];\r\n      for (let month = 0; month < 12; month++) {\r\n        const daysInMonth = new Date(this.currentYear, month + 1, 0).getDate();\r\n        const days = Array.from({ length: daysInMonth }, (_, i) => i + 1);\r\n        months.push({\r\n          month: format(new Date(this.currentYear, month), \"MMMM\"),\r\n          days,\r\n        });\r\n      }\r\n      return months;\r\n    },\r\n    isWeekend(day, month = this.currentMonth) {\r\n      const date = new Date(this.currentYear, month, day);\r\n      const dayOfWeek = date.getDay();\r\n      return { isWeekend: dayOfWeek === 0 || dayOfWeek === 6, dayOfWeek };\r\n    },\r\n    isEventOnDay(event, day) {\r\n      const eventStart = new Date(event.startDate);\r\n      const eventEnd = new Date(event.endDate);\r\n      const dayOfWeek = day.getDay();\r\n      const isWeekend = dayOfWeek === 0 || dayOfWeek === 6;\r\n\r\n      const dayDate = new Date(day.getFullYear(), day.getMonth(), day.getDate());\r\n      const eventStartDate = new Date(\r\n        eventStart.getFullYear(),\r\n        eventStart.getMonth(),\r\n        eventStart.getDate()\r\n      );\r\n      const eventEndDate = new Date(\r\n        eventEnd.getFullYear(),\r\n        eventEnd.getMonth(),\r\n        eventEnd.getDate()\r\n      );\r\n\r\n      if (isWeekend) {\r\n        // Pour les week-ends, afficher uniquement les événements qui commencent un week-end\r\n        return (\r\n          (eventStart.getDay() === 0 || eventStart.getDay() === 6) &&\r\n          dayDate >= eventStartDate &&\r\n          dayDate <= eventEndDate\r\n        );\r\n      } else {\r\n        // Pour les jours de semaine, afficher uniquement les événements qui commencent un jour de semaine\r\n        return (\r\n          eventStart.getDay() !== 0 &&\r\n          eventStart.getDay() !== 6 &&\r\n          dayDate >= eventStartDate &&\r\n          dayDate <= eventEndDate\r\n        );\r\n      }\r\n    },\r\n    getEventsForMonth(resourceName, monthIndex, day) {\r\n      const date = new Date(this.currentYear, monthIndex, day);\r\n      return this.events.filter(\r\n        (event) => event.resource === resourceName && this.isEventOnDay(event, date)\r\n      );\r\n    },\r\n    async fetchResourcesAndEvents() {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/interventions`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        const data = response.data;\r\n\r\n        this.resources = data.map((user) => ({\r\n          id: user.id,\r\n          name: user.name,\r\n          agence: user.agence,\r\n          interventions: user.interventions,\r\n        }));\r\n\r\n        this.events = data.flatMap((user) =>\r\n          user.interventions.map((intervention) => ({\r\n            id: intervention.id,\r\n            name: intervention.commentaire,\r\n            startDate: intervention.date_debut,\r\n            endDate: intervention.date_fin,\r\n            resource: user.name,\r\n            color: intervention.client_color,\r\n            resourceId: user.id,\r\n            clientAbbreviation: intervention.client_abbreviation,\r\n            clientName: intervention.client_name,\r\n          }))\r\n        );\r\n\r\n        // Filtrer les utilisateurs et les jours fériés en fonction de l'agence sélectionnée\r\n        if (this.selectedPays) {\r\n          this.resources = this.resources.filter(\r\n            (resource) => resource.agence && resource.agence.pays === this.selectedPays\r\n          );\r\n          this.joursFeries = this.joursFeries.filter(\r\n            (jour) => jour.agence && jour.agence.pays === this.selectedPays\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des données:\", error);\r\n      }\r\n    },\r\n \r\n getClientColor(color) {\r\n      if (!color || typeof color !== \"number\") {\r\n        return this.colorMapping.default.class; // Couleur par défaut si la couleur n'est pas définie ou invalide\r\n      }\r\n      return this.colorMapping[color] ? this.colorMapping[color].class : this.colorMapping.default.class;\r\n    },\r\n    getColorName(color) {\r\n      if (!color || typeof color !== \"number\") {\r\n        return this.colorMapping.default.name; // Nom par défaut si la couleur n'est pas définie ou invalide\r\n      }\r\n      return this.colorMapping[color] ? this.colorMapping[color].name : this.colorMapping.default.name;\r\n    },\r\ncalculateStatisticsByColor() {\r\n  const statistics = {};\r\n  let startDate, endDate;\r\n\r\n  if (this.viewMode === 'month') {\r\n    startDate = new Date(this.currentYear, this.currentMonth, 1);\r\n    endDate = new Date(this.currentYear, this.currentMonth + 1, 0);\r\n  } else if (this.viewMode === 'year') {\r\n    startDate = new Date(this.currentYear, 0, 1);\r\n    endDate = new Date(this.currentYear, 11, 31);\r\n  }\r\n\r\n  // Parcourez chaque jour de la période sélectionnée\r\n  for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\r\n    const dayOfWeek = d.getDay();\r\n    if (dayOfWeek !== 0 && dayOfWeek !== 6 && !this.isJourFerie(d.getDate(), d.getMonth())) {\r\n      this.events.forEach(event => {\r\n        const eventStartDate = new Date(event.startDate);\r\n        const eventEndDate = new Date(event.endDate);\r\n\r\n        // Vérifiez si l'événement est actif ce jour-là\r\n        if ((d >= eventStartDate && d <= eventEndDate) || (d.getDate() === eventStartDate.getDate() && d.getMonth() === eventStartDate.getMonth() && d.getFullYear() === eventStartDate.getFullYear())) {\r\n          const clientColor = event.color;\r\n          const clientName = this.getColorName(clientColor);\r\n          const clientClass = this.getClientColor(clientColor); // Obtenez la classe CSS de la couleur\r\n\r\n          if (!statistics[clientColor]) {\r\n            statistics[clientColor] = { name: clientName, count: 0, color: clientColor, class: clientClass };\r\n          }\r\n          statistics[clientColor].count++;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return statistics;\r\n},\r\n\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.relative {\r\n  position: relative;\r\n}\r\n\r\n.absolute {\r\n  position: absolute;\r\n}\r\n\r\n/* Ajoutez ces styles pour une meilleure apparence du commentaire */\r\n.absolute {\r\n  max-width: 200px;\r\n  word-wrap: break-word;\r\n  z-index: 100;\r\n}\r\n.tnf-event {\r\n  width: 20px; /* ajuster la largeur pour qu'elle corresponde à la journée */\r\n  max-width: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}