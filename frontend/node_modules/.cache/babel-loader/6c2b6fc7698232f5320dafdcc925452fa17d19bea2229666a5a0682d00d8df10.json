{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getWithCache } from '../../api.js';\nexport default {\n  name: 'LoginForm',\n  data() {\n    return {\n      email: '',\n      password: '',\n      errorMessage: null,\n      isLoading: false,\n      showPassword: false,\n      failedAttempts: 0,\n      isBlocked: false\n    };\n  },\n  mounted() {\n    this.verifyAuth();\n  },\n  methods: {\n    async login() {\n      this.isLoading = true;\n      try {\n        const response = await getWithCache('/login', {\n          method: 'POST',\n          data: {\n            email: this.email,\n            password: this.password\n          }\n        });\n        if (response.data.message === \"Veuillez changer votre mot de passe pour continuer.\") {\n          this.$router.push('/change-password');\n        } else {\n          localStorage.setItem('token', response.data.token);\n          localStorage.setItem('user', JSON.stringify({\n            type: response.data.type,\n            firstConnect: response.data.firstConnect\n          }));\n          this.redirectUser(response.data.type);\n        }\n      } catch (error) {\n        console.error('Erreur Axios :', error);\n        if (error.response && error.response.data) {\n          this.errorMessage = 'Échec de la connexion : ' + error.response.data.message;\n        } else if (error.request) {\n          this.errorMessage = \"Aucune réponse du serveur. Veuillez réessayer plus tard.\";\n        } else {\n          this.errorMessage = \"Une erreur s'est produite. Veuillez réessayer.\";\n        }\n        this.failedAttempts++;\n        if (this.failedAttempts >= 5) {\n          this.isBlocked = true;\n          this.errorMessage = \"Votre compte est bloqué en raison de trop nombreuses tentatives de connexion échouées.\";\n        }\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    verifyAuth() {\n      const token = localStorage.getItem('token');\n      const user = localStorage.getItem('user');\n      if (token && user) {\n        const parsedUser = JSON.parse(user);\n        console.log('Utilisateur connecté :', parsedUser);\n        if (parsedUser && parsedUser.type !== undefined) {\n          this.redirectUser(parsedUser.type);\n        }\n      }\n    },\n    redirectUser(userType) {\n      switch (userType) {\n        case 0:\n        case 1:\n        case 2:\n          this.$router.push('/mycalendar');\n          break;\n        case 3:\n          this.$router.push('/');\n          break;\n        case 4:\n        case 5:\n          this.$router.push('/projet');\n          break;\n        default:\n          console.log('Type utilisateur non reconnu. Contactez l\\'administrateur.');\n      }\n    },\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    }\n  }\n};","map":{"version":3,"names":["getWithCache","name","data","email","password","errorMessage","isLoading","showPassword","failedAttempts","isBlocked","mounted","verifyAuth","methods","login","response","method","message","$router","push","localStorage","setItem","token","JSON","stringify","type","firstConnect","redirectUser","error","console","request","getItem","user","parsedUser","parse","log","undefined","userType","togglePasswordVisibility"],"sources":["C:\\Users\\gongue\\Desktop\\frontsbs\\src\\components\\Auth\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex h-screen\">\r\n    <!-- Design et mise en page -->\r\n    <div class=\"items-center justify-around hidden w-full lg:flex lg:w-1/2 login_img_section\">\r\n      <div class=\"inset-0 z-0 bg-black opacity-20\"></div>\r\n      <div class=\"flex-col items-center w-full px-20 mx-auto space-y-6\">\r\n        <h1 class=\"font-sans text-4xl font-bold text-white\">SBS MANAGER</h1>\r\n        <p class=\"mt-1 text-white\">Bon retour sur votre espace de travail</p>\r\n        <div class=\"flex justify-center mt-6\">\r\n          <router-link to=\"/\" class=\"px-4 py-2 mt-4 mb-2 font-bold text-indigo-800 transition-none bg-white hover:bg-indigo-700 hover:text-white hover:-translate-y-1 rounded-2xl\">\r\n            Retour\r\n          </router-link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Formulaire de connexion -->\r\n    <div class=\"flex items-center justify-center w-full space-y-8 bg-white lg:w-1/2\">\r\n      <div class=\"w-full px-8 md:px-32 lg:px-24\">\r\n        <form @submit.prevent=\"login\" class=\"p-5 bg-white rounded-md shadow-2xl\">\r\n          <h1 class=\"mb-1 text-2xl font-bold text-gray-800\">Salut à nouveau !</h1>\r\n          <p class=\"mb-8 text-sm font-normal text-gray-600\">Bon retour</p>\r\n\r\n          <div class=\"flex items-center px-3 py-2 mb-4 border-2 rounded-2xl\">\r\n            <input v-model=\"email\" class=\"w-full pl-2 border-none outline-none\" type=\"email\" placeholder=\"Adresse email\" required />\r\n          </div>\r\n\r\n          <div class=\"flex items-center px-3 py-2 mb-12 border-2 rounded-2xl\">\r\n            <input v-model=\"password\" class=\"w-full pl-2 border-none outline-none\" :type=\"showPassword ? 'text' : 'password'\" placeholder=\"Mot de passe\" required />\r\n            <button type=\"button\" @click=\"togglePasswordVisibility\" class=\"focus:outline-none\">\r\n              <svg v-if=\"showPassword\" class=\"w-6 h-6 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5s8.268 2.943 9.542 7-3.732 7-9.542 7-8.268-2.943-9.542-7z\"></path>\r\n              </svg>\r\n              <svg v-else class=\"w-6 h-6 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5s8.268 2.943 9.542 7-3.732 7-9.542 7-8.268-2.943-9.542-7zM12 17a5 5 0 100-10 5 5 0 000 10z\"></path>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          <div v-if=\"errorMessage\" class=\"text-center text-red-500\">{{ errorMessage }}</div>\r\n\r\n          <!-- Bouton de connexion avec spinner de chargement -->\r\n          <button class=\"block w-full py-2 mt-5 mb-2 font-semibold text-white transition-all duration-500 bg-blue-900 rounded-2xl hover:bg-blue-950 hover:-translate-y-1\" :disabled=\"isLoading || isBlocked\">\r\n            <span v-if=\"isLoading\" class=\"loader\"></span>\r\n            <span v-else>Connexion</span>\r\n          </button>\r\n\r\n          <div class=\"flex justify-center mt-4\">\r\n            <router-link to=\"/ForgotComponent\" class=\"ml-2 text-sm transition-none cursor-pointer hover:text-blue-500 hover:-translate-y-1\">\r\n              Mot de passe oublié ?\r\n            </router-link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getWithCache } from '../../api.js';\r\n\r\nexport default {\r\n  name: 'LoginForm',\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      errorMessage: null,\r\n      isLoading: false,\r\n      showPassword: false,\r\n      failedAttempts: 0,\r\n      isBlocked: false\r\n    };\r\n  },\r\n  mounted() {\r\n    this.verifyAuth();\r\n  },\r\n  methods: {\r\n    async login() {\r\n      this.isLoading = true;\r\n      try {\r\n        const response = await getWithCache('/login', {\r\n          method: 'POST',\r\n          data: {\r\n            email: this.email,\r\n            password: this.password\r\n          }\r\n        });\r\n\r\n        \r\n\r\n        if (response.data.message === \"Veuillez changer votre mot de passe pour continuer.\") {\r\n          this.$router.push('/change-password');\r\n        } else {\r\n          localStorage.setItem('token', response.data.token);\r\n          localStorage.setItem('user', JSON.stringify({\r\n            type: response.data.type,\r\n            firstConnect: response.data.firstConnect\r\n          }));\r\n          this.redirectUser(response.data.type);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur Axios :', error);\r\n\r\n        if (error.response && error.response.data) {\r\n          this.errorMessage = 'Échec de la connexion : ' + error.response.data.message;\r\n        } else if (error.request) {\r\n          this.errorMessage = \"Aucune réponse du serveur. Veuillez réessayer plus tard.\";\r\n        } else {\r\n          this.errorMessage = \"Une erreur s'est produite. Veuillez réessayer.\";\r\n        }\r\n\r\n        this.failedAttempts++;\r\n        if (this.failedAttempts >= 5) {\r\n          this.isBlocked = true;\r\n          this.errorMessage = \"Votre compte est bloqué en raison de trop nombreuses tentatives de connexion échouées.\";\r\n        }\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    verifyAuth() {\r\n      const token = localStorage.getItem('token');\r\n      const user = localStorage.getItem('user');\r\n\r\n      if (token && user) {\r\n        const parsedUser = JSON.parse(user);\r\n\r\n        console.log('Utilisateur connecté :', parsedUser);\r\n\r\n        if (parsedUser && parsedUser.type !== undefined) {\r\n          this.redirectUser(parsedUser.type);\r\n        }\r\n      }\r\n    },\r\n    redirectUser(userType) {\r\n      switch (userType) {\r\n        case 0:\r\n        case 1:\r\n        case 2:\r\n          this.$router.push('/mycalendar');\r\n          break;\r\n        case 3:\r\n          this.$router.push('/');\r\n          break;\r\n        case 4:\r\n        case 5:\r\n          this.$router.push('/projet');\r\n          break;\r\n        default:\r\n          console.log('Type utilisateur non reconnu. Contactez l\\'administrateur.');\r\n      }\r\n    },\r\n    togglePasswordVisibility() {\r\n      this.showPassword = !this.showPassword;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login_img_section {\r\n  background: linear-gradient(rgba(2, 2, 2, 0.7), rgba(0, 0, 0, 0.7)),\r\n    url(https://images.unsplash.com/photo-1650825556125-060e52d40bd0?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80)\r\n      center center;\r\n}\r\n\r\n/* Styles pour le spinner de chargement */\r\n.loader {\r\n  border: 4px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 50%;\r\n  border-top: 4px solid white;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 1s linear infinite;\r\n  animation: spin 1s linear infinite;\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n}\r\n\r\n@keyframes spin {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}