import { ITimelineOptions } from '../../core/components/eventcalendar/timeline/timeline';
export declare const scheduleTimelineProps: {
    allDayText: StringConstructor;
    checkSize: NumberConstructor;
    clickToCreate: {
        type: (BooleanConstructor | StringConstructor)[];
        default: undefined;
    };
    colorsMap: ObjectConstructor;
    connections: ArrayConstructor;
    downIcon: StringConstructor;
    dragBetweenResources: {
        type: BooleanConstructor;
        default: undefined;
    };
    dragTimeStep: NumberConstructor;
    dragToCreate: {
        type: BooleanConstructor;
        default: undefined;
    };
    dragToMove: {
        type: BooleanConstructor;
        default: undefined;
    };
    dragToResize: {
        type: BooleanConstructor;
        default: undefined;
    };
    endDay: NumberConstructor;
    endTime: StringConstructor;
    eventDragEnd: FunctionConstructor;
    eventHeight: StringConstructor;
    eventList: {
        type: BooleanConstructor;
        default: undefined;
    };
    eventMap: ObjectConstructor;
    eventOrder: FunctionConstructor;
    eventOverlap: {
        type: BooleanConstructor;
        default: undefined;
    };
    extendDefaultEvent: FunctionConstructor;
    externalDrag: {
        type: BooleanConstructor;
        default: undefined;
    };
    externalDrop: {
        type: BooleanConstructor;
        default: undefined;
    };
    height: NumberConstructor;
    immutableData: {
        type: BooleanConstructor;
        default: undefined;
    };
    invalidateEvent: StringConstructor;
    invalidsMap: ObjectConstructor;
    maxDate: NumberConstructor;
    maxEventStack: {
        type: (StringConstructor | NumberConstructor)[];
        default: undefined;
    };
    minDate: NumberConstructor;
    minEventWidth: NumberConstructor;
    moreEventsPluralText: StringConstructor;
    moreEventsText: StringConstructor;
    navService: ObjectConstructor;
    navigateToEvent: ObjectConstructor;
    newEventText: StringConstructor;
    nextIcon: StringConstructor;
    nextIconRtl: StringConstructor;
    refDate: (ObjectConstructor | StringConstructor)[];
    renderBufferAfter: FunctionConstructor;
    renderBufferBefore: FunctionConstructor;
    renderDay: FunctionConstructor;
    renderDayContent: FunctionConstructor;
    renderEvent: FunctionConstructor;
    renderEventContent: FunctionConstructor;
    renderResource: FunctionConstructor;
    renderResourceHeader: FunctionConstructor;
    resources: ArrayConstructor;
    rowHeight: StringConstructor;
    scroll: NumberConstructor;
    selected: NumberConstructor;
    selectedEventsMap: ObjectConstructor;
    showAllDay: {
        type: BooleanConstructor;
        default: undefined;
    };
    showDays: {
        type: BooleanConstructor;
        default: undefined;
    };
    showEventBuffer: {
        type: BooleanConstructor;
        default: undefined;
    };
    showEventTooltip: {
        type: BooleanConstructor;
        default: undefined;
    };
    size: NumberConstructor;
    slots: ArrayConstructor;
    startDay: NumberConstructor;
    startTime: StringConstructor;
    timeCellStep: NumberConstructor;
    timeLabelStep: NumberConstructor;
    type: StringConstructor;
    virtualScroll: {
        type: BooleanConstructor;
        default: undefined;
    };
    weekNumbers: {
        type: BooleanConstructor;
        default: undefined;
    };
    width: NumberConstructor;
    onCellClick: FunctionConstructor;
    onCellDoubleClick: FunctionConstructor;
    onCellHoverIn: FunctionConstructor;
    onCellHoverOut: FunctionConstructor;
    onCellRightClick: FunctionConstructor;
    onEventClick: FunctionConstructor;
    onEventCreate: FunctionConstructor;
    onEventCreateFailed: FunctionConstructor;
    onEventCreated: FunctionConstructor;
    onEventDelete: FunctionConstructor;
    onEventDeleted: FunctionConstructor;
    onEventDoubleClick: FunctionConstructor;
    onEventDragEnd: FunctionConstructor;
    onEventDragStart: FunctionConstructor;
    onEventHoverIn: FunctionConstructor;
    onEventHoverOut: FunctionConstructor;
    onEventRightClick: FunctionConstructor;
    onEventUpdate: FunctionConstructor;
    onEventUpdateFailed: FunctionConstructor;
    onEventUpdated: FunctionConstructor;
    onLabelClick: FunctionConstructor;
    onPageChange: FunctionConstructor;
    onPageLoaded: FunctionConstructor;
    onPageLoading: FunctionConstructor;
    onSelectedDateChange: FunctionConstructor;
    onSelectedEventsChange: FunctionConstructor;
    amText: StringConstructor;
    calendarSystem: ObjectConstructor;
    dataTimezone: StringConstructor;
    dateFormat: StringConstructor;
    dateFormatFull: StringConstructor;
    dateFormatLong: StringConstructor;
    dayNames: ArrayConstructor;
    dayNamesMin: ArrayConstructor;
    dayNamesShort: ArrayConstructor;
    daySuffix: StringConstructor;
    displayTimezone: StringConstructor;
    exclusiveEndDates: {
        type: BooleanConstructor;
        default: undefined;
    };
    firstDay: NumberConstructor;
    fromText: StringConstructor;
    getDate: FunctionConstructor;
    getDay: FunctionConstructor;
    getMaxDayOfMonth: FunctionConstructor;
    getMonth: FunctionConstructor;
    getWeekNumber: FunctionConstructor;
    getYear: FunctionConstructor;
    invalid: ArrayConstructor;
    max: (ObjectConstructor | StringConstructor)[];
    min: (ObjectConstructor | StringConstructor)[];
    moment: ObjectConstructor;
    monthNames: ArrayConstructor;
    monthNamesShort: ArrayConstructor;
    monthSuffix: StringConstructor;
    pmText: StringConstructor;
    quarterText: StringConstructor;
    returnFormat: StringConstructor;
    separator: StringConstructor;
    shortYearCutoff: StringConstructor;
    timeFormat: StringConstructor;
    timezonePlugin: ObjectConstructor;
    toText: StringConstructor;
    todayText: StringConstructor;
    valid: ArrayConstructor;
    weekText: StringConstructor;
    yearSuffix: StringConstructor;
    baseTheme: StringConstructor;
    className: StringConstructor;
    cssClass: StringConstructor;
    locale: (ObjectConstructor | StringConstructor)[];
    modules: ObjectConstructor[];
    responsive: ObjectConstructor;
    rtl: {
        type: BooleanConstructor;
        default: undefined;
    };
    theme: StringConstructor;
    themeVariant: StringConstructor;
    touchUi: {
        type: (BooleanConstructor | StringConstructor)[];
        default: undefined;
    };
    onDestroy: FunctionConstructor;
    onInit: FunctionConstructor;
};
export declare const Timeline: import("vue").DefineComponent<ITimelineOptions, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<ITimelineOptions>, {
    style?: any;
    children?: any;
    dayTemplate?: any;
    baseTheme?: any;
    dangerouslySetInnerHTML?: any;
    key?: any;
    ref?: any;
}, {}>;
